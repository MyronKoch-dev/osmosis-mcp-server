import * as _118 from "./wasm/v1/authz";
import * as _119 from "./wasm/v1/genesis";
import * as _120 from "./wasm/v1/ibc";
import * as _121 from "./wasm/v1/proposal_legacy";
import * as _122 from "./wasm/v1/query";
import * as _123 from "./wasm/v1/tx";
import * as _124 from "./wasm/v1/types";
import * as _327 from "./wasm/v1/query.lcd";
import * as _328 from "./wasm/v1/query.rpc.Query";
import * as _329 from "./wasm/v1/tx.rpc.msg";
export declare namespace cosmwasm {
    namespace wasm {
        const v1: {
            MsgClientImpl: typeof _329.MsgClientImpl;
            createClientImpl: (rpc: import("../helpers").Rpc) => _329.MsgClientImpl;
            QueryClientImpl: typeof _328.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                contractInfo(request: _122.QueryContractInfoRequest): Promise<_122.QueryContractInfoResponse>;
                contractHistory(request: _122.QueryContractHistoryRequest): Promise<_122.QueryContractHistoryResponse>;
                contractsByCode(request: _122.QueryContractsByCodeRequest): Promise<_122.QueryContractsByCodeResponse>;
                allContractState(request: _122.QueryAllContractStateRequest): Promise<_122.QueryAllContractStateResponse>;
                rawContractState(request: _122.QueryRawContractStateRequest): Promise<_122.QueryRawContractStateResponse>;
                smartContractState(request: _122.QuerySmartContractStateRequest): Promise<_122.QuerySmartContractStateResponse>;
                code(request: _122.QueryCodeRequest): Promise<_122.QueryCodeResponse>;
                codes(request?: _122.QueryCodesRequest): Promise<_122.QueryCodesResponse>;
                pinnedCodes(request?: _122.QueryPinnedCodesRequest): Promise<_122.QueryPinnedCodesResponse>;
                params(request?: _122.QueryParamsRequest): Promise<_122.QueryParamsResponse>;
                contractsByCreator(request: _122.QueryContractsByCreatorRequest): Promise<_122.QueryContractsByCreatorResponse>;
                buildAddress(request: _122.QueryBuildAddressRequest): Promise<_122.QueryBuildAddressResponse>;
            };
            LCDQueryClient: typeof _327.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    storeCode(value: _123.MsgStoreCode): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    instantiateContract(value: _123.MsgInstantiateContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    instantiateContract2(value: _123.MsgInstantiateContract2): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    executeContract(value: _123.MsgExecuteContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    migrateContract(value: _123.MsgMigrateContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateAdmin(value: _123.MsgUpdateAdmin): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    clearAdmin(value: _123.MsgClearAdmin): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateInstantiateConfig(value: _123.MsgUpdateInstantiateConfig): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateParams(value: _123.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    sudoContract(value: _123.MsgSudoContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    pinCodes(value: _123.MsgPinCodes): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    unpinCodes(value: _123.MsgUnpinCodes): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    storeAndInstantiateContract(value: _123.MsgStoreAndInstantiateContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    removeCodeUploadParamsAddresses(value: _123.MsgRemoveCodeUploadParamsAddresses): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    addCodeUploadParamsAddresses(value: _123.MsgAddCodeUploadParamsAddresses): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    storeAndMigrateContract(value: _123.MsgStoreAndMigrateContract): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateContractLabel(value: _123.MsgUpdateContractLabel): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    storeCode(value: _123.MsgStoreCode): {
                        typeUrl: string;
                        value: _123.MsgStoreCode;
                    };
                    instantiateContract(value: _123.MsgInstantiateContract): {
                        typeUrl: string;
                        value: _123.MsgInstantiateContract;
                    };
                    instantiateContract2(value: _123.MsgInstantiateContract2): {
                        typeUrl: string;
                        value: _123.MsgInstantiateContract2;
                    };
                    executeContract(value: _123.MsgExecuteContract): {
                        typeUrl: string;
                        value: _123.MsgExecuteContract;
                    };
                    migrateContract(value: _123.MsgMigrateContract): {
                        typeUrl: string;
                        value: _123.MsgMigrateContract;
                    };
                    updateAdmin(value: _123.MsgUpdateAdmin): {
                        typeUrl: string;
                        value: _123.MsgUpdateAdmin;
                    };
                    clearAdmin(value: _123.MsgClearAdmin): {
                        typeUrl: string;
                        value: _123.MsgClearAdmin;
                    };
                    updateInstantiateConfig(value: _123.MsgUpdateInstantiateConfig): {
                        typeUrl: string;
                        value: _123.MsgUpdateInstantiateConfig;
                    };
                    updateParams(value: _123.MsgUpdateParams): {
                        typeUrl: string;
                        value: _123.MsgUpdateParams;
                    };
                    sudoContract(value: _123.MsgSudoContract): {
                        typeUrl: string;
                        value: _123.MsgSudoContract;
                    };
                    pinCodes(value: _123.MsgPinCodes): {
                        typeUrl: string;
                        value: _123.MsgPinCodes;
                    };
                    unpinCodes(value: _123.MsgUnpinCodes): {
                        typeUrl: string;
                        value: _123.MsgUnpinCodes;
                    };
                    storeAndInstantiateContract(value: _123.MsgStoreAndInstantiateContract): {
                        typeUrl: string;
                        value: _123.MsgStoreAndInstantiateContract;
                    };
                    removeCodeUploadParamsAddresses(value: _123.MsgRemoveCodeUploadParamsAddresses): {
                        typeUrl: string;
                        value: _123.MsgRemoveCodeUploadParamsAddresses;
                    };
                    addCodeUploadParamsAddresses(value: _123.MsgAddCodeUploadParamsAddresses): {
                        typeUrl: string;
                        value: _123.MsgAddCodeUploadParamsAddresses;
                    };
                    storeAndMigrateContract(value: _123.MsgStoreAndMigrateContract): {
                        typeUrl: string;
                        value: _123.MsgStoreAndMigrateContract;
                    };
                    updateContractLabel(value: _123.MsgUpdateContractLabel): {
                        typeUrl: string;
                        value: _123.MsgUpdateContractLabel;
                    };
                };
                fromPartial: {
                    storeCode(value: _123.MsgStoreCode): {
                        typeUrl: string;
                        value: _123.MsgStoreCode;
                    };
                    instantiateContract(value: _123.MsgInstantiateContract): {
                        typeUrl: string;
                        value: _123.MsgInstantiateContract;
                    };
                    instantiateContract2(value: _123.MsgInstantiateContract2): {
                        typeUrl: string;
                        value: _123.MsgInstantiateContract2;
                    };
                    executeContract(value: _123.MsgExecuteContract): {
                        typeUrl: string;
                        value: _123.MsgExecuteContract;
                    };
                    migrateContract(value: _123.MsgMigrateContract): {
                        typeUrl: string;
                        value: _123.MsgMigrateContract;
                    };
                    updateAdmin(value: _123.MsgUpdateAdmin): {
                        typeUrl: string;
                        value: _123.MsgUpdateAdmin;
                    };
                    clearAdmin(value: _123.MsgClearAdmin): {
                        typeUrl: string;
                        value: _123.MsgClearAdmin;
                    };
                    updateInstantiateConfig(value: _123.MsgUpdateInstantiateConfig): {
                        typeUrl: string;
                        value: _123.MsgUpdateInstantiateConfig;
                    };
                    updateParams(value: _123.MsgUpdateParams): {
                        typeUrl: string;
                        value: _123.MsgUpdateParams;
                    };
                    sudoContract(value: _123.MsgSudoContract): {
                        typeUrl: string;
                        value: _123.MsgSudoContract;
                    };
                    pinCodes(value: _123.MsgPinCodes): {
                        typeUrl: string;
                        value: _123.MsgPinCodes;
                    };
                    unpinCodes(value: _123.MsgUnpinCodes): {
                        typeUrl: string;
                        value: _123.MsgUnpinCodes;
                    };
                    storeAndInstantiateContract(value: _123.MsgStoreAndInstantiateContract): {
                        typeUrl: string;
                        value: _123.MsgStoreAndInstantiateContract;
                    };
                    removeCodeUploadParamsAddresses(value: _123.MsgRemoveCodeUploadParamsAddresses): {
                        typeUrl: string;
                        value: _123.MsgRemoveCodeUploadParamsAddresses;
                    };
                    addCodeUploadParamsAddresses(value: _123.MsgAddCodeUploadParamsAddresses): {
                        typeUrl: string;
                        value: _123.MsgAddCodeUploadParamsAddresses;
                    };
                    storeAndMigrateContract(value: _123.MsgStoreAndMigrateContract): {
                        typeUrl: string;
                        value: _123.MsgStoreAndMigrateContract;
                    };
                    updateContractLabel(value: _123.MsgUpdateContractLabel): {
                        typeUrl: string;
                        value: _123.MsgUpdateContractLabel;
                    };
                };
            };
            AminoConverter: {
                "/cosmwasm.wasm.v1.MsgStoreCode": {
                    aminoType: string;
                    toAmino: (message: _123.MsgStoreCode) => _123.MsgStoreCodeAmino;
                    fromAmino: (object: _123.MsgStoreCodeAmino) => _123.MsgStoreCode;
                };
                "/cosmwasm.wasm.v1.MsgInstantiateContract": {
                    aminoType: string;
                    toAmino: (message: _123.MsgInstantiateContract) => _123.MsgInstantiateContractAmino;
                    fromAmino: (object: _123.MsgInstantiateContractAmino) => _123.MsgInstantiateContract;
                };
                "/cosmwasm.wasm.v1.MsgInstantiateContract2": {
                    aminoType: string;
                    toAmino: (message: _123.MsgInstantiateContract2) => _123.MsgInstantiateContract2Amino;
                    fromAmino: (object: _123.MsgInstantiateContract2Amino) => _123.MsgInstantiateContract2;
                };
                "/cosmwasm.wasm.v1.MsgExecuteContract": {
                    aminoType: string;
                    toAmino: (message: _123.MsgExecuteContract) => _123.MsgExecuteContractAmino;
                    fromAmino: (object: _123.MsgExecuteContractAmino) => _123.MsgExecuteContract;
                };
                "/cosmwasm.wasm.v1.MsgMigrateContract": {
                    aminoType: string;
                    toAmino: (message: _123.MsgMigrateContract) => _123.MsgMigrateContractAmino;
                    fromAmino: (object: _123.MsgMigrateContractAmino) => _123.MsgMigrateContract;
                };
                "/cosmwasm.wasm.v1.MsgUpdateAdmin": {
                    aminoType: string;
                    toAmino: (message: _123.MsgUpdateAdmin) => _123.MsgUpdateAdminAmino;
                    fromAmino: (object: _123.MsgUpdateAdminAmino) => _123.MsgUpdateAdmin;
                };
                "/cosmwasm.wasm.v1.MsgClearAdmin": {
                    aminoType: string;
                    toAmino: (message: _123.MsgClearAdmin) => _123.MsgClearAdminAmino;
                    fromAmino: (object: _123.MsgClearAdminAmino) => _123.MsgClearAdmin;
                };
                "/cosmwasm.wasm.v1.MsgUpdateInstantiateConfig": {
                    aminoType: string;
                    toAmino: (message: _123.MsgUpdateInstantiateConfig) => _123.MsgUpdateInstantiateConfigAmino;
                    fromAmino: (object: _123.MsgUpdateInstantiateConfigAmino) => _123.MsgUpdateInstantiateConfig;
                };
                "/cosmwasm.wasm.v1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: (message: _123.MsgUpdateParams) => _123.MsgUpdateParamsAmino;
                    fromAmino: (object: _123.MsgUpdateParamsAmino) => _123.MsgUpdateParams;
                };
                "/cosmwasm.wasm.v1.MsgSudoContract": {
                    aminoType: string;
                    toAmino: (message: _123.MsgSudoContract) => _123.MsgSudoContractAmino;
                    fromAmino: (object: _123.MsgSudoContractAmino) => _123.MsgSudoContract;
                };
                "/cosmwasm.wasm.v1.MsgPinCodes": {
                    aminoType: string;
                    toAmino: (message: _123.MsgPinCodes) => _123.MsgPinCodesAmino;
                    fromAmino: (object: _123.MsgPinCodesAmino) => _123.MsgPinCodes;
                };
                "/cosmwasm.wasm.v1.MsgUnpinCodes": {
                    aminoType: string;
                    toAmino: (message: _123.MsgUnpinCodes) => _123.MsgUnpinCodesAmino;
                    fromAmino: (object: _123.MsgUnpinCodesAmino) => _123.MsgUnpinCodes;
                };
                "/cosmwasm.wasm.v1.MsgStoreAndInstantiateContract": {
                    aminoType: string;
                    toAmino: (message: _123.MsgStoreAndInstantiateContract) => _123.MsgStoreAndInstantiateContractAmino;
                    fromAmino: (object: _123.MsgStoreAndInstantiateContractAmino) => _123.MsgStoreAndInstantiateContract;
                };
                "/cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses": {
                    aminoType: string;
                    toAmino: (message: _123.MsgRemoveCodeUploadParamsAddresses) => _123.MsgRemoveCodeUploadParamsAddressesAmino;
                    fromAmino: (object: _123.MsgRemoveCodeUploadParamsAddressesAmino) => _123.MsgRemoveCodeUploadParamsAddresses;
                };
                "/cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses": {
                    aminoType: string;
                    toAmino: (message: _123.MsgAddCodeUploadParamsAddresses) => _123.MsgAddCodeUploadParamsAddressesAmino;
                    fromAmino: (object: _123.MsgAddCodeUploadParamsAddressesAmino) => _123.MsgAddCodeUploadParamsAddresses;
                };
                "/cosmwasm.wasm.v1.MsgStoreAndMigrateContract": {
                    aminoType: string;
                    toAmino: (message: _123.MsgStoreAndMigrateContract) => _123.MsgStoreAndMigrateContractAmino;
                    fromAmino: (object: _123.MsgStoreAndMigrateContractAmino) => _123.MsgStoreAndMigrateContract;
                };
                "/cosmwasm.wasm.v1.MsgUpdateContractLabel": {
                    aminoType: string;
                    toAmino: (message: _123.MsgUpdateContractLabel) => _123.MsgUpdateContractLabelAmino;
                    fromAmino: (object: _123.MsgUpdateContractLabelAmino) => _123.MsgUpdateContractLabel;
                };
            };
            accessTypeFromJSON(object: any): _124.AccessType;
            accessTypeToJSON(object: _124.AccessType): string;
            contractCodeHistoryOperationTypeFromJSON(object: any): _124.ContractCodeHistoryOperationType;
            contractCodeHistoryOperationTypeToJSON(object: _124.ContractCodeHistoryOperationType): string;
            AccessType: typeof _124.AccessType;
            AccessTypeSDKType: typeof _124.AccessType;
            AccessTypeAmino: typeof _124.AccessType;
            ContractCodeHistoryOperationType: typeof _124.ContractCodeHistoryOperationType;
            ContractCodeHistoryOperationTypeSDKType: typeof _124.ContractCodeHistoryOperationType;
            ContractCodeHistoryOperationTypeAmino: typeof _124.ContractCodeHistoryOperationType;
            AccessTypeParam: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _124.AccessTypeParam;
                isSDK(o: any): o is _124.AccessTypeParamSDKType;
                isAmino(o: any): o is _124.AccessTypeParamAmino;
                encode(message: _124.AccessTypeParam, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _124.AccessTypeParam;
                fromPartial(object: Partial<_124.AccessTypeParam>): _124.AccessTypeParam;
                fromAmino(object: _124.AccessTypeParamAmino): _124.AccessTypeParam;
                toAmino(message: _124.AccessTypeParam): _124.AccessTypeParamAmino;
                fromAminoMsg(object: _124.AccessTypeParamAminoMsg): _124.AccessTypeParam;
                toAminoMsg(message: _124.AccessTypeParam): _124.AccessTypeParamAminoMsg;
                fromProtoMsg(message: _124.AccessTypeParamProtoMsg): _124.AccessTypeParam;
                toProto(message: _124.AccessTypeParam): Uint8Array;
                toProtoMsg(message: _124.AccessTypeParam): _124.AccessTypeParamProtoMsg;
            };
            AccessConfig: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _124.AccessConfig;
                isSDK(o: any): o is _124.AccessConfigSDKType;
                isAmino(o: any): o is _124.AccessConfigAmino;
                encode(message: _124.AccessConfig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _124.AccessConfig;
                fromPartial(object: Partial<_124.AccessConfig>): _124.AccessConfig;
                fromAmino(object: _124.AccessConfigAmino): _124.AccessConfig;
                toAmino(message: _124.AccessConfig): _124.AccessConfigAmino;
                fromAminoMsg(object: _124.AccessConfigAminoMsg): _124.AccessConfig;
                toAminoMsg(message: _124.AccessConfig): _124.AccessConfigAminoMsg;
                fromProtoMsg(message: _124.AccessConfigProtoMsg): _124.AccessConfig;
                toProto(message: _124.AccessConfig): Uint8Array;
                toProtoMsg(message: _124.AccessConfig): _124.AccessConfigProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _124.Params;
                isSDK(o: any): o is _124.ParamsSDKType;
                isAmino(o: any): o is _124.ParamsAmino;
                encode(message: _124.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _124.Params;
                fromPartial(object: Partial<_124.Params>): _124.Params;
                fromAmino(object: _124.ParamsAmino): _124.Params;
                toAmino(message: _124.Params): _124.ParamsAmino;
                fromAminoMsg(object: _124.ParamsAminoMsg): _124.Params;
                toAminoMsg(message: _124.Params): _124.ParamsAminoMsg;
                fromProtoMsg(message: _124.ParamsProtoMsg): _124.Params;
                toProto(message: _124.Params): Uint8Array;
                toProtoMsg(message: _124.Params): _124.ParamsProtoMsg;
            };
            CodeInfo: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _124.CodeInfo;
                isSDK(o: any): o is _124.CodeInfoSDKType;
                isAmino(o: any): o is _124.CodeInfoAmino;
                encode(message: _124.CodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _124.CodeInfo;
                fromPartial(object: Partial<_124.CodeInfo>): _124.CodeInfo;
                fromAmino(object: _124.CodeInfoAmino): _124.CodeInfo;
                toAmino(message: _124.CodeInfo): _124.CodeInfoAmino;
                fromAminoMsg(object: _124.CodeInfoAminoMsg): _124.CodeInfo;
                toAminoMsg(message: _124.CodeInfo): _124.CodeInfoAminoMsg;
                fromProtoMsg(message: _124.CodeInfoProtoMsg): _124.CodeInfo;
                toProto(message: _124.CodeInfo): Uint8Array;
                toProtoMsg(message: _124.CodeInfo): _124.CodeInfoProtoMsg;
            };
            ContractInfo: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _124.ContractInfo;
                isSDK(o: any): o is _124.ContractInfoSDKType;
                isAmino(o: any): o is _124.ContractInfoAmino;
                encode(message: _124.ContractInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _124.ContractInfo;
                fromPartial(object: Partial<_124.ContractInfo>): _124.ContractInfo;
                fromAmino(object: _124.ContractInfoAmino): _124.ContractInfo;
                toAmino(message: _124.ContractInfo): _124.ContractInfoAmino;
                fromAminoMsg(object: _124.ContractInfoAminoMsg): _124.ContractInfo;
                toAminoMsg(message: _124.ContractInfo): _124.ContractInfoAminoMsg;
                fromProtoMsg(message: _124.ContractInfoProtoMsg): _124.ContractInfo;
                toProto(message: _124.ContractInfo): Uint8Array;
                toProtoMsg(message: _124.ContractInfo): _124.ContractInfoProtoMsg;
            };
            ContractCodeHistoryEntry: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _124.ContractCodeHistoryEntry;
                isSDK(o: any): o is _124.ContractCodeHistoryEntrySDKType;
                isAmino(o: any): o is _124.ContractCodeHistoryEntryAmino;
                encode(message: _124.ContractCodeHistoryEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _124.ContractCodeHistoryEntry;
                fromPartial(object: Partial<_124.ContractCodeHistoryEntry>): _124.ContractCodeHistoryEntry;
                fromAmino(object: _124.ContractCodeHistoryEntryAmino): _124.ContractCodeHistoryEntry;
                toAmino(message: _124.ContractCodeHistoryEntry): _124.ContractCodeHistoryEntryAmino;
                fromAminoMsg(object: _124.ContractCodeHistoryEntryAminoMsg): _124.ContractCodeHistoryEntry;
                toAminoMsg(message: _124.ContractCodeHistoryEntry): _124.ContractCodeHistoryEntryAminoMsg;
                fromProtoMsg(message: _124.ContractCodeHistoryEntryProtoMsg): _124.ContractCodeHistoryEntry;
                toProto(message: _124.ContractCodeHistoryEntry): Uint8Array;
                toProtoMsg(message: _124.ContractCodeHistoryEntry): _124.ContractCodeHistoryEntryProtoMsg;
            };
            AbsoluteTxPosition: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _124.AbsoluteTxPosition;
                isSDK(o: any): o is _124.AbsoluteTxPositionSDKType;
                isAmino(o: any): o is _124.AbsoluteTxPositionAmino;
                encode(message: _124.AbsoluteTxPosition, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _124.AbsoluteTxPosition;
                fromPartial(object: Partial<_124.AbsoluteTxPosition>): _124.AbsoluteTxPosition;
                fromAmino(object: _124.AbsoluteTxPositionAmino): _124.AbsoluteTxPosition;
                toAmino(message: _124.AbsoluteTxPosition): _124.AbsoluteTxPositionAmino;
                fromAminoMsg(object: _124.AbsoluteTxPositionAminoMsg): _124.AbsoluteTxPosition;
                toAminoMsg(message: _124.AbsoluteTxPosition): _124.AbsoluteTxPositionAminoMsg;
                fromProtoMsg(message: _124.AbsoluteTxPositionProtoMsg): _124.AbsoluteTxPosition;
                toProto(message: _124.AbsoluteTxPosition): Uint8Array;
                toProtoMsg(message: _124.AbsoluteTxPosition): _124.AbsoluteTxPositionProtoMsg;
            };
            Model: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _124.Model;
                isSDK(o: any): o is _124.ModelSDKType;
                isAmino(o: any): o is _124.ModelAmino;
                encode(message: _124.Model, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _124.Model;
                fromPartial(object: Partial<_124.Model>): _124.Model;
                fromAmino(object: _124.ModelAmino): _124.Model;
                toAmino(message: _124.Model): _124.ModelAmino;
                fromAminoMsg(object: _124.ModelAminoMsg): _124.Model;
                toAminoMsg(message: _124.Model): _124.ModelAminoMsg;
                fromProtoMsg(message: _124.ModelProtoMsg): _124.Model;
                toProto(message: _124.Model): Uint8Array;
                toProtoMsg(message: _124.Model): _124.ModelProtoMsg;
            };
            MsgStoreCode: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgStoreCode;
                isSDK(o: any): o is _123.MsgStoreCodeSDKType;
                isAmino(o: any): o is _123.MsgStoreCodeAmino;
                encode(message: _123.MsgStoreCode, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgStoreCode;
                fromPartial(object: Partial<_123.MsgStoreCode>): _123.MsgStoreCode;
                fromAmino(object: _123.MsgStoreCodeAmino): _123.MsgStoreCode;
                toAmino(message: _123.MsgStoreCode): _123.MsgStoreCodeAmino;
                fromAminoMsg(object: _123.MsgStoreCodeAminoMsg): _123.MsgStoreCode;
                toAminoMsg(message: _123.MsgStoreCode): _123.MsgStoreCodeAminoMsg;
                fromProtoMsg(message: _123.MsgStoreCodeProtoMsg): _123.MsgStoreCode;
                toProto(message: _123.MsgStoreCode): Uint8Array;
                toProtoMsg(message: _123.MsgStoreCode): _123.MsgStoreCodeProtoMsg;
            };
            MsgStoreCodeResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgStoreCodeResponse;
                isSDK(o: any): o is _123.MsgStoreCodeResponseSDKType;
                isAmino(o: any): o is _123.MsgStoreCodeResponseAmino;
                encode(message: _123.MsgStoreCodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgStoreCodeResponse;
                fromPartial(object: Partial<_123.MsgStoreCodeResponse>): _123.MsgStoreCodeResponse;
                fromAmino(object: _123.MsgStoreCodeResponseAmino): _123.MsgStoreCodeResponse;
                toAmino(message: _123.MsgStoreCodeResponse): _123.MsgStoreCodeResponseAmino;
                fromAminoMsg(object: _123.MsgStoreCodeResponseAminoMsg): _123.MsgStoreCodeResponse;
                toAminoMsg(message: _123.MsgStoreCodeResponse): _123.MsgStoreCodeResponseAminoMsg;
                fromProtoMsg(message: _123.MsgStoreCodeResponseProtoMsg): _123.MsgStoreCodeResponse;
                toProto(message: _123.MsgStoreCodeResponse): Uint8Array;
                toProtoMsg(message: _123.MsgStoreCodeResponse): _123.MsgStoreCodeResponseProtoMsg;
            };
            MsgInstantiateContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgInstantiateContract;
                isSDK(o: any): o is _123.MsgInstantiateContractSDKType;
                isAmino(o: any): o is _123.MsgInstantiateContractAmino;
                encode(message: _123.MsgInstantiateContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgInstantiateContract;
                fromPartial(object: Partial<_123.MsgInstantiateContract>): _123.MsgInstantiateContract;
                fromAmino(object: _123.MsgInstantiateContractAmino): _123.MsgInstantiateContract;
                toAmino(message: _123.MsgInstantiateContract): _123.MsgInstantiateContractAmino;
                fromAminoMsg(object: _123.MsgInstantiateContractAminoMsg): _123.MsgInstantiateContract;
                toAminoMsg(message: _123.MsgInstantiateContract): _123.MsgInstantiateContractAminoMsg;
                fromProtoMsg(message: _123.MsgInstantiateContractProtoMsg): _123.MsgInstantiateContract;
                toProto(message: _123.MsgInstantiateContract): Uint8Array;
                toProtoMsg(message: _123.MsgInstantiateContract): _123.MsgInstantiateContractProtoMsg;
            };
            MsgInstantiateContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgInstantiateContractResponse;
                isSDK(o: any): o is _123.MsgInstantiateContractResponseSDKType;
                isAmino(o: any): o is _123.MsgInstantiateContractResponseAmino;
                encode(message: _123.MsgInstantiateContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgInstantiateContractResponse;
                fromPartial(object: Partial<_123.MsgInstantiateContractResponse>): _123.MsgInstantiateContractResponse;
                fromAmino(object: _123.MsgInstantiateContractResponseAmino): _123.MsgInstantiateContractResponse;
                toAmino(message: _123.MsgInstantiateContractResponse): _123.MsgInstantiateContractResponseAmino;
                fromAminoMsg(object: _123.MsgInstantiateContractResponseAminoMsg): _123.MsgInstantiateContractResponse;
                toAminoMsg(message: _123.MsgInstantiateContractResponse): _123.MsgInstantiateContractResponseAminoMsg;
                fromProtoMsg(message: _123.MsgInstantiateContractResponseProtoMsg): _123.MsgInstantiateContractResponse;
                toProto(message: _123.MsgInstantiateContractResponse): Uint8Array;
                toProtoMsg(message: _123.MsgInstantiateContractResponse): _123.MsgInstantiateContractResponseProtoMsg;
            };
            MsgInstantiateContract2: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgInstantiateContract2;
                isSDK(o: any): o is _123.MsgInstantiateContract2SDKType;
                isAmino(o: any): o is _123.MsgInstantiateContract2Amino;
                encode(message: _123.MsgInstantiateContract2, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgInstantiateContract2;
                fromPartial(object: Partial<_123.MsgInstantiateContract2>): _123.MsgInstantiateContract2;
                fromAmino(object: _123.MsgInstantiateContract2Amino): _123.MsgInstantiateContract2;
                toAmino(message: _123.MsgInstantiateContract2): _123.MsgInstantiateContract2Amino;
                fromAminoMsg(object: _123.MsgInstantiateContract2AminoMsg): _123.MsgInstantiateContract2;
                toAminoMsg(message: _123.MsgInstantiateContract2): _123.MsgInstantiateContract2AminoMsg;
                fromProtoMsg(message: _123.MsgInstantiateContract2ProtoMsg): _123.MsgInstantiateContract2;
                toProto(message: _123.MsgInstantiateContract2): Uint8Array;
                toProtoMsg(message: _123.MsgInstantiateContract2): _123.MsgInstantiateContract2ProtoMsg;
            };
            MsgInstantiateContract2Response: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgInstantiateContract2Response;
                isSDK(o: any): o is _123.MsgInstantiateContract2ResponseSDKType;
                isAmino(o: any): o is _123.MsgInstantiateContract2ResponseAmino;
                encode(message: _123.MsgInstantiateContract2Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgInstantiateContract2Response;
                fromPartial(object: Partial<_123.MsgInstantiateContract2Response>): _123.MsgInstantiateContract2Response;
                fromAmino(object: _123.MsgInstantiateContract2ResponseAmino): _123.MsgInstantiateContract2Response;
                toAmino(message: _123.MsgInstantiateContract2Response): _123.MsgInstantiateContract2ResponseAmino;
                fromAminoMsg(object: _123.MsgInstantiateContract2ResponseAminoMsg): _123.MsgInstantiateContract2Response;
                toAminoMsg(message: _123.MsgInstantiateContract2Response): _123.MsgInstantiateContract2ResponseAminoMsg;
                fromProtoMsg(message: _123.MsgInstantiateContract2ResponseProtoMsg): _123.MsgInstantiateContract2Response;
                toProto(message: _123.MsgInstantiateContract2Response): Uint8Array;
                toProtoMsg(message: _123.MsgInstantiateContract2Response): _123.MsgInstantiateContract2ResponseProtoMsg;
            };
            MsgExecuteContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgExecuteContract;
                isSDK(o: any): o is _123.MsgExecuteContractSDKType;
                isAmino(o: any): o is _123.MsgExecuteContractAmino;
                encode(message: _123.MsgExecuteContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgExecuteContract;
                fromPartial(object: Partial<_123.MsgExecuteContract>): _123.MsgExecuteContract;
                fromAmino(object: _123.MsgExecuteContractAmino): _123.MsgExecuteContract;
                toAmino(message: _123.MsgExecuteContract): _123.MsgExecuteContractAmino;
                fromAminoMsg(object: _123.MsgExecuteContractAminoMsg): _123.MsgExecuteContract;
                toAminoMsg(message: _123.MsgExecuteContract): _123.MsgExecuteContractAminoMsg;
                fromProtoMsg(message: _123.MsgExecuteContractProtoMsg): _123.MsgExecuteContract;
                toProto(message: _123.MsgExecuteContract): Uint8Array;
                toProtoMsg(message: _123.MsgExecuteContract): _123.MsgExecuteContractProtoMsg;
            };
            MsgExecuteContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgExecuteContractResponse;
                isSDK(o: any): o is _123.MsgExecuteContractResponseSDKType;
                isAmino(o: any): o is _123.MsgExecuteContractResponseAmino;
                encode(message: _123.MsgExecuteContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgExecuteContractResponse;
                fromPartial(object: Partial<_123.MsgExecuteContractResponse>): _123.MsgExecuteContractResponse;
                fromAmino(object: _123.MsgExecuteContractResponseAmino): _123.MsgExecuteContractResponse;
                toAmino(message: _123.MsgExecuteContractResponse): _123.MsgExecuteContractResponseAmino;
                fromAminoMsg(object: _123.MsgExecuteContractResponseAminoMsg): _123.MsgExecuteContractResponse;
                toAminoMsg(message: _123.MsgExecuteContractResponse): _123.MsgExecuteContractResponseAminoMsg;
                fromProtoMsg(message: _123.MsgExecuteContractResponseProtoMsg): _123.MsgExecuteContractResponse;
                toProto(message: _123.MsgExecuteContractResponse): Uint8Array;
                toProtoMsg(message: _123.MsgExecuteContractResponse): _123.MsgExecuteContractResponseProtoMsg;
            };
            MsgMigrateContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgMigrateContract;
                isSDK(o: any): o is _123.MsgMigrateContractSDKType;
                isAmino(o: any): o is _123.MsgMigrateContractAmino;
                encode(message: _123.MsgMigrateContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgMigrateContract;
                fromPartial(object: Partial<_123.MsgMigrateContract>): _123.MsgMigrateContract;
                fromAmino(object: _123.MsgMigrateContractAmino): _123.MsgMigrateContract;
                toAmino(message: _123.MsgMigrateContract): _123.MsgMigrateContractAmino;
                fromAminoMsg(object: _123.MsgMigrateContractAminoMsg): _123.MsgMigrateContract;
                toAminoMsg(message: _123.MsgMigrateContract): _123.MsgMigrateContractAminoMsg;
                fromProtoMsg(message: _123.MsgMigrateContractProtoMsg): _123.MsgMigrateContract;
                toProto(message: _123.MsgMigrateContract): Uint8Array;
                toProtoMsg(message: _123.MsgMigrateContract): _123.MsgMigrateContractProtoMsg;
            };
            MsgMigrateContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgMigrateContractResponse;
                isSDK(o: any): o is _123.MsgMigrateContractResponseSDKType;
                isAmino(o: any): o is _123.MsgMigrateContractResponseAmino;
                encode(message: _123.MsgMigrateContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgMigrateContractResponse;
                fromPartial(object: Partial<_123.MsgMigrateContractResponse>): _123.MsgMigrateContractResponse;
                fromAmino(object: _123.MsgMigrateContractResponseAmino): _123.MsgMigrateContractResponse;
                toAmino(message: _123.MsgMigrateContractResponse): _123.MsgMigrateContractResponseAmino;
                fromAminoMsg(object: _123.MsgMigrateContractResponseAminoMsg): _123.MsgMigrateContractResponse;
                toAminoMsg(message: _123.MsgMigrateContractResponse): _123.MsgMigrateContractResponseAminoMsg;
                fromProtoMsg(message: _123.MsgMigrateContractResponseProtoMsg): _123.MsgMigrateContractResponse;
                toProto(message: _123.MsgMigrateContractResponse): Uint8Array;
                toProtoMsg(message: _123.MsgMigrateContractResponse): _123.MsgMigrateContractResponseProtoMsg;
            };
            MsgUpdateAdmin: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUpdateAdmin;
                isSDK(o: any): o is _123.MsgUpdateAdminSDKType;
                isAmino(o: any): o is _123.MsgUpdateAdminAmino;
                encode(message: _123.MsgUpdateAdmin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUpdateAdmin;
                fromPartial(object: Partial<_123.MsgUpdateAdmin>): _123.MsgUpdateAdmin;
                fromAmino(object: _123.MsgUpdateAdminAmino): _123.MsgUpdateAdmin;
                toAmino(message: _123.MsgUpdateAdmin): _123.MsgUpdateAdminAmino;
                fromAminoMsg(object: _123.MsgUpdateAdminAminoMsg): _123.MsgUpdateAdmin;
                toAminoMsg(message: _123.MsgUpdateAdmin): _123.MsgUpdateAdminAminoMsg;
                fromProtoMsg(message: _123.MsgUpdateAdminProtoMsg): _123.MsgUpdateAdmin;
                toProto(message: _123.MsgUpdateAdmin): Uint8Array;
                toProtoMsg(message: _123.MsgUpdateAdmin): _123.MsgUpdateAdminProtoMsg;
            };
            MsgUpdateAdminResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUpdateAdminResponse;
                isSDK(o: any): o is _123.MsgUpdateAdminResponseSDKType;
                isAmino(o: any): o is _123.MsgUpdateAdminResponseAmino;
                encode(_: _123.MsgUpdateAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUpdateAdminResponse;
                fromPartial(_: Partial<_123.MsgUpdateAdminResponse>): _123.MsgUpdateAdminResponse;
                fromAmino(_: _123.MsgUpdateAdminResponseAmino): _123.MsgUpdateAdminResponse;
                toAmino(_: _123.MsgUpdateAdminResponse): _123.MsgUpdateAdminResponseAmino;
                fromAminoMsg(object: _123.MsgUpdateAdminResponseAminoMsg): _123.MsgUpdateAdminResponse;
                toAminoMsg(message: _123.MsgUpdateAdminResponse): _123.MsgUpdateAdminResponseAminoMsg;
                fromProtoMsg(message: _123.MsgUpdateAdminResponseProtoMsg): _123.MsgUpdateAdminResponse;
                toProto(message: _123.MsgUpdateAdminResponse): Uint8Array;
                toProtoMsg(message: _123.MsgUpdateAdminResponse): _123.MsgUpdateAdminResponseProtoMsg;
            };
            MsgClearAdmin: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgClearAdmin;
                isSDK(o: any): o is _123.MsgClearAdminSDKType;
                isAmino(o: any): o is _123.MsgClearAdminAmino;
                encode(message: _123.MsgClearAdmin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgClearAdmin;
                fromPartial(object: Partial<_123.MsgClearAdmin>): _123.MsgClearAdmin;
                fromAmino(object: _123.MsgClearAdminAmino): _123.MsgClearAdmin;
                toAmino(message: _123.MsgClearAdmin): _123.MsgClearAdminAmino;
                fromAminoMsg(object: _123.MsgClearAdminAminoMsg): _123.MsgClearAdmin;
                toAminoMsg(message: _123.MsgClearAdmin): _123.MsgClearAdminAminoMsg;
                fromProtoMsg(message: _123.MsgClearAdminProtoMsg): _123.MsgClearAdmin;
                toProto(message: _123.MsgClearAdmin): Uint8Array;
                toProtoMsg(message: _123.MsgClearAdmin): _123.MsgClearAdminProtoMsg;
            };
            MsgClearAdminResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgClearAdminResponse;
                isSDK(o: any): o is _123.MsgClearAdminResponseSDKType;
                isAmino(o: any): o is _123.MsgClearAdminResponseAmino;
                encode(_: _123.MsgClearAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgClearAdminResponse;
                fromPartial(_: Partial<_123.MsgClearAdminResponse>): _123.MsgClearAdminResponse;
                fromAmino(_: _123.MsgClearAdminResponseAmino): _123.MsgClearAdminResponse;
                toAmino(_: _123.MsgClearAdminResponse): _123.MsgClearAdminResponseAmino;
                fromAminoMsg(object: _123.MsgClearAdminResponseAminoMsg): _123.MsgClearAdminResponse;
                toAminoMsg(message: _123.MsgClearAdminResponse): _123.MsgClearAdminResponseAminoMsg;
                fromProtoMsg(message: _123.MsgClearAdminResponseProtoMsg): _123.MsgClearAdminResponse;
                toProto(message: _123.MsgClearAdminResponse): Uint8Array;
                toProtoMsg(message: _123.MsgClearAdminResponse): _123.MsgClearAdminResponseProtoMsg;
            };
            MsgUpdateInstantiateConfig: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUpdateInstantiateConfig;
                isSDK(o: any): o is _123.MsgUpdateInstantiateConfigSDKType;
                isAmino(o: any): o is _123.MsgUpdateInstantiateConfigAmino;
                encode(message: _123.MsgUpdateInstantiateConfig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUpdateInstantiateConfig;
                fromPartial(object: Partial<_123.MsgUpdateInstantiateConfig>): _123.MsgUpdateInstantiateConfig;
                fromAmino(object: _123.MsgUpdateInstantiateConfigAmino): _123.MsgUpdateInstantiateConfig;
                toAmino(message: _123.MsgUpdateInstantiateConfig): _123.MsgUpdateInstantiateConfigAmino;
                fromAminoMsg(object: _123.MsgUpdateInstantiateConfigAminoMsg): _123.MsgUpdateInstantiateConfig;
                toAminoMsg(message: _123.MsgUpdateInstantiateConfig): _123.MsgUpdateInstantiateConfigAminoMsg;
                fromProtoMsg(message: _123.MsgUpdateInstantiateConfigProtoMsg): _123.MsgUpdateInstantiateConfig;
                toProto(message: _123.MsgUpdateInstantiateConfig): Uint8Array;
                toProtoMsg(message: _123.MsgUpdateInstantiateConfig): _123.MsgUpdateInstantiateConfigProtoMsg;
            };
            MsgUpdateInstantiateConfigResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUpdateInstantiateConfigResponse;
                isSDK(o: any): o is _123.MsgUpdateInstantiateConfigResponseSDKType;
                isAmino(o: any): o is _123.MsgUpdateInstantiateConfigResponseAmino;
                encode(_: _123.MsgUpdateInstantiateConfigResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUpdateInstantiateConfigResponse;
                fromPartial(_: Partial<_123.MsgUpdateInstantiateConfigResponse>): _123.MsgUpdateInstantiateConfigResponse;
                fromAmino(_: _123.MsgUpdateInstantiateConfigResponseAmino): _123.MsgUpdateInstantiateConfigResponse;
                toAmino(_: _123.MsgUpdateInstantiateConfigResponse): _123.MsgUpdateInstantiateConfigResponseAmino;
                fromAminoMsg(object: _123.MsgUpdateInstantiateConfigResponseAminoMsg): _123.MsgUpdateInstantiateConfigResponse;
                toAminoMsg(message: _123.MsgUpdateInstantiateConfigResponse): _123.MsgUpdateInstantiateConfigResponseAminoMsg;
                fromProtoMsg(message: _123.MsgUpdateInstantiateConfigResponseProtoMsg): _123.MsgUpdateInstantiateConfigResponse;
                toProto(message: _123.MsgUpdateInstantiateConfigResponse): Uint8Array;
                toProtoMsg(message: _123.MsgUpdateInstantiateConfigResponse): _123.MsgUpdateInstantiateConfigResponseProtoMsg;
            };
            MsgUpdateParams: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUpdateParams;
                isSDK(o: any): o is _123.MsgUpdateParamsSDKType;
                isAmino(o: any): o is _123.MsgUpdateParamsAmino;
                encode(message: _123.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUpdateParams;
                fromPartial(object: Partial<_123.MsgUpdateParams>): _123.MsgUpdateParams;
                fromAmino(object: _123.MsgUpdateParamsAmino): _123.MsgUpdateParams;
                toAmino(message: _123.MsgUpdateParams): _123.MsgUpdateParamsAmino;
                fromAminoMsg(object: _123.MsgUpdateParamsAminoMsg): _123.MsgUpdateParams;
                toAminoMsg(message: _123.MsgUpdateParams): _123.MsgUpdateParamsAminoMsg;
                fromProtoMsg(message: _123.MsgUpdateParamsProtoMsg): _123.MsgUpdateParams;
                toProto(message: _123.MsgUpdateParams): Uint8Array;
                toProtoMsg(message: _123.MsgUpdateParams): _123.MsgUpdateParamsProtoMsg;
            };
            MsgUpdateParamsResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUpdateParamsResponse;
                isSDK(o: any): o is _123.MsgUpdateParamsResponseSDKType;
                isAmino(o: any): o is _123.MsgUpdateParamsResponseAmino;
                encode(_: _123.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUpdateParamsResponse;
                fromPartial(_: Partial<_123.MsgUpdateParamsResponse>): _123.MsgUpdateParamsResponse;
                fromAmino(_: _123.MsgUpdateParamsResponseAmino): _123.MsgUpdateParamsResponse;
                toAmino(_: _123.MsgUpdateParamsResponse): _123.MsgUpdateParamsResponseAmino;
                fromAminoMsg(object: _123.MsgUpdateParamsResponseAminoMsg): _123.MsgUpdateParamsResponse;
                toAminoMsg(message: _123.MsgUpdateParamsResponse): _123.MsgUpdateParamsResponseAminoMsg;
                fromProtoMsg(message: _123.MsgUpdateParamsResponseProtoMsg): _123.MsgUpdateParamsResponse;
                toProto(message: _123.MsgUpdateParamsResponse): Uint8Array;
                toProtoMsg(message: _123.MsgUpdateParamsResponse): _123.MsgUpdateParamsResponseProtoMsg;
            };
            MsgSudoContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgSudoContract;
                isSDK(o: any): o is _123.MsgSudoContractSDKType;
                isAmino(o: any): o is _123.MsgSudoContractAmino;
                encode(message: _123.MsgSudoContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgSudoContract;
                fromPartial(object: Partial<_123.MsgSudoContract>): _123.MsgSudoContract;
                fromAmino(object: _123.MsgSudoContractAmino): _123.MsgSudoContract;
                toAmino(message: _123.MsgSudoContract): _123.MsgSudoContractAmino;
                fromAminoMsg(object: _123.MsgSudoContractAminoMsg): _123.MsgSudoContract;
                toAminoMsg(message: _123.MsgSudoContract): _123.MsgSudoContractAminoMsg;
                fromProtoMsg(message: _123.MsgSudoContractProtoMsg): _123.MsgSudoContract;
                toProto(message: _123.MsgSudoContract): Uint8Array;
                toProtoMsg(message: _123.MsgSudoContract): _123.MsgSudoContractProtoMsg;
            };
            MsgSudoContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgSudoContractResponse;
                isSDK(o: any): o is _123.MsgSudoContractResponseSDKType;
                isAmino(o: any): o is _123.MsgSudoContractResponseAmino;
                encode(message: _123.MsgSudoContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgSudoContractResponse;
                fromPartial(object: Partial<_123.MsgSudoContractResponse>): _123.MsgSudoContractResponse;
                fromAmino(object: _123.MsgSudoContractResponseAmino): _123.MsgSudoContractResponse;
                toAmino(message: _123.MsgSudoContractResponse): _123.MsgSudoContractResponseAmino;
                fromAminoMsg(object: _123.MsgSudoContractResponseAminoMsg): _123.MsgSudoContractResponse;
                toAminoMsg(message: _123.MsgSudoContractResponse): _123.MsgSudoContractResponseAminoMsg;
                fromProtoMsg(message: _123.MsgSudoContractResponseProtoMsg): _123.MsgSudoContractResponse;
                toProto(message: _123.MsgSudoContractResponse): Uint8Array;
                toProtoMsg(message: _123.MsgSudoContractResponse): _123.MsgSudoContractResponseProtoMsg;
            };
            MsgPinCodes: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgPinCodes;
                isSDK(o: any): o is _123.MsgPinCodesSDKType;
                isAmino(o: any): o is _123.MsgPinCodesAmino;
                encode(message: _123.MsgPinCodes, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgPinCodes;
                fromPartial(object: Partial<_123.MsgPinCodes>): _123.MsgPinCodes;
                fromAmino(object: _123.MsgPinCodesAmino): _123.MsgPinCodes;
                toAmino(message: _123.MsgPinCodes): _123.MsgPinCodesAmino;
                fromAminoMsg(object: _123.MsgPinCodesAminoMsg): _123.MsgPinCodes;
                toAminoMsg(message: _123.MsgPinCodes): _123.MsgPinCodesAminoMsg;
                fromProtoMsg(message: _123.MsgPinCodesProtoMsg): _123.MsgPinCodes;
                toProto(message: _123.MsgPinCodes): Uint8Array;
                toProtoMsg(message: _123.MsgPinCodes): _123.MsgPinCodesProtoMsg;
            };
            MsgPinCodesResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgPinCodesResponse;
                isSDK(o: any): o is _123.MsgPinCodesResponseSDKType;
                isAmino(o: any): o is _123.MsgPinCodesResponseAmino;
                encode(_: _123.MsgPinCodesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgPinCodesResponse;
                fromPartial(_: Partial<_123.MsgPinCodesResponse>): _123.MsgPinCodesResponse;
                fromAmino(_: _123.MsgPinCodesResponseAmino): _123.MsgPinCodesResponse;
                toAmino(_: _123.MsgPinCodesResponse): _123.MsgPinCodesResponseAmino;
                fromAminoMsg(object: _123.MsgPinCodesResponseAminoMsg): _123.MsgPinCodesResponse;
                toAminoMsg(message: _123.MsgPinCodesResponse): _123.MsgPinCodesResponseAminoMsg;
                fromProtoMsg(message: _123.MsgPinCodesResponseProtoMsg): _123.MsgPinCodesResponse;
                toProto(message: _123.MsgPinCodesResponse): Uint8Array;
                toProtoMsg(message: _123.MsgPinCodesResponse): _123.MsgPinCodesResponseProtoMsg;
            };
            MsgUnpinCodes: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUnpinCodes;
                isSDK(o: any): o is _123.MsgUnpinCodesSDKType;
                isAmino(o: any): o is _123.MsgUnpinCodesAmino;
                encode(message: _123.MsgUnpinCodes, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUnpinCodes;
                fromPartial(object: Partial<_123.MsgUnpinCodes>): _123.MsgUnpinCodes;
                fromAmino(object: _123.MsgUnpinCodesAmino): _123.MsgUnpinCodes;
                toAmino(message: _123.MsgUnpinCodes): _123.MsgUnpinCodesAmino;
                fromAminoMsg(object: _123.MsgUnpinCodesAminoMsg): _123.MsgUnpinCodes;
                toAminoMsg(message: _123.MsgUnpinCodes): _123.MsgUnpinCodesAminoMsg;
                fromProtoMsg(message: _123.MsgUnpinCodesProtoMsg): _123.MsgUnpinCodes;
                toProto(message: _123.MsgUnpinCodes): Uint8Array;
                toProtoMsg(message: _123.MsgUnpinCodes): _123.MsgUnpinCodesProtoMsg;
            };
            MsgUnpinCodesResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUnpinCodesResponse;
                isSDK(o: any): o is _123.MsgUnpinCodesResponseSDKType;
                isAmino(o: any): o is _123.MsgUnpinCodesResponseAmino;
                encode(_: _123.MsgUnpinCodesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUnpinCodesResponse;
                fromPartial(_: Partial<_123.MsgUnpinCodesResponse>): _123.MsgUnpinCodesResponse;
                fromAmino(_: _123.MsgUnpinCodesResponseAmino): _123.MsgUnpinCodesResponse;
                toAmino(_: _123.MsgUnpinCodesResponse): _123.MsgUnpinCodesResponseAmino;
                fromAminoMsg(object: _123.MsgUnpinCodesResponseAminoMsg): _123.MsgUnpinCodesResponse;
                toAminoMsg(message: _123.MsgUnpinCodesResponse): _123.MsgUnpinCodesResponseAminoMsg;
                fromProtoMsg(message: _123.MsgUnpinCodesResponseProtoMsg): _123.MsgUnpinCodesResponse;
                toProto(message: _123.MsgUnpinCodesResponse): Uint8Array;
                toProtoMsg(message: _123.MsgUnpinCodesResponse): _123.MsgUnpinCodesResponseProtoMsg;
            };
            MsgStoreAndInstantiateContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgStoreAndInstantiateContract;
                isSDK(o: any): o is _123.MsgStoreAndInstantiateContractSDKType;
                isAmino(o: any): o is _123.MsgStoreAndInstantiateContractAmino;
                encode(message: _123.MsgStoreAndInstantiateContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgStoreAndInstantiateContract;
                fromPartial(object: Partial<_123.MsgStoreAndInstantiateContract>): _123.MsgStoreAndInstantiateContract;
                fromAmino(object: _123.MsgStoreAndInstantiateContractAmino): _123.MsgStoreAndInstantiateContract;
                toAmino(message: _123.MsgStoreAndInstantiateContract): _123.MsgStoreAndInstantiateContractAmino;
                fromAminoMsg(object: _123.MsgStoreAndInstantiateContractAminoMsg): _123.MsgStoreAndInstantiateContract;
                toAminoMsg(message: _123.MsgStoreAndInstantiateContract): _123.MsgStoreAndInstantiateContractAminoMsg;
                fromProtoMsg(message: _123.MsgStoreAndInstantiateContractProtoMsg): _123.MsgStoreAndInstantiateContract;
                toProto(message: _123.MsgStoreAndInstantiateContract): Uint8Array;
                toProtoMsg(message: _123.MsgStoreAndInstantiateContract): _123.MsgStoreAndInstantiateContractProtoMsg;
            };
            MsgStoreAndInstantiateContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgStoreAndInstantiateContractResponse;
                isSDK(o: any): o is _123.MsgStoreAndInstantiateContractResponseSDKType;
                isAmino(o: any): o is _123.MsgStoreAndInstantiateContractResponseAmino;
                encode(message: _123.MsgStoreAndInstantiateContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgStoreAndInstantiateContractResponse;
                fromPartial(object: Partial<_123.MsgStoreAndInstantiateContractResponse>): _123.MsgStoreAndInstantiateContractResponse;
                fromAmino(object: _123.MsgStoreAndInstantiateContractResponseAmino): _123.MsgStoreAndInstantiateContractResponse;
                toAmino(message: _123.MsgStoreAndInstantiateContractResponse): _123.MsgStoreAndInstantiateContractResponseAmino;
                fromAminoMsg(object: _123.MsgStoreAndInstantiateContractResponseAminoMsg): _123.MsgStoreAndInstantiateContractResponse;
                toAminoMsg(message: _123.MsgStoreAndInstantiateContractResponse): _123.MsgStoreAndInstantiateContractResponseAminoMsg;
                fromProtoMsg(message: _123.MsgStoreAndInstantiateContractResponseProtoMsg): _123.MsgStoreAndInstantiateContractResponse;
                toProto(message: _123.MsgStoreAndInstantiateContractResponse): Uint8Array;
                toProtoMsg(message: _123.MsgStoreAndInstantiateContractResponse): _123.MsgStoreAndInstantiateContractResponseProtoMsg;
            };
            MsgAddCodeUploadParamsAddresses: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgAddCodeUploadParamsAddresses;
                isSDK(o: any): o is _123.MsgAddCodeUploadParamsAddressesSDKType;
                isAmino(o: any): o is _123.MsgAddCodeUploadParamsAddressesAmino;
                encode(message: _123.MsgAddCodeUploadParamsAddresses, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgAddCodeUploadParamsAddresses;
                fromPartial(object: Partial<_123.MsgAddCodeUploadParamsAddresses>): _123.MsgAddCodeUploadParamsAddresses;
                fromAmino(object: _123.MsgAddCodeUploadParamsAddressesAmino): _123.MsgAddCodeUploadParamsAddresses;
                toAmino(message: _123.MsgAddCodeUploadParamsAddresses): _123.MsgAddCodeUploadParamsAddressesAmino;
                fromAminoMsg(object: _123.MsgAddCodeUploadParamsAddressesAminoMsg): _123.MsgAddCodeUploadParamsAddresses;
                toAminoMsg(message: _123.MsgAddCodeUploadParamsAddresses): _123.MsgAddCodeUploadParamsAddressesAminoMsg;
                fromProtoMsg(message: _123.MsgAddCodeUploadParamsAddressesProtoMsg): _123.MsgAddCodeUploadParamsAddresses;
                toProto(message: _123.MsgAddCodeUploadParamsAddresses): Uint8Array;
                toProtoMsg(message: _123.MsgAddCodeUploadParamsAddresses): _123.MsgAddCodeUploadParamsAddressesProtoMsg;
            };
            MsgAddCodeUploadParamsAddressesResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgAddCodeUploadParamsAddressesResponse;
                isSDK(o: any): o is _123.MsgAddCodeUploadParamsAddressesResponseSDKType;
                isAmino(o: any): o is _123.MsgAddCodeUploadParamsAddressesResponseAmino;
                encode(_: _123.MsgAddCodeUploadParamsAddressesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgAddCodeUploadParamsAddressesResponse;
                fromPartial(_: Partial<_123.MsgAddCodeUploadParamsAddressesResponse>): _123.MsgAddCodeUploadParamsAddressesResponse;
                fromAmino(_: _123.MsgAddCodeUploadParamsAddressesResponseAmino): _123.MsgAddCodeUploadParamsAddressesResponse;
                toAmino(_: _123.MsgAddCodeUploadParamsAddressesResponse): _123.MsgAddCodeUploadParamsAddressesResponseAmino;
                fromAminoMsg(object: _123.MsgAddCodeUploadParamsAddressesResponseAminoMsg): _123.MsgAddCodeUploadParamsAddressesResponse;
                toAminoMsg(message: _123.MsgAddCodeUploadParamsAddressesResponse): _123.MsgAddCodeUploadParamsAddressesResponseAminoMsg;
                fromProtoMsg(message: _123.MsgAddCodeUploadParamsAddressesResponseProtoMsg): _123.MsgAddCodeUploadParamsAddressesResponse;
                toProto(message: _123.MsgAddCodeUploadParamsAddressesResponse): Uint8Array;
                toProtoMsg(message: _123.MsgAddCodeUploadParamsAddressesResponse): _123.MsgAddCodeUploadParamsAddressesResponseProtoMsg;
            };
            MsgRemoveCodeUploadParamsAddresses: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgRemoveCodeUploadParamsAddresses;
                isSDK(o: any): o is _123.MsgRemoveCodeUploadParamsAddressesSDKType;
                isAmino(o: any): o is _123.MsgRemoveCodeUploadParamsAddressesAmino;
                encode(message: _123.MsgRemoveCodeUploadParamsAddresses, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgRemoveCodeUploadParamsAddresses;
                fromPartial(object: Partial<_123.MsgRemoveCodeUploadParamsAddresses>): _123.MsgRemoveCodeUploadParamsAddresses;
                fromAmino(object: _123.MsgRemoveCodeUploadParamsAddressesAmino): _123.MsgRemoveCodeUploadParamsAddresses;
                toAmino(message: _123.MsgRemoveCodeUploadParamsAddresses): _123.MsgRemoveCodeUploadParamsAddressesAmino;
                fromAminoMsg(object: _123.MsgRemoveCodeUploadParamsAddressesAminoMsg): _123.MsgRemoveCodeUploadParamsAddresses;
                toAminoMsg(message: _123.MsgRemoveCodeUploadParamsAddresses): _123.MsgRemoveCodeUploadParamsAddressesAminoMsg;
                fromProtoMsg(message: _123.MsgRemoveCodeUploadParamsAddressesProtoMsg): _123.MsgRemoveCodeUploadParamsAddresses;
                toProto(message: _123.MsgRemoveCodeUploadParamsAddresses): Uint8Array;
                toProtoMsg(message: _123.MsgRemoveCodeUploadParamsAddresses): _123.MsgRemoveCodeUploadParamsAddressesProtoMsg;
            };
            MsgRemoveCodeUploadParamsAddressesResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgRemoveCodeUploadParamsAddressesResponse;
                isSDK(o: any): o is _123.MsgRemoveCodeUploadParamsAddressesResponseSDKType;
                isAmino(o: any): o is _123.MsgRemoveCodeUploadParamsAddressesResponseAmino;
                encode(_: _123.MsgRemoveCodeUploadParamsAddressesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgRemoveCodeUploadParamsAddressesResponse;
                fromPartial(_: Partial<_123.MsgRemoveCodeUploadParamsAddressesResponse>): _123.MsgRemoveCodeUploadParamsAddressesResponse;
                fromAmino(_: _123.MsgRemoveCodeUploadParamsAddressesResponseAmino): _123.MsgRemoveCodeUploadParamsAddressesResponse;
                toAmino(_: _123.MsgRemoveCodeUploadParamsAddressesResponse): _123.MsgRemoveCodeUploadParamsAddressesResponseAmino;
                fromAminoMsg(object: _123.MsgRemoveCodeUploadParamsAddressesResponseAminoMsg): _123.MsgRemoveCodeUploadParamsAddressesResponse;
                toAminoMsg(message: _123.MsgRemoveCodeUploadParamsAddressesResponse): _123.MsgRemoveCodeUploadParamsAddressesResponseAminoMsg;
                fromProtoMsg(message: _123.MsgRemoveCodeUploadParamsAddressesResponseProtoMsg): _123.MsgRemoveCodeUploadParamsAddressesResponse;
                toProto(message: _123.MsgRemoveCodeUploadParamsAddressesResponse): Uint8Array;
                toProtoMsg(message: _123.MsgRemoveCodeUploadParamsAddressesResponse): _123.MsgRemoveCodeUploadParamsAddressesResponseProtoMsg;
            };
            MsgStoreAndMigrateContract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgStoreAndMigrateContract;
                isSDK(o: any): o is _123.MsgStoreAndMigrateContractSDKType;
                isAmino(o: any): o is _123.MsgStoreAndMigrateContractAmino;
                encode(message: _123.MsgStoreAndMigrateContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgStoreAndMigrateContract;
                fromPartial(object: Partial<_123.MsgStoreAndMigrateContract>): _123.MsgStoreAndMigrateContract;
                fromAmino(object: _123.MsgStoreAndMigrateContractAmino): _123.MsgStoreAndMigrateContract;
                toAmino(message: _123.MsgStoreAndMigrateContract): _123.MsgStoreAndMigrateContractAmino;
                fromAminoMsg(object: _123.MsgStoreAndMigrateContractAminoMsg): _123.MsgStoreAndMigrateContract;
                toAminoMsg(message: _123.MsgStoreAndMigrateContract): _123.MsgStoreAndMigrateContractAminoMsg;
                fromProtoMsg(message: _123.MsgStoreAndMigrateContractProtoMsg): _123.MsgStoreAndMigrateContract;
                toProto(message: _123.MsgStoreAndMigrateContract): Uint8Array;
                toProtoMsg(message: _123.MsgStoreAndMigrateContract): _123.MsgStoreAndMigrateContractProtoMsg;
            };
            MsgStoreAndMigrateContractResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgStoreAndMigrateContractResponse;
                isSDK(o: any): o is _123.MsgStoreAndMigrateContractResponseSDKType;
                isAmino(o: any): o is _123.MsgStoreAndMigrateContractResponseAmino;
                encode(message: _123.MsgStoreAndMigrateContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgStoreAndMigrateContractResponse;
                fromPartial(object: Partial<_123.MsgStoreAndMigrateContractResponse>): _123.MsgStoreAndMigrateContractResponse;
                fromAmino(object: _123.MsgStoreAndMigrateContractResponseAmino): _123.MsgStoreAndMigrateContractResponse;
                toAmino(message: _123.MsgStoreAndMigrateContractResponse): _123.MsgStoreAndMigrateContractResponseAmino;
                fromAminoMsg(object: _123.MsgStoreAndMigrateContractResponseAminoMsg): _123.MsgStoreAndMigrateContractResponse;
                toAminoMsg(message: _123.MsgStoreAndMigrateContractResponse): _123.MsgStoreAndMigrateContractResponseAminoMsg;
                fromProtoMsg(message: _123.MsgStoreAndMigrateContractResponseProtoMsg): _123.MsgStoreAndMigrateContractResponse;
                toProto(message: _123.MsgStoreAndMigrateContractResponse): Uint8Array;
                toProtoMsg(message: _123.MsgStoreAndMigrateContractResponse): _123.MsgStoreAndMigrateContractResponseProtoMsg;
            };
            MsgUpdateContractLabel: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUpdateContractLabel;
                isSDK(o: any): o is _123.MsgUpdateContractLabelSDKType;
                isAmino(o: any): o is _123.MsgUpdateContractLabelAmino;
                encode(message: _123.MsgUpdateContractLabel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUpdateContractLabel;
                fromPartial(object: Partial<_123.MsgUpdateContractLabel>): _123.MsgUpdateContractLabel;
                fromAmino(object: _123.MsgUpdateContractLabelAmino): _123.MsgUpdateContractLabel;
                toAmino(message: _123.MsgUpdateContractLabel): _123.MsgUpdateContractLabelAmino;
                fromAminoMsg(object: _123.MsgUpdateContractLabelAminoMsg): _123.MsgUpdateContractLabel;
                toAminoMsg(message: _123.MsgUpdateContractLabel): _123.MsgUpdateContractLabelAminoMsg;
                fromProtoMsg(message: _123.MsgUpdateContractLabelProtoMsg): _123.MsgUpdateContractLabel;
                toProto(message: _123.MsgUpdateContractLabel): Uint8Array;
                toProtoMsg(message: _123.MsgUpdateContractLabel): _123.MsgUpdateContractLabelProtoMsg;
            };
            MsgUpdateContractLabelResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _123.MsgUpdateContractLabelResponse;
                isSDK(o: any): o is _123.MsgUpdateContractLabelResponseSDKType;
                isAmino(o: any): o is _123.MsgUpdateContractLabelResponseAmino;
                encode(_: _123.MsgUpdateContractLabelResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _123.MsgUpdateContractLabelResponse;
                fromPartial(_: Partial<_123.MsgUpdateContractLabelResponse>): _123.MsgUpdateContractLabelResponse;
                fromAmino(_: _123.MsgUpdateContractLabelResponseAmino): _123.MsgUpdateContractLabelResponse;
                toAmino(_: _123.MsgUpdateContractLabelResponse): _123.MsgUpdateContractLabelResponseAmino;
                fromAminoMsg(object: _123.MsgUpdateContractLabelResponseAminoMsg): _123.MsgUpdateContractLabelResponse;
                toAminoMsg(message: _123.MsgUpdateContractLabelResponse): _123.MsgUpdateContractLabelResponseAminoMsg;
                fromProtoMsg(message: _123.MsgUpdateContractLabelResponseProtoMsg): _123.MsgUpdateContractLabelResponse;
                toProto(message: _123.MsgUpdateContractLabelResponse): Uint8Array;
                toProtoMsg(message: _123.MsgUpdateContractLabelResponse): _123.MsgUpdateContractLabelResponseProtoMsg;
            };
            QueryContractInfoRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryContractInfoRequest;
                isSDK(o: any): o is _122.QueryContractInfoRequestSDKType;
                isAmino(o: any): o is _122.QueryContractInfoRequestAmino;
                encode(message: _122.QueryContractInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryContractInfoRequest;
                fromPartial(object: Partial<_122.QueryContractInfoRequest>): _122.QueryContractInfoRequest;
                fromAmino(object: _122.QueryContractInfoRequestAmino): _122.QueryContractInfoRequest;
                toAmino(message: _122.QueryContractInfoRequest): _122.QueryContractInfoRequestAmino;
                fromAminoMsg(object: _122.QueryContractInfoRequestAminoMsg): _122.QueryContractInfoRequest;
                toAminoMsg(message: _122.QueryContractInfoRequest): _122.QueryContractInfoRequestAminoMsg;
                fromProtoMsg(message: _122.QueryContractInfoRequestProtoMsg): _122.QueryContractInfoRequest;
                toProto(message: _122.QueryContractInfoRequest): Uint8Array;
                toProtoMsg(message: _122.QueryContractInfoRequest): _122.QueryContractInfoRequestProtoMsg;
            };
            QueryContractInfoResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryContractInfoResponse;
                isSDK(o: any): o is _122.QueryContractInfoResponseSDKType;
                isAmino(o: any): o is _122.QueryContractInfoResponseAmino;
                encode(message: _122.QueryContractInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryContractInfoResponse;
                fromPartial(object: Partial<_122.QueryContractInfoResponse>): _122.QueryContractInfoResponse;
                fromAmino(object: _122.QueryContractInfoResponseAmino): _122.QueryContractInfoResponse;
                toAmino(message: _122.QueryContractInfoResponse): _122.QueryContractInfoResponseAmino;
                fromAminoMsg(object: _122.QueryContractInfoResponseAminoMsg): _122.QueryContractInfoResponse;
                toAminoMsg(message: _122.QueryContractInfoResponse): _122.QueryContractInfoResponseAminoMsg;
                fromProtoMsg(message: _122.QueryContractInfoResponseProtoMsg): _122.QueryContractInfoResponse;
                toProto(message: _122.QueryContractInfoResponse): Uint8Array;
                toProtoMsg(message: _122.QueryContractInfoResponse): _122.QueryContractInfoResponseProtoMsg;
            };
            QueryContractHistoryRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryContractHistoryRequest;
                isSDK(o: any): o is _122.QueryContractHistoryRequestSDKType;
                isAmino(o: any): o is _122.QueryContractHistoryRequestAmino;
                encode(message: _122.QueryContractHistoryRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryContractHistoryRequest;
                fromPartial(object: Partial<_122.QueryContractHistoryRequest>): _122.QueryContractHistoryRequest;
                fromAmino(object: _122.QueryContractHistoryRequestAmino): _122.QueryContractHistoryRequest;
                toAmino(message: _122.QueryContractHistoryRequest): _122.QueryContractHistoryRequestAmino;
                fromAminoMsg(object: _122.QueryContractHistoryRequestAminoMsg): _122.QueryContractHistoryRequest;
                toAminoMsg(message: _122.QueryContractHistoryRequest): _122.QueryContractHistoryRequestAminoMsg;
                fromProtoMsg(message: _122.QueryContractHistoryRequestProtoMsg): _122.QueryContractHistoryRequest;
                toProto(message: _122.QueryContractHistoryRequest): Uint8Array;
                toProtoMsg(message: _122.QueryContractHistoryRequest): _122.QueryContractHistoryRequestProtoMsg;
            };
            QueryContractHistoryResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryContractHistoryResponse;
                isSDK(o: any): o is _122.QueryContractHistoryResponseSDKType;
                isAmino(o: any): o is _122.QueryContractHistoryResponseAmino;
                encode(message: _122.QueryContractHistoryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryContractHistoryResponse;
                fromPartial(object: Partial<_122.QueryContractHistoryResponse>): _122.QueryContractHistoryResponse;
                fromAmino(object: _122.QueryContractHistoryResponseAmino): _122.QueryContractHistoryResponse;
                toAmino(message: _122.QueryContractHistoryResponse): _122.QueryContractHistoryResponseAmino;
                fromAminoMsg(object: _122.QueryContractHistoryResponseAminoMsg): _122.QueryContractHistoryResponse;
                toAminoMsg(message: _122.QueryContractHistoryResponse): _122.QueryContractHistoryResponseAminoMsg;
                fromProtoMsg(message: _122.QueryContractHistoryResponseProtoMsg): _122.QueryContractHistoryResponse;
                toProto(message: _122.QueryContractHistoryResponse): Uint8Array;
                toProtoMsg(message: _122.QueryContractHistoryResponse): _122.QueryContractHistoryResponseProtoMsg;
            };
            QueryContractsByCodeRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryContractsByCodeRequest;
                isSDK(o: any): o is _122.QueryContractsByCodeRequestSDKType;
                isAmino(o: any): o is _122.QueryContractsByCodeRequestAmino;
                encode(message: _122.QueryContractsByCodeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryContractsByCodeRequest;
                fromPartial(object: Partial<_122.QueryContractsByCodeRequest>): _122.QueryContractsByCodeRequest;
                fromAmino(object: _122.QueryContractsByCodeRequestAmino): _122.QueryContractsByCodeRequest;
                toAmino(message: _122.QueryContractsByCodeRequest): _122.QueryContractsByCodeRequestAmino;
                fromAminoMsg(object: _122.QueryContractsByCodeRequestAminoMsg): _122.QueryContractsByCodeRequest;
                toAminoMsg(message: _122.QueryContractsByCodeRequest): _122.QueryContractsByCodeRequestAminoMsg;
                fromProtoMsg(message: _122.QueryContractsByCodeRequestProtoMsg): _122.QueryContractsByCodeRequest;
                toProto(message: _122.QueryContractsByCodeRequest): Uint8Array;
                toProtoMsg(message: _122.QueryContractsByCodeRequest): _122.QueryContractsByCodeRequestProtoMsg;
            };
            QueryContractsByCodeResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryContractsByCodeResponse;
                isSDK(o: any): o is _122.QueryContractsByCodeResponseSDKType;
                isAmino(o: any): o is _122.QueryContractsByCodeResponseAmino;
                encode(message: _122.QueryContractsByCodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryContractsByCodeResponse;
                fromPartial(object: Partial<_122.QueryContractsByCodeResponse>): _122.QueryContractsByCodeResponse;
                fromAmino(object: _122.QueryContractsByCodeResponseAmino): _122.QueryContractsByCodeResponse;
                toAmino(message: _122.QueryContractsByCodeResponse): _122.QueryContractsByCodeResponseAmino;
                fromAminoMsg(object: _122.QueryContractsByCodeResponseAminoMsg): _122.QueryContractsByCodeResponse;
                toAminoMsg(message: _122.QueryContractsByCodeResponse): _122.QueryContractsByCodeResponseAminoMsg;
                fromProtoMsg(message: _122.QueryContractsByCodeResponseProtoMsg): _122.QueryContractsByCodeResponse;
                toProto(message: _122.QueryContractsByCodeResponse): Uint8Array;
                toProtoMsg(message: _122.QueryContractsByCodeResponse): _122.QueryContractsByCodeResponseProtoMsg;
            };
            QueryAllContractStateRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryAllContractStateRequest;
                isSDK(o: any): o is _122.QueryAllContractStateRequestSDKType;
                isAmino(o: any): o is _122.QueryAllContractStateRequestAmino;
                encode(message: _122.QueryAllContractStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryAllContractStateRequest;
                fromPartial(object: Partial<_122.QueryAllContractStateRequest>): _122.QueryAllContractStateRequest;
                fromAmino(object: _122.QueryAllContractStateRequestAmino): _122.QueryAllContractStateRequest;
                toAmino(message: _122.QueryAllContractStateRequest): _122.QueryAllContractStateRequestAmino;
                fromAminoMsg(object: _122.QueryAllContractStateRequestAminoMsg): _122.QueryAllContractStateRequest;
                toAminoMsg(message: _122.QueryAllContractStateRequest): _122.QueryAllContractStateRequestAminoMsg;
                fromProtoMsg(message: _122.QueryAllContractStateRequestProtoMsg): _122.QueryAllContractStateRequest;
                toProto(message: _122.QueryAllContractStateRequest): Uint8Array;
                toProtoMsg(message: _122.QueryAllContractStateRequest): _122.QueryAllContractStateRequestProtoMsg;
            };
            QueryAllContractStateResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryAllContractStateResponse;
                isSDK(o: any): o is _122.QueryAllContractStateResponseSDKType;
                isAmino(o: any): o is _122.QueryAllContractStateResponseAmino;
                encode(message: _122.QueryAllContractStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryAllContractStateResponse;
                fromPartial(object: Partial<_122.QueryAllContractStateResponse>): _122.QueryAllContractStateResponse;
                fromAmino(object: _122.QueryAllContractStateResponseAmino): _122.QueryAllContractStateResponse;
                toAmino(message: _122.QueryAllContractStateResponse): _122.QueryAllContractStateResponseAmino;
                fromAminoMsg(object: _122.QueryAllContractStateResponseAminoMsg): _122.QueryAllContractStateResponse;
                toAminoMsg(message: _122.QueryAllContractStateResponse): _122.QueryAllContractStateResponseAminoMsg;
                fromProtoMsg(message: _122.QueryAllContractStateResponseProtoMsg): _122.QueryAllContractStateResponse;
                toProto(message: _122.QueryAllContractStateResponse): Uint8Array;
                toProtoMsg(message: _122.QueryAllContractStateResponse): _122.QueryAllContractStateResponseProtoMsg;
            };
            QueryRawContractStateRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryRawContractStateRequest;
                isSDK(o: any): o is _122.QueryRawContractStateRequestSDKType;
                isAmino(o: any): o is _122.QueryRawContractStateRequestAmino;
                encode(message: _122.QueryRawContractStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryRawContractStateRequest;
                fromPartial(object: Partial<_122.QueryRawContractStateRequest>): _122.QueryRawContractStateRequest;
                fromAmino(object: _122.QueryRawContractStateRequestAmino): _122.QueryRawContractStateRequest;
                toAmino(message: _122.QueryRawContractStateRequest): _122.QueryRawContractStateRequestAmino;
                fromAminoMsg(object: _122.QueryRawContractStateRequestAminoMsg): _122.QueryRawContractStateRequest;
                toAminoMsg(message: _122.QueryRawContractStateRequest): _122.QueryRawContractStateRequestAminoMsg;
                fromProtoMsg(message: _122.QueryRawContractStateRequestProtoMsg): _122.QueryRawContractStateRequest;
                toProto(message: _122.QueryRawContractStateRequest): Uint8Array;
                toProtoMsg(message: _122.QueryRawContractStateRequest): _122.QueryRawContractStateRequestProtoMsg;
            };
            QueryRawContractStateResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryRawContractStateResponse;
                isSDK(o: any): o is _122.QueryRawContractStateResponseSDKType;
                isAmino(o: any): o is _122.QueryRawContractStateResponseAmino;
                encode(message: _122.QueryRawContractStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryRawContractStateResponse;
                fromPartial(object: Partial<_122.QueryRawContractStateResponse>): _122.QueryRawContractStateResponse;
                fromAmino(object: _122.QueryRawContractStateResponseAmino): _122.QueryRawContractStateResponse;
                toAmino(message: _122.QueryRawContractStateResponse): _122.QueryRawContractStateResponseAmino;
                fromAminoMsg(object: _122.QueryRawContractStateResponseAminoMsg): _122.QueryRawContractStateResponse;
                toAminoMsg(message: _122.QueryRawContractStateResponse): _122.QueryRawContractStateResponseAminoMsg;
                fromProtoMsg(message: _122.QueryRawContractStateResponseProtoMsg): _122.QueryRawContractStateResponse;
                toProto(message: _122.QueryRawContractStateResponse): Uint8Array;
                toProtoMsg(message: _122.QueryRawContractStateResponse): _122.QueryRawContractStateResponseProtoMsg;
            };
            QuerySmartContractStateRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QuerySmartContractStateRequest;
                isSDK(o: any): o is _122.QuerySmartContractStateRequestSDKType;
                isAmino(o: any): o is _122.QuerySmartContractStateRequestAmino;
                encode(message: _122.QuerySmartContractStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QuerySmartContractStateRequest;
                fromPartial(object: Partial<_122.QuerySmartContractStateRequest>): _122.QuerySmartContractStateRequest;
                fromAmino(object: _122.QuerySmartContractStateRequestAmino): _122.QuerySmartContractStateRequest;
                toAmino(message: _122.QuerySmartContractStateRequest): _122.QuerySmartContractStateRequestAmino;
                fromAminoMsg(object: _122.QuerySmartContractStateRequestAminoMsg): _122.QuerySmartContractStateRequest;
                toAminoMsg(message: _122.QuerySmartContractStateRequest): _122.QuerySmartContractStateRequestAminoMsg;
                fromProtoMsg(message: _122.QuerySmartContractStateRequestProtoMsg): _122.QuerySmartContractStateRequest;
                toProto(message: _122.QuerySmartContractStateRequest): Uint8Array;
                toProtoMsg(message: _122.QuerySmartContractStateRequest): _122.QuerySmartContractStateRequestProtoMsg;
            };
            QuerySmartContractStateResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QuerySmartContractStateResponse;
                isSDK(o: any): o is _122.QuerySmartContractStateResponseSDKType;
                isAmino(o: any): o is _122.QuerySmartContractStateResponseAmino;
                encode(message: _122.QuerySmartContractStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QuerySmartContractStateResponse;
                fromPartial(object: Partial<_122.QuerySmartContractStateResponse>): _122.QuerySmartContractStateResponse;
                fromAmino(object: _122.QuerySmartContractStateResponseAmino): _122.QuerySmartContractStateResponse;
                toAmino(message: _122.QuerySmartContractStateResponse): _122.QuerySmartContractStateResponseAmino;
                fromAminoMsg(object: _122.QuerySmartContractStateResponseAminoMsg): _122.QuerySmartContractStateResponse;
                toAminoMsg(message: _122.QuerySmartContractStateResponse): _122.QuerySmartContractStateResponseAminoMsg;
                fromProtoMsg(message: _122.QuerySmartContractStateResponseProtoMsg): _122.QuerySmartContractStateResponse;
                toProto(message: _122.QuerySmartContractStateResponse): Uint8Array;
                toProtoMsg(message: _122.QuerySmartContractStateResponse): _122.QuerySmartContractStateResponseProtoMsg;
            };
            QueryCodeRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryCodeRequest;
                isSDK(o: any): o is _122.QueryCodeRequestSDKType;
                isAmino(o: any): o is _122.QueryCodeRequestAmino;
                encode(message: _122.QueryCodeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryCodeRequest;
                fromPartial(object: Partial<_122.QueryCodeRequest>): _122.QueryCodeRequest;
                fromAmino(object: _122.QueryCodeRequestAmino): _122.QueryCodeRequest;
                toAmino(message: _122.QueryCodeRequest): _122.QueryCodeRequestAmino;
                fromAminoMsg(object: _122.QueryCodeRequestAminoMsg): _122.QueryCodeRequest;
                toAminoMsg(message: _122.QueryCodeRequest): _122.QueryCodeRequestAminoMsg;
                fromProtoMsg(message: _122.QueryCodeRequestProtoMsg): _122.QueryCodeRequest;
                toProto(message: _122.QueryCodeRequest): Uint8Array;
                toProtoMsg(message: _122.QueryCodeRequest): _122.QueryCodeRequestProtoMsg;
            };
            CodeInfoResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.CodeInfoResponse;
                isSDK(o: any): o is _122.CodeInfoResponseSDKType;
                isAmino(o: any): o is _122.CodeInfoResponseAmino;
                encode(message: _122.CodeInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.CodeInfoResponse;
                fromPartial(object: Partial<_122.CodeInfoResponse>): _122.CodeInfoResponse;
                fromAmino(object: _122.CodeInfoResponseAmino): _122.CodeInfoResponse;
                toAmino(message: _122.CodeInfoResponse): _122.CodeInfoResponseAmino;
                fromAminoMsg(object: _122.CodeInfoResponseAminoMsg): _122.CodeInfoResponse;
                toAminoMsg(message: _122.CodeInfoResponse): _122.CodeInfoResponseAminoMsg;
                fromProtoMsg(message: _122.CodeInfoResponseProtoMsg): _122.CodeInfoResponse;
                toProto(message: _122.CodeInfoResponse): Uint8Array;
                toProtoMsg(message: _122.CodeInfoResponse): _122.CodeInfoResponseProtoMsg;
            };
            QueryCodeResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryCodeResponse;
                isSDK(o: any): o is _122.QueryCodeResponseSDKType;
                isAmino(o: any): o is _122.QueryCodeResponseAmino;
                encode(message: _122.QueryCodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryCodeResponse;
                fromPartial(object: Partial<_122.QueryCodeResponse>): _122.QueryCodeResponse;
                fromAmino(object: _122.QueryCodeResponseAmino): _122.QueryCodeResponse;
                toAmino(message: _122.QueryCodeResponse): _122.QueryCodeResponseAmino;
                fromAminoMsg(object: _122.QueryCodeResponseAminoMsg): _122.QueryCodeResponse;
                toAminoMsg(message: _122.QueryCodeResponse): _122.QueryCodeResponseAminoMsg;
                fromProtoMsg(message: _122.QueryCodeResponseProtoMsg): _122.QueryCodeResponse;
                toProto(message: _122.QueryCodeResponse): Uint8Array;
                toProtoMsg(message: _122.QueryCodeResponse): _122.QueryCodeResponseProtoMsg;
            };
            QueryCodesRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryCodesRequest;
                isSDK(o: any): o is _122.QueryCodesRequestSDKType;
                isAmino(o: any): o is _122.QueryCodesRequestAmino;
                encode(message: _122.QueryCodesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryCodesRequest;
                fromPartial(object: Partial<_122.QueryCodesRequest>): _122.QueryCodesRequest;
                fromAmino(object: _122.QueryCodesRequestAmino): _122.QueryCodesRequest;
                toAmino(message: _122.QueryCodesRequest): _122.QueryCodesRequestAmino;
                fromAminoMsg(object: _122.QueryCodesRequestAminoMsg): _122.QueryCodesRequest;
                toAminoMsg(message: _122.QueryCodesRequest): _122.QueryCodesRequestAminoMsg;
                fromProtoMsg(message: _122.QueryCodesRequestProtoMsg): _122.QueryCodesRequest;
                toProto(message: _122.QueryCodesRequest): Uint8Array;
                toProtoMsg(message: _122.QueryCodesRequest): _122.QueryCodesRequestProtoMsg;
            };
            QueryCodesResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryCodesResponse;
                isSDK(o: any): o is _122.QueryCodesResponseSDKType;
                isAmino(o: any): o is _122.QueryCodesResponseAmino;
                encode(message: _122.QueryCodesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryCodesResponse;
                fromPartial(object: Partial<_122.QueryCodesResponse>): _122.QueryCodesResponse;
                fromAmino(object: _122.QueryCodesResponseAmino): _122.QueryCodesResponse;
                toAmino(message: _122.QueryCodesResponse): _122.QueryCodesResponseAmino;
                fromAminoMsg(object: _122.QueryCodesResponseAminoMsg): _122.QueryCodesResponse;
                toAminoMsg(message: _122.QueryCodesResponse): _122.QueryCodesResponseAminoMsg;
                fromProtoMsg(message: _122.QueryCodesResponseProtoMsg): _122.QueryCodesResponse;
                toProto(message: _122.QueryCodesResponse): Uint8Array;
                toProtoMsg(message: _122.QueryCodesResponse): _122.QueryCodesResponseProtoMsg;
            };
            QueryPinnedCodesRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryPinnedCodesRequest;
                isSDK(o: any): o is _122.QueryPinnedCodesRequestSDKType;
                isAmino(o: any): o is _122.QueryPinnedCodesRequestAmino;
                encode(message: _122.QueryPinnedCodesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryPinnedCodesRequest;
                fromPartial(object: Partial<_122.QueryPinnedCodesRequest>): _122.QueryPinnedCodesRequest;
                fromAmino(object: _122.QueryPinnedCodesRequestAmino): _122.QueryPinnedCodesRequest;
                toAmino(message: _122.QueryPinnedCodesRequest): _122.QueryPinnedCodesRequestAmino;
                fromAminoMsg(object: _122.QueryPinnedCodesRequestAminoMsg): _122.QueryPinnedCodesRequest;
                toAminoMsg(message: _122.QueryPinnedCodesRequest): _122.QueryPinnedCodesRequestAminoMsg;
                fromProtoMsg(message: _122.QueryPinnedCodesRequestProtoMsg): _122.QueryPinnedCodesRequest;
                toProto(message: _122.QueryPinnedCodesRequest): Uint8Array;
                toProtoMsg(message: _122.QueryPinnedCodesRequest): _122.QueryPinnedCodesRequestProtoMsg;
            };
            QueryPinnedCodesResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryPinnedCodesResponse;
                isSDK(o: any): o is _122.QueryPinnedCodesResponseSDKType;
                isAmino(o: any): o is _122.QueryPinnedCodesResponseAmino;
                encode(message: _122.QueryPinnedCodesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryPinnedCodesResponse;
                fromPartial(object: Partial<_122.QueryPinnedCodesResponse>): _122.QueryPinnedCodesResponse;
                fromAmino(object: _122.QueryPinnedCodesResponseAmino): _122.QueryPinnedCodesResponse;
                toAmino(message: _122.QueryPinnedCodesResponse): _122.QueryPinnedCodesResponseAmino;
                fromAminoMsg(object: _122.QueryPinnedCodesResponseAminoMsg): _122.QueryPinnedCodesResponse;
                toAminoMsg(message: _122.QueryPinnedCodesResponse): _122.QueryPinnedCodesResponseAminoMsg;
                fromProtoMsg(message: _122.QueryPinnedCodesResponseProtoMsg): _122.QueryPinnedCodesResponse;
                toProto(message: _122.QueryPinnedCodesResponse): Uint8Array;
                toProtoMsg(message: _122.QueryPinnedCodesResponse): _122.QueryPinnedCodesResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryParamsRequest;
                isSDK(o: any): o is _122.QueryParamsRequestSDKType;
                isAmino(o: any): o is _122.QueryParamsRequestAmino;
                encode(_: _122.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryParamsRequest;
                fromPartial(_: Partial<_122.QueryParamsRequest>): _122.QueryParamsRequest;
                fromAmino(_: _122.QueryParamsRequestAmino): _122.QueryParamsRequest;
                toAmino(_: _122.QueryParamsRequest): _122.QueryParamsRequestAmino;
                fromAminoMsg(object: _122.QueryParamsRequestAminoMsg): _122.QueryParamsRequest;
                toAminoMsg(message: _122.QueryParamsRequest): _122.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _122.QueryParamsRequestProtoMsg): _122.QueryParamsRequest;
                toProto(message: _122.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _122.QueryParamsRequest): _122.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryParamsResponse;
                isSDK(o: any): o is _122.QueryParamsResponseSDKType;
                isAmino(o: any): o is _122.QueryParamsResponseAmino;
                encode(message: _122.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryParamsResponse;
                fromPartial(object: Partial<_122.QueryParamsResponse>): _122.QueryParamsResponse;
                fromAmino(object: _122.QueryParamsResponseAmino): _122.QueryParamsResponse;
                toAmino(message: _122.QueryParamsResponse): _122.QueryParamsResponseAmino;
                fromAminoMsg(object: _122.QueryParamsResponseAminoMsg): _122.QueryParamsResponse;
                toAminoMsg(message: _122.QueryParamsResponse): _122.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _122.QueryParamsResponseProtoMsg): _122.QueryParamsResponse;
                toProto(message: _122.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _122.QueryParamsResponse): _122.QueryParamsResponseProtoMsg;
            };
            QueryContractsByCreatorRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryContractsByCreatorRequest;
                isSDK(o: any): o is _122.QueryContractsByCreatorRequestSDKType;
                isAmino(o: any): o is _122.QueryContractsByCreatorRequestAmino;
                encode(message: _122.QueryContractsByCreatorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryContractsByCreatorRequest;
                fromPartial(object: Partial<_122.QueryContractsByCreatorRequest>): _122.QueryContractsByCreatorRequest;
                fromAmino(object: _122.QueryContractsByCreatorRequestAmino): _122.QueryContractsByCreatorRequest;
                toAmino(message: _122.QueryContractsByCreatorRequest): _122.QueryContractsByCreatorRequestAmino;
                fromAminoMsg(object: _122.QueryContractsByCreatorRequestAminoMsg): _122.QueryContractsByCreatorRequest;
                toAminoMsg(message: _122.QueryContractsByCreatorRequest): _122.QueryContractsByCreatorRequestAminoMsg;
                fromProtoMsg(message: _122.QueryContractsByCreatorRequestProtoMsg): _122.QueryContractsByCreatorRequest;
                toProto(message: _122.QueryContractsByCreatorRequest): Uint8Array;
                toProtoMsg(message: _122.QueryContractsByCreatorRequest): _122.QueryContractsByCreatorRequestProtoMsg;
            };
            QueryContractsByCreatorResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryContractsByCreatorResponse;
                isSDK(o: any): o is _122.QueryContractsByCreatorResponseSDKType;
                isAmino(o: any): o is _122.QueryContractsByCreatorResponseAmino;
                encode(message: _122.QueryContractsByCreatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryContractsByCreatorResponse;
                fromPartial(object: Partial<_122.QueryContractsByCreatorResponse>): _122.QueryContractsByCreatorResponse;
                fromAmino(object: _122.QueryContractsByCreatorResponseAmino): _122.QueryContractsByCreatorResponse;
                toAmino(message: _122.QueryContractsByCreatorResponse): _122.QueryContractsByCreatorResponseAmino;
                fromAminoMsg(object: _122.QueryContractsByCreatorResponseAminoMsg): _122.QueryContractsByCreatorResponse;
                toAminoMsg(message: _122.QueryContractsByCreatorResponse): _122.QueryContractsByCreatorResponseAminoMsg;
                fromProtoMsg(message: _122.QueryContractsByCreatorResponseProtoMsg): _122.QueryContractsByCreatorResponse;
                toProto(message: _122.QueryContractsByCreatorResponse): Uint8Array;
                toProtoMsg(message: _122.QueryContractsByCreatorResponse): _122.QueryContractsByCreatorResponseProtoMsg;
            };
            QueryBuildAddressRequest: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryBuildAddressRequest;
                isSDK(o: any): o is _122.QueryBuildAddressRequestSDKType;
                isAmino(o: any): o is _122.QueryBuildAddressRequestAmino;
                encode(message: _122.QueryBuildAddressRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryBuildAddressRequest;
                fromPartial(object: Partial<_122.QueryBuildAddressRequest>): _122.QueryBuildAddressRequest;
                fromAmino(object: _122.QueryBuildAddressRequestAmino): _122.QueryBuildAddressRequest;
                toAmino(message: _122.QueryBuildAddressRequest): _122.QueryBuildAddressRequestAmino;
                fromAminoMsg(object: _122.QueryBuildAddressRequestAminoMsg): _122.QueryBuildAddressRequest;
                toAminoMsg(message: _122.QueryBuildAddressRequest): _122.QueryBuildAddressRequestAminoMsg;
                fromProtoMsg(message: _122.QueryBuildAddressRequestProtoMsg): _122.QueryBuildAddressRequest;
                toProto(message: _122.QueryBuildAddressRequest): Uint8Array;
                toProtoMsg(message: _122.QueryBuildAddressRequest): _122.QueryBuildAddressRequestProtoMsg;
            };
            QueryBuildAddressResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _122.QueryBuildAddressResponse;
                isSDK(o: any): o is _122.QueryBuildAddressResponseSDKType;
                isAmino(o: any): o is _122.QueryBuildAddressResponseAmino;
                encode(message: _122.QueryBuildAddressResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _122.QueryBuildAddressResponse;
                fromPartial(object: Partial<_122.QueryBuildAddressResponse>): _122.QueryBuildAddressResponse;
                fromAmino(object: _122.QueryBuildAddressResponseAmino): _122.QueryBuildAddressResponse;
                toAmino(message: _122.QueryBuildAddressResponse): _122.QueryBuildAddressResponseAmino;
                fromAminoMsg(object: _122.QueryBuildAddressResponseAminoMsg): _122.QueryBuildAddressResponse;
                toAminoMsg(message: _122.QueryBuildAddressResponse): _122.QueryBuildAddressResponseAminoMsg;
                fromProtoMsg(message: _122.QueryBuildAddressResponseProtoMsg): _122.QueryBuildAddressResponse;
                toProto(message: _122.QueryBuildAddressResponse): Uint8Array;
                toProtoMsg(message: _122.QueryBuildAddressResponse): _122.QueryBuildAddressResponseProtoMsg;
            };
            StoreCodeProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.StoreCodeProposal;
                isSDK(o: any): o is _121.StoreCodeProposalSDKType;
                isAmino(o: any): o is _121.StoreCodeProposalAmino;
                encode(message: _121.StoreCodeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.StoreCodeProposal;
                fromPartial(object: Partial<_121.StoreCodeProposal>): _121.StoreCodeProposal;
                fromAmino(object: _121.StoreCodeProposalAmino): _121.StoreCodeProposal;
                toAmino(message: _121.StoreCodeProposal): _121.StoreCodeProposalAmino;
                fromAminoMsg(object: _121.StoreCodeProposalAminoMsg): _121.StoreCodeProposal;
                toAminoMsg(message: _121.StoreCodeProposal): _121.StoreCodeProposalAminoMsg;
                fromProtoMsg(message: _121.StoreCodeProposalProtoMsg): _121.StoreCodeProposal;
                toProto(message: _121.StoreCodeProposal): Uint8Array;
                toProtoMsg(message: _121.StoreCodeProposal): _121.StoreCodeProposalProtoMsg;
            };
            InstantiateContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.InstantiateContractProposal;
                isSDK(o: any): o is _121.InstantiateContractProposalSDKType;
                isAmino(o: any): o is _121.InstantiateContractProposalAmino;
                encode(message: _121.InstantiateContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.InstantiateContractProposal;
                fromPartial(object: Partial<_121.InstantiateContractProposal>): _121.InstantiateContractProposal;
                fromAmino(object: _121.InstantiateContractProposalAmino): _121.InstantiateContractProposal;
                toAmino(message: _121.InstantiateContractProposal): _121.InstantiateContractProposalAmino;
                fromAminoMsg(object: _121.InstantiateContractProposalAminoMsg): _121.InstantiateContractProposal;
                toAminoMsg(message: _121.InstantiateContractProposal): _121.InstantiateContractProposalAminoMsg;
                fromProtoMsg(message: _121.InstantiateContractProposalProtoMsg): _121.InstantiateContractProposal;
                toProto(message: _121.InstantiateContractProposal): Uint8Array;
                toProtoMsg(message: _121.InstantiateContractProposal): _121.InstantiateContractProposalProtoMsg;
            };
            InstantiateContract2Proposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.InstantiateContract2Proposal;
                isSDK(o: any): o is _121.InstantiateContract2ProposalSDKType;
                isAmino(o: any): o is _121.InstantiateContract2ProposalAmino;
                encode(message: _121.InstantiateContract2Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.InstantiateContract2Proposal;
                fromPartial(object: Partial<_121.InstantiateContract2Proposal>): _121.InstantiateContract2Proposal;
                fromAmino(object: _121.InstantiateContract2ProposalAmino): _121.InstantiateContract2Proposal;
                toAmino(message: _121.InstantiateContract2Proposal): _121.InstantiateContract2ProposalAmino;
                fromAminoMsg(object: _121.InstantiateContract2ProposalAminoMsg): _121.InstantiateContract2Proposal;
                toAminoMsg(message: _121.InstantiateContract2Proposal): _121.InstantiateContract2ProposalAminoMsg;
                fromProtoMsg(message: _121.InstantiateContract2ProposalProtoMsg): _121.InstantiateContract2Proposal;
                toProto(message: _121.InstantiateContract2Proposal): Uint8Array;
                toProtoMsg(message: _121.InstantiateContract2Proposal): _121.InstantiateContract2ProposalProtoMsg;
            };
            MigrateContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.MigrateContractProposal;
                isSDK(o: any): o is _121.MigrateContractProposalSDKType;
                isAmino(o: any): o is _121.MigrateContractProposalAmino;
                encode(message: _121.MigrateContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.MigrateContractProposal;
                fromPartial(object: Partial<_121.MigrateContractProposal>): _121.MigrateContractProposal;
                fromAmino(object: _121.MigrateContractProposalAmino): _121.MigrateContractProposal;
                toAmino(message: _121.MigrateContractProposal): _121.MigrateContractProposalAmino;
                fromAminoMsg(object: _121.MigrateContractProposalAminoMsg): _121.MigrateContractProposal;
                toAminoMsg(message: _121.MigrateContractProposal): _121.MigrateContractProposalAminoMsg;
                fromProtoMsg(message: _121.MigrateContractProposalProtoMsg): _121.MigrateContractProposal;
                toProto(message: _121.MigrateContractProposal): Uint8Array;
                toProtoMsg(message: _121.MigrateContractProposal): _121.MigrateContractProposalProtoMsg;
            };
            SudoContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.SudoContractProposal;
                isSDK(o: any): o is _121.SudoContractProposalSDKType;
                isAmino(o: any): o is _121.SudoContractProposalAmino;
                encode(message: _121.SudoContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.SudoContractProposal;
                fromPartial(object: Partial<_121.SudoContractProposal>): _121.SudoContractProposal;
                fromAmino(object: _121.SudoContractProposalAmino): _121.SudoContractProposal;
                toAmino(message: _121.SudoContractProposal): _121.SudoContractProposalAmino;
                fromAminoMsg(object: _121.SudoContractProposalAminoMsg): _121.SudoContractProposal;
                toAminoMsg(message: _121.SudoContractProposal): _121.SudoContractProposalAminoMsg;
                fromProtoMsg(message: _121.SudoContractProposalProtoMsg): _121.SudoContractProposal;
                toProto(message: _121.SudoContractProposal): Uint8Array;
                toProtoMsg(message: _121.SudoContractProposal): _121.SudoContractProposalProtoMsg;
            };
            ExecuteContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.ExecuteContractProposal;
                isSDK(o: any): o is _121.ExecuteContractProposalSDKType;
                isAmino(o: any): o is _121.ExecuteContractProposalAmino;
                encode(message: _121.ExecuteContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.ExecuteContractProposal;
                fromPartial(object: Partial<_121.ExecuteContractProposal>): _121.ExecuteContractProposal;
                fromAmino(object: _121.ExecuteContractProposalAmino): _121.ExecuteContractProposal;
                toAmino(message: _121.ExecuteContractProposal): _121.ExecuteContractProposalAmino;
                fromAminoMsg(object: _121.ExecuteContractProposalAminoMsg): _121.ExecuteContractProposal;
                toAminoMsg(message: _121.ExecuteContractProposal): _121.ExecuteContractProposalAminoMsg;
                fromProtoMsg(message: _121.ExecuteContractProposalProtoMsg): _121.ExecuteContractProposal;
                toProto(message: _121.ExecuteContractProposal): Uint8Array;
                toProtoMsg(message: _121.ExecuteContractProposal): _121.ExecuteContractProposalProtoMsg;
            };
            UpdateAdminProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.UpdateAdminProposal;
                isSDK(o: any): o is _121.UpdateAdminProposalSDKType;
                isAmino(o: any): o is _121.UpdateAdminProposalAmino;
                encode(message: _121.UpdateAdminProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.UpdateAdminProposal;
                fromPartial(object: Partial<_121.UpdateAdminProposal>): _121.UpdateAdminProposal;
                fromAmino(object: _121.UpdateAdminProposalAmino): _121.UpdateAdminProposal;
                toAmino(message: _121.UpdateAdminProposal): _121.UpdateAdminProposalAmino;
                fromAminoMsg(object: _121.UpdateAdminProposalAminoMsg): _121.UpdateAdminProposal;
                toAminoMsg(message: _121.UpdateAdminProposal): _121.UpdateAdminProposalAminoMsg;
                fromProtoMsg(message: _121.UpdateAdminProposalProtoMsg): _121.UpdateAdminProposal;
                toProto(message: _121.UpdateAdminProposal): Uint8Array;
                toProtoMsg(message: _121.UpdateAdminProposal): _121.UpdateAdminProposalProtoMsg;
            };
            ClearAdminProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.ClearAdminProposal;
                isSDK(o: any): o is _121.ClearAdminProposalSDKType;
                isAmino(o: any): o is _121.ClearAdminProposalAmino;
                encode(message: _121.ClearAdminProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.ClearAdminProposal;
                fromPartial(object: Partial<_121.ClearAdminProposal>): _121.ClearAdminProposal;
                fromAmino(object: _121.ClearAdminProposalAmino): _121.ClearAdminProposal;
                toAmino(message: _121.ClearAdminProposal): _121.ClearAdminProposalAmino;
                fromAminoMsg(object: _121.ClearAdminProposalAminoMsg): _121.ClearAdminProposal;
                toAminoMsg(message: _121.ClearAdminProposal): _121.ClearAdminProposalAminoMsg;
                fromProtoMsg(message: _121.ClearAdminProposalProtoMsg): _121.ClearAdminProposal;
                toProto(message: _121.ClearAdminProposal): Uint8Array;
                toProtoMsg(message: _121.ClearAdminProposal): _121.ClearAdminProposalProtoMsg;
            };
            PinCodesProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.PinCodesProposal;
                isSDK(o: any): o is _121.PinCodesProposalSDKType;
                isAmino(o: any): o is _121.PinCodesProposalAmino;
                encode(message: _121.PinCodesProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.PinCodesProposal;
                fromPartial(object: Partial<_121.PinCodesProposal>): _121.PinCodesProposal;
                fromAmino(object: _121.PinCodesProposalAmino): _121.PinCodesProposal;
                toAmino(message: _121.PinCodesProposal): _121.PinCodesProposalAmino;
                fromAminoMsg(object: _121.PinCodesProposalAminoMsg): _121.PinCodesProposal;
                toAminoMsg(message: _121.PinCodesProposal): _121.PinCodesProposalAminoMsg;
                fromProtoMsg(message: _121.PinCodesProposalProtoMsg): _121.PinCodesProposal;
                toProto(message: _121.PinCodesProposal): Uint8Array;
                toProtoMsg(message: _121.PinCodesProposal): _121.PinCodesProposalProtoMsg;
            };
            UnpinCodesProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.UnpinCodesProposal;
                isSDK(o: any): o is _121.UnpinCodesProposalSDKType;
                isAmino(o: any): o is _121.UnpinCodesProposalAmino;
                encode(message: _121.UnpinCodesProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.UnpinCodesProposal;
                fromPartial(object: Partial<_121.UnpinCodesProposal>): _121.UnpinCodesProposal;
                fromAmino(object: _121.UnpinCodesProposalAmino): _121.UnpinCodesProposal;
                toAmino(message: _121.UnpinCodesProposal): _121.UnpinCodesProposalAmino;
                fromAminoMsg(object: _121.UnpinCodesProposalAminoMsg): _121.UnpinCodesProposal;
                toAminoMsg(message: _121.UnpinCodesProposal): _121.UnpinCodesProposalAminoMsg;
                fromProtoMsg(message: _121.UnpinCodesProposalProtoMsg): _121.UnpinCodesProposal;
                toProto(message: _121.UnpinCodesProposal): Uint8Array;
                toProtoMsg(message: _121.UnpinCodesProposal): _121.UnpinCodesProposalProtoMsg;
            };
            AccessConfigUpdate: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.AccessConfigUpdate;
                isSDK(o: any): o is _121.AccessConfigUpdateSDKType;
                isAmino(o: any): o is _121.AccessConfigUpdateAmino;
                encode(message: _121.AccessConfigUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.AccessConfigUpdate;
                fromPartial(object: Partial<_121.AccessConfigUpdate>): _121.AccessConfigUpdate;
                fromAmino(object: _121.AccessConfigUpdateAmino): _121.AccessConfigUpdate;
                toAmino(message: _121.AccessConfigUpdate): _121.AccessConfigUpdateAmino;
                fromAminoMsg(object: _121.AccessConfigUpdateAminoMsg): _121.AccessConfigUpdate;
                toAminoMsg(message: _121.AccessConfigUpdate): _121.AccessConfigUpdateAminoMsg;
                fromProtoMsg(message: _121.AccessConfigUpdateProtoMsg): _121.AccessConfigUpdate;
                toProto(message: _121.AccessConfigUpdate): Uint8Array;
                toProtoMsg(message: _121.AccessConfigUpdate): _121.AccessConfigUpdateProtoMsg;
            };
            UpdateInstantiateConfigProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.UpdateInstantiateConfigProposal;
                isSDK(o: any): o is _121.UpdateInstantiateConfigProposalSDKType;
                isAmino(o: any): o is _121.UpdateInstantiateConfigProposalAmino;
                encode(message: _121.UpdateInstantiateConfigProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.UpdateInstantiateConfigProposal;
                fromPartial(object: Partial<_121.UpdateInstantiateConfigProposal>): _121.UpdateInstantiateConfigProposal;
                fromAmino(object: _121.UpdateInstantiateConfigProposalAmino): _121.UpdateInstantiateConfigProposal;
                toAmino(message: _121.UpdateInstantiateConfigProposal): _121.UpdateInstantiateConfigProposalAmino;
                fromAminoMsg(object: _121.UpdateInstantiateConfigProposalAminoMsg): _121.UpdateInstantiateConfigProposal;
                toAminoMsg(message: _121.UpdateInstantiateConfigProposal): _121.UpdateInstantiateConfigProposalAminoMsg;
                fromProtoMsg(message: _121.UpdateInstantiateConfigProposalProtoMsg): _121.UpdateInstantiateConfigProposal;
                toProto(message: _121.UpdateInstantiateConfigProposal): Uint8Array;
                toProtoMsg(message: _121.UpdateInstantiateConfigProposal): _121.UpdateInstantiateConfigProposalProtoMsg;
            };
            StoreAndInstantiateContractProposal: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _121.StoreAndInstantiateContractProposal;
                isSDK(o: any): o is _121.StoreAndInstantiateContractProposalSDKType;
                isAmino(o: any): o is _121.StoreAndInstantiateContractProposalAmino;
                encode(message: _121.StoreAndInstantiateContractProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _121.StoreAndInstantiateContractProposal;
                fromPartial(object: Partial<_121.StoreAndInstantiateContractProposal>): _121.StoreAndInstantiateContractProposal;
                fromAmino(object: _121.StoreAndInstantiateContractProposalAmino): _121.StoreAndInstantiateContractProposal;
                toAmino(message: _121.StoreAndInstantiateContractProposal): _121.StoreAndInstantiateContractProposalAmino;
                fromAminoMsg(object: _121.StoreAndInstantiateContractProposalAminoMsg): _121.StoreAndInstantiateContractProposal;
                toAminoMsg(message: _121.StoreAndInstantiateContractProposal): _121.StoreAndInstantiateContractProposalAminoMsg;
                fromProtoMsg(message: _121.StoreAndInstantiateContractProposalProtoMsg): _121.StoreAndInstantiateContractProposal;
                toProto(message: _121.StoreAndInstantiateContractProposal): Uint8Array;
                toProtoMsg(message: _121.StoreAndInstantiateContractProposal): _121.StoreAndInstantiateContractProposalProtoMsg;
            };
            MsgIBCSend: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _120.MsgIBCSend;
                isSDK(o: any): o is _120.MsgIBCSendSDKType;
                isAmino(o: any): o is _120.MsgIBCSendAmino;
                encode(message: _120.MsgIBCSend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _120.MsgIBCSend;
                fromPartial(object: Partial<_120.MsgIBCSend>): _120.MsgIBCSend;
                fromAmino(object: _120.MsgIBCSendAmino): _120.MsgIBCSend;
                toAmino(message: _120.MsgIBCSend): _120.MsgIBCSendAmino;
                fromAminoMsg(object: _120.MsgIBCSendAminoMsg): _120.MsgIBCSend;
                toAminoMsg(message: _120.MsgIBCSend): _120.MsgIBCSendAminoMsg;
                fromProtoMsg(message: _120.MsgIBCSendProtoMsg): _120.MsgIBCSend;
                toProto(message: _120.MsgIBCSend): Uint8Array;
                toProtoMsg(message: _120.MsgIBCSend): _120.MsgIBCSendProtoMsg;
            };
            MsgIBCSendResponse: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _120.MsgIBCSendResponse;
                isSDK(o: any): o is _120.MsgIBCSendResponseSDKType;
                isAmino(o: any): o is _120.MsgIBCSendResponseAmino;
                encode(message: _120.MsgIBCSendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _120.MsgIBCSendResponse;
                fromPartial(object: Partial<_120.MsgIBCSendResponse>): _120.MsgIBCSendResponse;
                fromAmino(object: _120.MsgIBCSendResponseAmino): _120.MsgIBCSendResponse;
                toAmino(message: _120.MsgIBCSendResponse): _120.MsgIBCSendResponseAmino;
                fromAminoMsg(object: _120.MsgIBCSendResponseAminoMsg): _120.MsgIBCSendResponse;
                toAminoMsg(message: _120.MsgIBCSendResponse): _120.MsgIBCSendResponseAminoMsg;
                fromProtoMsg(message: _120.MsgIBCSendResponseProtoMsg): _120.MsgIBCSendResponse;
                toProto(message: _120.MsgIBCSendResponse): Uint8Array;
                toProtoMsg(message: _120.MsgIBCSendResponse): _120.MsgIBCSendResponseProtoMsg;
            };
            MsgIBCCloseChannel: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _120.MsgIBCCloseChannel;
                isSDK(o: any): o is _120.MsgIBCCloseChannelSDKType;
                isAmino(o: any): o is _120.MsgIBCCloseChannelAmino;
                encode(message: _120.MsgIBCCloseChannel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _120.MsgIBCCloseChannel;
                fromPartial(object: Partial<_120.MsgIBCCloseChannel>): _120.MsgIBCCloseChannel;
                fromAmino(object: _120.MsgIBCCloseChannelAmino): _120.MsgIBCCloseChannel;
                toAmino(message: _120.MsgIBCCloseChannel): _120.MsgIBCCloseChannelAmino;
                fromAminoMsg(object: _120.MsgIBCCloseChannelAminoMsg): _120.MsgIBCCloseChannel;
                toAminoMsg(message: _120.MsgIBCCloseChannel): _120.MsgIBCCloseChannelAminoMsg;
                fromProtoMsg(message: _120.MsgIBCCloseChannelProtoMsg): _120.MsgIBCCloseChannel;
                toProto(message: _120.MsgIBCCloseChannel): Uint8Array;
                toProtoMsg(message: _120.MsgIBCCloseChannel): _120.MsgIBCCloseChannelProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _119.GenesisState;
                isSDK(o: any): o is _119.GenesisStateSDKType;
                isAmino(o: any): o is _119.GenesisStateAmino;
                encode(message: _119.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _119.GenesisState;
                fromPartial(object: Partial<_119.GenesisState>): _119.GenesisState;
                fromAmino(object: _119.GenesisStateAmino): _119.GenesisState;
                toAmino(message: _119.GenesisState): _119.GenesisStateAmino;
                fromAminoMsg(object: _119.GenesisStateAminoMsg): _119.GenesisState;
                toAminoMsg(message: _119.GenesisState): _119.GenesisStateAminoMsg;
                fromProtoMsg(message: _119.GenesisStateProtoMsg): _119.GenesisState;
                toProto(message: _119.GenesisState): Uint8Array;
                toProtoMsg(message: _119.GenesisState): _119.GenesisStateProtoMsg;
            };
            Code: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _119.Code;
                isSDK(o: any): o is _119.CodeSDKType;
                isAmino(o: any): o is _119.CodeAmino;
                encode(message: _119.Code, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _119.Code;
                fromPartial(object: Partial<_119.Code>): _119.Code;
                fromAmino(object: _119.CodeAmino): _119.Code;
                toAmino(message: _119.Code): _119.CodeAmino;
                fromAminoMsg(object: _119.CodeAminoMsg): _119.Code;
                toAminoMsg(message: _119.Code): _119.CodeAminoMsg;
                fromProtoMsg(message: _119.CodeProtoMsg): _119.Code;
                toProto(message: _119.Code): Uint8Array;
                toProtoMsg(message: _119.Code): _119.CodeProtoMsg;
            };
            Contract: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _119.Contract;
                isSDK(o: any): o is _119.ContractSDKType;
                isAmino(o: any): o is _119.ContractAmino;
                encode(message: _119.Contract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _119.Contract;
                fromPartial(object: Partial<_119.Contract>): _119.Contract;
                fromAmino(object: _119.ContractAmino): _119.Contract;
                toAmino(message: _119.Contract): _119.ContractAmino;
                fromAminoMsg(object: _119.ContractAminoMsg): _119.Contract;
                toAminoMsg(message: _119.Contract): _119.ContractAminoMsg;
                fromProtoMsg(message: _119.ContractProtoMsg): _119.Contract;
                toProto(message: _119.Contract): Uint8Array;
                toProtoMsg(message: _119.Contract): _119.ContractProtoMsg;
            };
            Sequence: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _119.Sequence;
                isSDK(o: any): o is _119.SequenceSDKType;
                isAmino(o: any): o is _119.SequenceAmino;
                encode(message: _119.Sequence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _119.Sequence;
                fromPartial(object: Partial<_119.Sequence>): _119.Sequence;
                fromAmino(object: _119.SequenceAmino): _119.Sequence;
                toAmino(message: _119.Sequence): _119.SequenceAmino;
                fromAminoMsg(object: _119.SequenceAminoMsg): _119.Sequence;
                toAminoMsg(message: _119.Sequence): _119.SequenceAminoMsg;
                fromProtoMsg(message: _119.SequenceProtoMsg): _119.Sequence;
                toProto(message: _119.Sequence): Uint8Array;
                toProtoMsg(message: _119.Sequence): _119.SequenceProtoMsg;
            };
            StoreCodeAuthorization: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.StoreCodeAuthorization;
                isSDK(o: any): o is _118.StoreCodeAuthorizationSDKType;
                isAmino(o: any): o is _118.StoreCodeAuthorizationAmino;
                encode(message: _118.StoreCodeAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.StoreCodeAuthorization;
                fromPartial(object: Partial<_118.StoreCodeAuthorization>): _118.StoreCodeAuthorization;
                fromAmino(object: _118.StoreCodeAuthorizationAmino): _118.StoreCodeAuthorization;
                toAmino(message: _118.StoreCodeAuthorization): _118.StoreCodeAuthorizationAmino;
                fromAminoMsg(object: _118.StoreCodeAuthorizationAminoMsg): _118.StoreCodeAuthorization;
                toAminoMsg(message: _118.StoreCodeAuthorization): _118.StoreCodeAuthorizationAminoMsg;
                fromProtoMsg(message: _118.StoreCodeAuthorizationProtoMsg): _118.StoreCodeAuthorization;
                toProto(message: _118.StoreCodeAuthorization): Uint8Array;
                toProtoMsg(message: _118.StoreCodeAuthorization): _118.StoreCodeAuthorizationProtoMsg;
            };
            ContractExecutionAuthorization: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.ContractExecutionAuthorization;
                isSDK(o: any): o is _118.ContractExecutionAuthorizationSDKType;
                isAmino(o: any): o is _118.ContractExecutionAuthorizationAmino;
                encode(message: _118.ContractExecutionAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.ContractExecutionAuthorization;
                fromPartial(object: Partial<_118.ContractExecutionAuthorization>): _118.ContractExecutionAuthorization;
                fromAmino(object: _118.ContractExecutionAuthorizationAmino): _118.ContractExecutionAuthorization;
                toAmino(message: _118.ContractExecutionAuthorization): _118.ContractExecutionAuthorizationAmino;
                fromAminoMsg(object: _118.ContractExecutionAuthorizationAminoMsg): _118.ContractExecutionAuthorization;
                toAminoMsg(message: _118.ContractExecutionAuthorization): _118.ContractExecutionAuthorizationAminoMsg;
                fromProtoMsg(message: _118.ContractExecutionAuthorizationProtoMsg): _118.ContractExecutionAuthorization;
                toProto(message: _118.ContractExecutionAuthorization): Uint8Array;
                toProtoMsg(message: _118.ContractExecutionAuthorization): _118.ContractExecutionAuthorizationProtoMsg;
            };
            ContractMigrationAuthorization: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.ContractMigrationAuthorization;
                isSDK(o: any): o is _118.ContractMigrationAuthorizationSDKType;
                isAmino(o: any): o is _118.ContractMigrationAuthorizationAmino;
                encode(message: _118.ContractMigrationAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.ContractMigrationAuthorization;
                fromPartial(object: Partial<_118.ContractMigrationAuthorization>): _118.ContractMigrationAuthorization;
                fromAmino(object: _118.ContractMigrationAuthorizationAmino): _118.ContractMigrationAuthorization;
                toAmino(message: _118.ContractMigrationAuthorization): _118.ContractMigrationAuthorizationAmino;
                fromAminoMsg(object: _118.ContractMigrationAuthorizationAminoMsg): _118.ContractMigrationAuthorization;
                toAminoMsg(message: _118.ContractMigrationAuthorization): _118.ContractMigrationAuthorizationAminoMsg;
                fromProtoMsg(message: _118.ContractMigrationAuthorizationProtoMsg): _118.ContractMigrationAuthorization;
                toProto(message: _118.ContractMigrationAuthorization): Uint8Array;
                toProtoMsg(message: _118.ContractMigrationAuthorization): _118.ContractMigrationAuthorizationProtoMsg;
            };
            CodeGrant: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.CodeGrant;
                isSDK(o: any): o is _118.CodeGrantSDKType;
                isAmino(o: any): o is _118.CodeGrantAmino;
                encode(message: _118.CodeGrant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.CodeGrant;
                fromPartial(object: Partial<_118.CodeGrant>): _118.CodeGrant;
                fromAmino(object: _118.CodeGrantAmino): _118.CodeGrant;
                toAmino(message: _118.CodeGrant): _118.CodeGrantAmino;
                fromAminoMsg(object: _118.CodeGrantAminoMsg): _118.CodeGrant;
                toAminoMsg(message: _118.CodeGrant): _118.CodeGrantAminoMsg;
                fromProtoMsg(message: _118.CodeGrantProtoMsg): _118.CodeGrant;
                toProto(message: _118.CodeGrant): Uint8Array;
                toProtoMsg(message: _118.CodeGrant): _118.CodeGrantProtoMsg;
            };
            ContractGrant: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.ContractGrant;
                isSDK(o: any): o is _118.ContractGrantSDKType;
                isAmino(o: any): o is _118.ContractGrantAmino;
                encode(message: _118.ContractGrant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.ContractGrant;
                fromPartial(object: Partial<_118.ContractGrant>): _118.ContractGrant;
                fromAmino(object: _118.ContractGrantAmino): _118.ContractGrant;
                toAmino(message: _118.ContractGrant): _118.ContractGrantAmino;
                fromAminoMsg(object: _118.ContractGrantAminoMsg): _118.ContractGrant;
                toAminoMsg(message: _118.ContractGrant): _118.ContractGrantAminoMsg;
                fromProtoMsg(message: _118.ContractGrantProtoMsg): _118.ContractGrant;
                toProto(message: _118.ContractGrant): Uint8Array;
                toProtoMsg(message: _118.ContractGrant): _118.ContractGrantProtoMsg;
            };
            MaxCallsLimit: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.MaxCallsLimit;
                isSDK(o: any): o is _118.MaxCallsLimitSDKType;
                isAmino(o: any): o is _118.MaxCallsLimitAmino;
                encode(message: _118.MaxCallsLimit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.MaxCallsLimit;
                fromPartial(object: Partial<_118.MaxCallsLimit>): _118.MaxCallsLimit;
                fromAmino(object: _118.MaxCallsLimitAmino): _118.MaxCallsLimit;
                toAmino(message: _118.MaxCallsLimit): _118.MaxCallsLimitAmino;
                fromAminoMsg(object: _118.MaxCallsLimitAminoMsg): _118.MaxCallsLimit;
                toAminoMsg(message: _118.MaxCallsLimit): _118.MaxCallsLimitAminoMsg;
                fromProtoMsg(message: _118.MaxCallsLimitProtoMsg): _118.MaxCallsLimit;
                toProto(message: _118.MaxCallsLimit): Uint8Array;
                toProtoMsg(message: _118.MaxCallsLimit): _118.MaxCallsLimitProtoMsg;
            };
            MaxFundsLimit: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.MaxFundsLimit;
                isSDK(o: any): o is _118.MaxFundsLimitSDKType;
                isAmino(o: any): o is _118.MaxFundsLimitAmino;
                encode(message: _118.MaxFundsLimit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.MaxFundsLimit;
                fromPartial(object: Partial<_118.MaxFundsLimit>): _118.MaxFundsLimit;
                fromAmino(object: _118.MaxFundsLimitAmino): _118.MaxFundsLimit;
                toAmino(message: _118.MaxFundsLimit): _118.MaxFundsLimitAmino;
                fromAminoMsg(object: _118.MaxFundsLimitAminoMsg): _118.MaxFundsLimit;
                toAminoMsg(message: _118.MaxFundsLimit): _118.MaxFundsLimitAminoMsg;
                fromProtoMsg(message: _118.MaxFundsLimitProtoMsg): _118.MaxFundsLimit;
                toProto(message: _118.MaxFundsLimit): Uint8Array;
                toProtoMsg(message: _118.MaxFundsLimit): _118.MaxFundsLimitProtoMsg;
            };
            CombinedLimit: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.CombinedLimit;
                isSDK(o: any): o is _118.CombinedLimitSDKType;
                isAmino(o: any): o is _118.CombinedLimitAmino;
                encode(message: _118.CombinedLimit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.CombinedLimit;
                fromPartial(object: Partial<_118.CombinedLimit>): _118.CombinedLimit;
                fromAmino(object: _118.CombinedLimitAmino): _118.CombinedLimit;
                toAmino(message: _118.CombinedLimit): _118.CombinedLimitAmino;
                fromAminoMsg(object: _118.CombinedLimitAminoMsg): _118.CombinedLimit;
                toAminoMsg(message: _118.CombinedLimit): _118.CombinedLimitAminoMsg;
                fromProtoMsg(message: _118.CombinedLimitProtoMsg): _118.CombinedLimit;
                toProto(message: _118.CombinedLimit): Uint8Array;
                toProtoMsg(message: _118.CombinedLimit): _118.CombinedLimitProtoMsg;
            };
            AllowAllMessagesFilter: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.AllowAllMessagesFilter;
                isSDK(o: any): o is _118.AllowAllMessagesFilterSDKType;
                isAmino(o: any): o is _118.AllowAllMessagesFilterAmino;
                encode(_: _118.AllowAllMessagesFilter, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.AllowAllMessagesFilter;
                fromPartial(_: Partial<_118.AllowAllMessagesFilter>): _118.AllowAllMessagesFilter;
                fromAmino(_: _118.AllowAllMessagesFilterAmino): _118.AllowAllMessagesFilter;
                toAmino(_: _118.AllowAllMessagesFilter): _118.AllowAllMessagesFilterAmino;
                fromAminoMsg(object: _118.AllowAllMessagesFilterAminoMsg): _118.AllowAllMessagesFilter;
                toAminoMsg(message: _118.AllowAllMessagesFilter): _118.AllowAllMessagesFilterAminoMsg;
                fromProtoMsg(message: _118.AllowAllMessagesFilterProtoMsg): _118.AllowAllMessagesFilter;
                toProto(message: _118.AllowAllMessagesFilter): Uint8Array;
                toProtoMsg(message: _118.AllowAllMessagesFilter): _118.AllowAllMessagesFilterProtoMsg;
            };
            AcceptedMessageKeysFilter: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.AcceptedMessageKeysFilter;
                isSDK(o: any): o is _118.AcceptedMessageKeysFilterSDKType;
                isAmino(o: any): o is _118.AcceptedMessageKeysFilterAmino;
                encode(message: _118.AcceptedMessageKeysFilter, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.AcceptedMessageKeysFilter;
                fromPartial(object: Partial<_118.AcceptedMessageKeysFilter>): _118.AcceptedMessageKeysFilter;
                fromAmino(object: _118.AcceptedMessageKeysFilterAmino): _118.AcceptedMessageKeysFilter;
                toAmino(message: _118.AcceptedMessageKeysFilter): _118.AcceptedMessageKeysFilterAmino;
                fromAminoMsg(object: _118.AcceptedMessageKeysFilterAminoMsg): _118.AcceptedMessageKeysFilter;
                toAminoMsg(message: _118.AcceptedMessageKeysFilter): _118.AcceptedMessageKeysFilterAminoMsg;
                fromProtoMsg(message: _118.AcceptedMessageKeysFilterProtoMsg): _118.AcceptedMessageKeysFilter;
                toProto(message: _118.AcceptedMessageKeysFilter): Uint8Array;
                toProtoMsg(message: _118.AcceptedMessageKeysFilter): _118.AcceptedMessageKeysFilterProtoMsg;
            };
            AcceptedMessagesFilter: {
                typeUrl: string;
                aminoType: string;
                is(o: any): o is _118.AcceptedMessagesFilter;
                isSDK(o: any): o is _118.AcceptedMessagesFilterSDKType;
                isAmino(o: any): o is _118.AcceptedMessagesFilterAmino;
                encode(message: _118.AcceptedMessagesFilter, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _118.AcceptedMessagesFilter;
                fromPartial(object: Partial<_118.AcceptedMessagesFilter>): _118.AcceptedMessagesFilter;
                fromAmino(object: _118.AcceptedMessagesFilterAmino): _118.AcceptedMessagesFilter;
                toAmino(message: _118.AcceptedMessagesFilter): _118.AcceptedMessagesFilterAmino;
                fromAminoMsg(object: _118.AcceptedMessagesFilterAminoMsg): _118.AcceptedMessagesFilter;
                toAminoMsg(message: _118.AcceptedMessagesFilter): _118.AcceptedMessagesFilterAminoMsg;
                fromProtoMsg(message: _118.AcceptedMessagesFilterProtoMsg): _118.AcceptedMessagesFilter;
                toProto(message: _118.AcceptedMessagesFilter): Uint8Array;
                toProtoMsg(message: _118.AcceptedMessagesFilter): _118.AcceptedMessagesFilterProtoMsg;
            };
        };
    }
    const ClientFactory: {
        createRPCMsgClient: ({ rpc }: {
            rpc: import("../helpers").Rpc;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: import("../cosmos/auth/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                authz: {
                    v1beta1: import("../cosmos/authz/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                bank: {
                    v1beta1: import("../cosmos/bank/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                consensus: {
                    v1: import("../cosmos/consensus/v1/tx.rpc.msg").MsgClientImpl;
                };
                distribution: {
                    v1beta1: import("../cosmos/distribution/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                gov: {
                    v1beta1: import("../cosmos/gov/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                staking: {
                    v1beta1: import("../cosmos/staking/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                upgrade: {
                    v1beta1: import("../cosmos/upgrade/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
            };
            cosmwasm: {
                wasm: {
                    v1: _329.MsgClientImpl;
                };
            };
        }>;
        createRPCQueryClient: ({ rpcEndpoint }: {
            rpcEndpoint: string | import("@cosmjs/tendermint-rpc").HttpEndpoint;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: {
                        accounts(request?: import("../cosmos/auth/v1beta1/query").QueryAccountsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountsResponse>;
                        account(request: import("../cosmos/auth/v1beta1/query").QueryAccountRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountResponse>;
                        accountAddressByID(request: import("../cosmos/auth/v1beta1/query").QueryAccountAddressByIDRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountAddressByIDResponse>;
                        params(request?: import("../cosmos/auth/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryParamsResponse>;
                        moduleAccounts(request?: import("../cosmos/auth/v1beta1/query").QueryModuleAccountsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryModuleAccountsResponse>;
                        moduleAccountByName(request: import("../cosmos/auth/v1beta1/query").QueryModuleAccountByNameRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryModuleAccountByNameResponse>;
                        bech32Prefix(request?: import("../cosmos/auth/v1beta1/query").Bech32PrefixRequest): Promise<import("../cosmos/auth/v1beta1/query").Bech32PrefixResponse>;
                        addressBytesToString(request: import("../cosmos/auth/v1beta1/query").AddressBytesToStringRequest): Promise<import("../cosmos/auth/v1beta1/query").AddressBytesToStringResponse>;
                        addressStringToBytes(request: import("../cosmos/auth/v1beta1/query").AddressStringToBytesRequest): Promise<import("../cosmos/auth/v1beta1/query").AddressStringToBytesResponse>;
                        accountInfo(request: import("../cosmos/auth/v1beta1/query").QueryAccountInfoRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountInfoResponse>;
                    };
                };
                authz: {
                    v1beta1: {
                        grants(request: import("../cosmos/authz/v1beta1/query").QueryGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGrantsResponse>;
                        granterGrants(request: import("../cosmos/authz/v1beta1/query").QueryGranterGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGranterGrantsResponse>;
                        granteeGrants(request: import("../cosmos/authz/v1beta1/query").QueryGranteeGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGranteeGrantsResponse>;
                    };
                };
                bank: {
                    v1beta1: {
                        balance(request: import("../cosmos/bank/v1beta1/query").QueryBalanceRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryBalanceResponse>;
                        allBalances(request: import("../cosmos/bank/v1beta1/query").QueryAllBalancesRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryAllBalancesResponse>;
                        spendableBalances(request: import("../cosmos/bank/v1beta1/query").QuerySpendableBalancesRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySpendableBalancesResponse>;
                        spendableBalanceByDenom(request: import("../cosmos/bank/v1beta1/query").QuerySpendableBalanceByDenomRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySpendableBalanceByDenomResponse>;
                        totalSupply(request?: import("../cosmos/bank/v1beta1/query").QueryTotalSupplyRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryTotalSupplyResponse>;
                        supplyOf(request: import("../cosmos/bank/v1beta1/query").QuerySupplyOfRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySupplyOfResponse>;
                        params(request?: import("../cosmos/bank/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryParamsResponse>;
                        denomMetadata(request: import("../cosmos/bank/v1beta1/query").QueryDenomMetadataRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomMetadataResponse>;
                        denomsMetadata(request?: import("../cosmos/bank/v1beta1/query").QueryDenomsMetadataRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomsMetadataResponse>;
                        denomOwners(request: import("../cosmos/bank/v1beta1/query").QueryDenomOwnersRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomOwnersResponse>;
                        sendEnabled(request: import("../cosmos/bank/v1beta1/query").QuerySendEnabledRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySendEnabledResponse>;
                    };
                };
                base: {
                    node: {
                        v1beta1: {
                            config(request?: import("../cosmos/base/node/v1beta1/query").ConfigRequest): Promise<import("../cosmos/base/node/v1beta1/query").ConfigResponse>;
                        };
                    };
                };
                consensus: {
                    v1: {
                        params(request?: import("../cosmos/consensus/v1/query").QueryParamsRequest): Promise<import("../cosmos/consensus/v1/query").QueryParamsResponse>;
                    };
                };
                distribution: {
                    v1beta1: {
                        params(request?: import("../cosmos/distribution/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryParamsResponse>;
                        validatorDistributionInfo(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorDistributionInfoRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorDistributionInfoResponse>;
                        validatorOutstandingRewards(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsResponse>;
                        validatorCommission(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorCommissionRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorCommissionResponse>;
                        validatorSlashes(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorSlashesRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorSlashesResponse>;
                        delegationRewards(request: import("../cosmos/distribution/v1beta1/query").QueryDelegationRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegationRewardsResponse>;
                        delegationTotalRewards(request: import("../cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsResponse>;
                        delegatorValidators(request: import("../cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorWithdrawAddress(request: import("../cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressResponse>;
                        communityPool(request?: import("../cosmos/distribution/v1beta1/query").QueryCommunityPoolRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryCommunityPoolResponse>;
                    };
                };
                gov: {
                    v1beta1: {
                        proposal(request: import("../cosmos/gov/v1beta1/query").QueryProposalRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryProposalResponse>;
                        proposals(request: import("../cosmos/gov/v1beta1/query").QueryProposalsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryProposalsResponse>;
                        vote(request: import("../cosmos/gov/v1beta1/query").QueryVoteRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryVoteResponse>;
                        votes(request: import("../cosmos/gov/v1beta1/query").QueryVotesRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryVotesResponse>;
                        params(request: import("../cosmos/gov/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryParamsResponse>;
                        deposit(request: import("../cosmos/gov/v1beta1/query").QueryDepositRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryDepositResponse>;
                        deposits(request: import("../cosmos/gov/v1beta1/query").QueryDepositsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryDepositsResponse>;
                        tallyResult(request: import("../cosmos/gov/v1beta1/query").QueryTallyResultRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryTallyResultResponse>;
                    };
                };
                orm: {
                    query: {
                        v1alpha1: {
                            get(request: import("../cosmos/orm/query/v1alpha1/query").GetRequest): Promise<import("../cosmos/orm/query/v1alpha1/query").GetResponse>;
                            list(request: import("../cosmos/orm/query/v1alpha1/query").ListRequest): Promise<import("../cosmos/orm/query/v1alpha1/query").ListResponse>;
                        };
                    };
                };
                staking: {
                    v1beta1: {
                        validators(request: import("../cosmos/staking/v1beta1/query").QueryValidatorsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorsResponse>;
                        validator(request: import("../cosmos/staking/v1beta1/query").QueryValidatorRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorResponse>;
                        validatorDelegations(request: import("../cosmos/staking/v1beta1/query").QueryValidatorDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorDelegationsResponse>;
                        validatorUnbondingDelegations(request: import("../cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsResponse>;
                        delegation(request: import("../cosmos/staking/v1beta1/query").QueryDelegationRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegationResponse>;
                        unbondingDelegation(request: import("../cosmos/staking/v1beta1/query").QueryUnbondingDelegationRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryUnbondingDelegationResponse>;
                        delegatorDelegations(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorDelegationsResponse>;
                        delegatorUnbondingDelegations(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsResponse>;
                        redelegations(request: import("../cosmos/staking/v1beta1/query").QueryRedelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryRedelegationsResponse>;
                        delegatorValidators(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorValidator(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorResponse>;
                        historicalInfo(request: import("../cosmos/staking/v1beta1/query").QueryHistoricalInfoRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryHistoricalInfoResponse>;
                        pool(request?: import("../cosmos/staking/v1beta1/query").QueryPoolRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryPoolResponse>;
                        params(request?: import("../cosmos/staking/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryParamsResponse>;
                    };
                };
                tx: {
                    v1beta1: {
                        simulate(request: import("../cosmos/tx/v1beta1/service").SimulateRequest): Promise<import("../cosmos/tx/v1beta1/service").SimulateResponse>;
                        getTx(request: import("../cosmos/tx/v1beta1/service").GetTxRequest): Promise<import("../cosmos/tx/v1beta1/service").GetTxResponse>;
                        broadcastTx(request: import("../cosmos/tx/v1beta1/service").BroadcastTxRequest): Promise<import("../cosmos/tx/v1beta1/service").BroadcastTxResponse>;
                        getTxsEvent(request: import("../cosmos/tx/v1beta1/service").GetTxsEventRequest): Promise<import("../cosmos/tx/v1beta1/service").GetTxsEventResponse>;
                        getBlockWithTxs(request: import("../cosmos/tx/v1beta1/service").GetBlockWithTxsRequest): Promise<import("../cosmos/tx/v1beta1/service").GetBlockWithTxsResponse>;
                        txDecode(request: import("../cosmos/tx/v1beta1/service").TxDecodeRequest): Promise<import("../cosmos/tx/v1beta1/service").TxDecodeResponse>;
                        txEncode(request: import("../cosmos/tx/v1beta1/service").TxEncodeRequest): Promise<import("../cosmos/tx/v1beta1/service").TxEncodeResponse>;
                        txEncodeAmino(request: import("../cosmos/tx/v1beta1/service").TxEncodeAminoRequest): Promise<import("../cosmos/tx/v1beta1/service").TxEncodeAminoResponse>;
                        txDecodeAmino(request: import("../cosmos/tx/v1beta1/service").TxDecodeAminoRequest): Promise<import("../cosmos/tx/v1beta1/service").TxDecodeAminoResponse>;
                    };
                };
                upgrade: {
                    v1beta1: {
                        currentPlan(request?: import("../cosmos/upgrade/v1beta1/query").QueryCurrentPlanRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryCurrentPlanResponse>;
                        appliedPlan(request: import("../cosmos/upgrade/v1beta1/query").QueryAppliedPlanRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryAppliedPlanResponse>;
                        upgradedConsensusState(request: import("../cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateResponse>;
                        moduleVersions(request: import("../cosmos/upgrade/v1beta1/query").QueryModuleVersionsRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryModuleVersionsResponse>;
                        authority(request?: import("../cosmos/upgrade/v1beta1/query").QueryAuthorityRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryAuthorityResponse>;
                    };
                };
            };
            cosmwasm: {
                wasm: {
                    v1: {
                        contractInfo(request: _122.QueryContractInfoRequest): Promise<_122.QueryContractInfoResponse>;
                        contractHistory(request: _122.QueryContractHistoryRequest): Promise<_122.QueryContractHistoryResponse>;
                        contractsByCode(request: _122.QueryContractsByCodeRequest): Promise<_122.QueryContractsByCodeResponse>;
                        allContractState(request: _122.QueryAllContractStateRequest): Promise<_122.QueryAllContractStateResponse>;
                        rawContractState(request: _122.QueryRawContractStateRequest): Promise<_122.QueryRawContractStateResponse>;
                        smartContractState(request: _122.QuerySmartContractStateRequest): Promise<_122.QuerySmartContractStateResponse>;
                        code(request: _122.QueryCodeRequest): Promise<_122.QueryCodeResponse>;
                        codes(request?: _122.QueryCodesRequest): Promise<_122.QueryCodesResponse>;
                        pinnedCodes(request?: _122.QueryPinnedCodesRequest): Promise<_122.QueryPinnedCodesResponse>;
                        params(request?: _122.QueryParamsRequest): Promise<_122.QueryParamsResponse>;
                        contractsByCreator(request: _122.QueryContractsByCreatorRequest): Promise<_122.QueryContractsByCreatorResponse>;
                        buildAddress(request: _122.QueryBuildAddressRequest): Promise<_122.QueryBuildAddressResponse>;
                    };
                };
            };
        }>;
        createLCDClient: ({ restEndpoint }: {
            restEndpoint: string;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: import("../cosmos/auth/v1beta1/query.lcd").LCDQueryClient;
                };
                authz: {
                    v1beta1: import("../cosmos/authz/v1beta1/query.lcd").LCDQueryClient;
                };
                bank: {
                    v1beta1: import("../cosmos/bank/v1beta1/query.lcd").LCDQueryClient;
                };
                base: {
                    node: {
                        v1beta1: import("../cosmos/base/node/v1beta1/query.lcd").LCDQueryClient;
                    };
                };
                consensus: {
                    v1: import("../cosmos/consensus/v1/query.lcd").LCDQueryClient;
                };
                distribution: {
                    v1beta1: import("../cosmos/distribution/v1beta1/query.lcd").LCDQueryClient;
                };
                gov: {
                    v1beta1: import("../cosmos/gov/v1beta1/query.lcd").LCDQueryClient;
                };
                staking: {
                    v1beta1: import("../cosmos/staking/v1beta1/query.lcd").LCDQueryClient;
                };
                tx: {
                    v1beta1: import("../cosmos/tx/v1beta1/service.lcd").LCDQueryClient;
                };
                upgrade: {
                    v1beta1: import("../cosmos/upgrade/v1beta1/query.lcd").LCDQueryClient;
                };
            };
            cosmwasm: {
                wasm: {
                    v1: _327.LCDQueryClient;
                };
            };
        }>;
    };
}
