import { BinaryReader, BinaryWriter } from "../../../binary";
/** MsgAddAuthenticatorRequest defines the Msg/AddAuthenticator request type. */
export interface MsgAddAuthenticator {
    sender: string;
    type: string;
    data: Uint8Array;
}
export interface MsgAddAuthenticatorProtoMsg {
    typeUrl: "/osmosis.smartaccount.v1beta1.MsgAddAuthenticator";
    value: Uint8Array;
}
/** MsgAddAuthenticatorRequest defines the Msg/AddAuthenticator request type. */
export interface MsgAddAuthenticatorAmino {
    sender?: string;
    type?: string;
    data?: string;
}
export interface MsgAddAuthenticatorAminoMsg {
    type: "osmosis/smartaccount/add-authenticator";
    value: MsgAddAuthenticatorAmino;
}
/** MsgAddAuthenticatorRequest defines the Msg/AddAuthenticator request type. */
export interface MsgAddAuthenticatorSDKType {
    sender: string;
    type: string;
    data: Uint8Array;
}
/** MsgAddAuthenticatorResponse defines the Msg/AddAuthenticator response type. */
export interface MsgAddAuthenticatorResponse {
    /** MsgAddAuthenticatorResponse defines the Msg/AddAuthenticator response type. */
    success: boolean;
}
export interface MsgAddAuthenticatorResponseProtoMsg {
    typeUrl: "/osmosis.smartaccount.v1beta1.MsgAddAuthenticatorResponse";
    value: Uint8Array;
}
/** MsgAddAuthenticatorResponse defines the Msg/AddAuthenticator response type. */
export interface MsgAddAuthenticatorResponseAmino {
    /** MsgAddAuthenticatorResponse defines the Msg/AddAuthenticator response type. */
    success?: boolean;
}
export interface MsgAddAuthenticatorResponseAminoMsg {
    type: "osmosis/smartaccount/add-authenticator-response";
    value: MsgAddAuthenticatorResponseAmino;
}
/** MsgAddAuthenticatorResponse defines the Msg/AddAuthenticator response type. */
export interface MsgAddAuthenticatorResponseSDKType {
    success: boolean;
}
/**
 * MsgRemoveAuthenticatorRequest defines the Msg/RemoveAuthenticator request
 * type.
 */
export interface MsgRemoveAuthenticator {
    sender: string;
    id: bigint;
}
export interface MsgRemoveAuthenticatorProtoMsg {
    typeUrl: "/osmosis.smartaccount.v1beta1.MsgRemoveAuthenticator";
    value: Uint8Array;
}
/**
 * MsgRemoveAuthenticatorRequest defines the Msg/RemoveAuthenticator request
 * type.
 */
export interface MsgRemoveAuthenticatorAmino {
    sender?: string;
    id?: string;
}
export interface MsgRemoveAuthenticatorAminoMsg {
    type: "osmosis/smartaccount/remove-authenticator";
    value: MsgRemoveAuthenticatorAmino;
}
/**
 * MsgRemoveAuthenticatorRequest defines the Msg/RemoveAuthenticator request
 * type.
 */
export interface MsgRemoveAuthenticatorSDKType {
    sender: string;
    id: bigint;
}
/**
 * MsgRemoveAuthenticatorResponse defines the Msg/RemoveAuthenticator response
 * type.
 */
export interface MsgRemoveAuthenticatorResponse {
    /**
     * MsgRemoveAuthenticatorResponse defines the Msg/RemoveAuthenticator response
     * type.
     */
    success: boolean;
}
export interface MsgRemoveAuthenticatorResponseProtoMsg {
    typeUrl: "/osmosis.smartaccount.v1beta1.MsgRemoveAuthenticatorResponse";
    value: Uint8Array;
}
/**
 * MsgRemoveAuthenticatorResponse defines the Msg/RemoveAuthenticator response
 * type.
 */
export interface MsgRemoveAuthenticatorResponseAmino {
    /**
     * MsgRemoveAuthenticatorResponse defines the Msg/RemoveAuthenticator response
     * type.
     */
    success?: boolean;
}
export interface MsgRemoveAuthenticatorResponseAminoMsg {
    type: "osmosis/smartaccount/remove-authenticator-response";
    value: MsgRemoveAuthenticatorResponseAmino;
}
/**
 * MsgRemoveAuthenticatorResponse defines the Msg/RemoveAuthenticator response
 * type.
 */
export interface MsgRemoveAuthenticatorResponseSDKType {
    success: boolean;
}
export interface MsgSetActiveState {
    sender: string;
    active: boolean;
}
export interface MsgSetActiveStateProtoMsg {
    typeUrl: "/osmosis.smartaccount.v1beta1.MsgSetActiveState";
    value: Uint8Array;
}
export interface MsgSetActiveStateAmino {
    sender?: string;
    active?: boolean;
}
export interface MsgSetActiveStateAminoMsg {
    type: "osmosis/smartaccount/set-active-state";
    value: MsgSetActiveStateAmino;
}
export interface MsgSetActiveStateSDKType {
    sender: string;
    active: boolean;
}
export interface MsgSetActiveStateResponse {
}
export interface MsgSetActiveStateResponseProtoMsg {
    typeUrl: "/osmosis.smartaccount.v1beta1.MsgSetActiveStateResponse";
    value: Uint8Array;
}
export interface MsgSetActiveStateResponseAmino {
}
export interface MsgSetActiveStateResponseAminoMsg {
    type: "osmosis/smartaccount/set-active-state-response";
    value: MsgSetActiveStateResponseAmino;
}
export interface MsgSetActiveStateResponseSDKType {
}
/**
 * TxExtension allows for additional authenticator-specific data in
 * transactions.
 */
export interface TxExtension {
    /**
     * selected_authenticators holds the authenticator_id for the chosen
     * authenticator per message.
     */
    selectedAuthenticators: bigint[];
}
export interface TxExtensionProtoMsg {
    typeUrl: "/osmosis.smartaccount.v1beta1.TxExtension";
    value: Uint8Array;
}
/**
 * TxExtension allows for additional authenticator-specific data in
 * transactions.
 */
export interface TxExtensionAmino {
    /**
     * selected_authenticators holds the authenticator_id for the chosen
     * authenticator per message.
     */
    selected_authenticators?: string[];
}
export interface TxExtensionAminoMsg {
    type: "osmosis/smartaccount/tx-extension";
    value: TxExtensionAmino;
}
/**
 * TxExtension allows for additional authenticator-specific data in
 * transactions.
 */
export interface TxExtensionSDKType {
    selected_authenticators: bigint[];
}
export declare const MsgAddAuthenticator: {
    typeUrl: string;
    aminoType: string;
    is(o: any): o is MsgAddAuthenticator;
    isSDK(o: any): o is MsgAddAuthenticatorSDKType;
    isAmino(o: any): o is MsgAddAuthenticatorAmino;
    encode(message: MsgAddAuthenticator, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): MsgAddAuthenticator;
    fromPartial(object: Partial<MsgAddAuthenticator>): MsgAddAuthenticator;
    fromAmino(object: MsgAddAuthenticatorAmino): MsgAddAuthenticator;
    toAmino(message: MsgAddAuthenticator): MsgAddAuthenticatorAmino;
    fromAminoMsg(object: MsgAddAuthenticatorAminoMsg): MsgAddAuthenticator;
    toAminoMsg(message: MsgAddAuthenticator): MsgAddAuthenticatorAminoMsg;
    fromProtoMsg(message: MsgAddAuthenticatorProtoMsg): MsgAddAuthenticator;
    toProto(message: MsgAddAuthenticator): Uint8Array;
    toProtoMsg(message: MsgAddAuthenticator): MsgAddAuthenticatorProtoMsg;
};
export declare const MsgAddAuthenticatorResponse: {
    typeUrl: string;
    aminoType: string;
    is(o: any): o is MsgAddAuthenticatorResponse;
    isSDK(o: any): o is MsgAddAuthenticatorResponseSDKType;
    isAmino(o: any): o is MsgAddAuthenticatorResponseAmino;
    encode(message: MsgAddAuthenticatorResponse, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): MsgAddAuthenticatorResponse;
    fromPartial(object: Partial<MsgAddAuthenticatorResponse>): MsgAddAuthenticatorResponse;
    fromAmino(object: MsgAddAuthenticatorResponseAmino): MsgAddAuthenticatorResponse;
    toAmino(message: MsgAddAuthenticatorResponse): MsgAddAuthenticatorResponseAmino;
    fromAminoMsg(object: MsgAddAuthenticatorResponseAminoMsg): MsgAddAuthenticatorResponse;
    toAminoMsg(message: MsgAddAuthenticatorResponse): MsgAddAuthenticatorResponseAminoMsg;
    fromProtoMsg(message: MsgAddAuthenticatorResponseProtoMsg): MsgAddAuthenticatorResponse;
    toProto(message: MsgAddAuthenticatorResponse): Uint8Array;
    toProtoMsg(message: MsgAddAuthenticatorResponse): MsgAddAuthenticatorResponseProtoMsg;
};
export declare const MsgRemoveAuthenticator: {
    typeUrl: string;
    aminoType: string;
    is(o: any): o is MsgRemoveAuthenticator;
    isSDK(o: any): o is MsgRemoveAuthenticatorSDKType;
    isAmino(o: any): o is MsgRemoveAuthenticatorAmino;
    encode(message: MsgRemoveAuthenticator, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): MsgRemoveAuthenticator;
    fromPartial(object: Partial<MsgRemoveAuthenticator>): MsgRemoveAuthenticator;
    fromAmino(object: MsgRemoveAuthenticatorAmino): MsgRemoveAuthenticator;
    toAmino(message: MsgRemoveAuthenticator): MsgRemoveAuthenticatorAmino;
    fromAminoMsg(object: MsgRemoveAuthenticatorAminoMsg): MsgRemoveAuthenticator;
    toAminoMsg(message: MsgRemoveAuthenticator): MsgRemoveAuthenticatorAminoMsg;
    fromProtoMsg(message: MsgRemoveAuthenticatorProtoMsg): MsgRemoveAuthenticator;
    toProto(message: MsgRemoveAuthenticator): Uint8Array;
    toProtoMsg(message: MsgRemoveAuthenticator): MsgRemoveAuthenticatorProtoMsg;
};
export declare const MsgRemoveAuthenticatorResponse: {
    typeUrl: string;
    aminoType: string;
    is(o: any): o is MsgRemoveAuthenticatorResponse;
    isSDK(o: any): o is MsgRemoveAuthenticatorResponseSDKType;
    isAmino(o: any): o is MsgRemoveAuthenticatorResponseAmino;
    encode(message: MsgRemoveAuthenticatorResponse, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): MsgRemoveAuthenticatorResponse;
    fromPartial(object: Partial<MsgRemoveAuthenticatorResponse>): MsgRemoveAuthenticatorResponse;
    fromAmino(object: MsgRemoveAuthenticatorResponseAmino): MsgRemoveAuthenticatorResponse;
    toAmino(message: MsgRemoveAuthenticatorResponse): MsgRemoveAuthenticatorResponseAmino;
    fromAminoMsg(object: MsgRemoveAuthenticatorResponseAminoMsg): MsgRemoveAuthenticatorResponse;
    toAminoMsg(message: MsgRemoveAuthenticatorResponse): MsgRemoveAuthenticatorResponseAminoMsg;
    fromProtoMsg(message: MsgRemoveAuthenticatorResponseProtoMsg): MsgRemoveAuthenticatorResponse;
    toProto(message: MsgRemoveAuthenticatorResponse): Uint8Array;
    toProtoMsg(message: MsgRemoveAuthenticatorResponse): MsgRemoveAuthenticatorResponseProtoMsg;
};
export declare const MsgSetActiveState: {
    typeUrl: string;
    aminoType: string;
    is(o: any): o is MsgSetActiveState;
    isSDK(o: any): o is MsgSetActiveStateSDKType;
    isAmino(o: any): o is MsgSetActiveStateAmino;
    encode(message: MsgSetActiveState, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): MsgSetActiveState;
    fromPartial(object: Partial<MsgSetActiveState>): MsgSetActiveState;
    fromAmino(object: MsgSetActiveStateAmino): MsgSetActiveState;
    toAmino(message: MsgSetActiveState): MsgSetActiveStateAmino;
    fromAminoMsg(object: MsgSetActiveStateAminoMsg): MsgSetActiveState;
    toAminoMsg(message: MsgSetActiveState): MsgSetActiveStateAminoMsg;
    fromProtoMsg(message: MsgSetActiveStateProtoMsg): MsgSetActiveState;
    toProto(message: MsgSetActiveState): Uint8Array;
    toProtoMsg(message: MsgSetActiveState): MsgSetActiveStateProtoMsg;
};
export declare const MsgSetActiveStateResponse: {
    typeUrl: string;
    aminoType: string;
    is(o: any): o is MsgSetActiveStateResponse;
    isSDK(o: any): o is MsgSetActiveStateResponseSDKType;
    isAmino(o: any): o is MsgSetActiveStateResponseAmino;
    encode(_: MsgSetActiveStateResponse, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): MsgSetActiveStateResponse;
    fromPartial(_: Partial<MsgSetActiveStateResponse>): MsgSetActiveStateResponse;
    fromAmino(_: MsgSetActiveStateResponseAmino): MsgSetActiveStateResponse;
    toAmino(_: MsgSetActiveStateResponse): MsgSetActiveStateResponseAmino;
    fromAminoMsg(object: MsgSetActiveStateResponseAminoMsg): MsgSetActiveStateResponse;
    toAminoMsg(message: MsgSetActiveStateResponse): MsgSetActiveStateResponseAminoMsg;
    fromProtoMsg(message: MsgSetActiveStateResponseProtoMsg): MsgSetActiveStateResponse;
    toProto(message: MsgSetActiveStateResponse): Uint8Array;
    toProtoMsg(message: MsgSetActiveStateResponse): MsgSetActiveStateResponseProtoMsg;
};
export declare const TxExtension: {
    typeUrl: string;
    aminoType: string;
    is(o: any): o is TxExtension;
    isSDK(o: any): o is TxExtensionSDKType;
    isAmino(o: any): o is TxExtensionAmino;
    encode(message: TxExtension, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): TxExtension;
    fromPartial(object: Partial<TxExtension>): TxExtension;
    fromAmino(object: TxExtensionAmino): TxExtension;
    toAmino(message: TxExtension): TxExtensionAmino;
    fromAminoMsg(object: TxExtensionAminoMsg): TxExtension;
    toAminoMsg(message: TxExtension): TxExtensionAminoMsg;
    fromProtoMsg(message: TxExtensionProtoMsg): TxExtension;
    toProto(message: TxExtension): Uint8Array;
    toProtoMsg(message: TxExtension): TxExtensionProtoMsg;
};
