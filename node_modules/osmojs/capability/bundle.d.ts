import * as _72 from "./v1/capability";
import * as _73 from "./v1/genesis";
export declare namespace capability {
    const v1: {
        GenesisOwners: {
            typeUrl: string;
            is(o: any): o is _73.GenesisOwners;
            isSDK(o: any): o is _73.GenesisOwnersSDKType;
            isAmino(o: any): o is _73.GenesisOwnersAmino;
            encode(message: _73.GenesisOwners, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.GenesisOwners;
            fromPartial(object: Partial<_73.GenesisOwners>): _73.GenesisOwners;
            fromAmino(object: _73.GenesisOwnersAmino): _73.GenesisOwners;
            toAmino(message: _73.GenesisOwners): _73.GenesisOwnersAmino;
            fromAminoMsg(object: _73.GenesisOwnersAminoMsg): _73.GenesisOwners;
            fromProtoMsg(message: _73.GenesisOwnersProtoMsg): _73.GenesisOwners;
            toProto(message: _73.GenesisOwners): Uint8Array;
            toProtoMsg(message: _73.GenesisOwners): _73.GenesisOwnersProtoMsg;
        };
        GenesisState: {
            typeUrl: string;
            is(o: any): o is _73.GenesisState;
            isSDK(o: any): o is _73.GenesisStateSDKType;
            isAmino(o: any): o is _73.GenesisStateAmino;
            encode(message: _73.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _73.GenesisState;
            fromPartial(object: Partial<_73.GenesisState>): _73.GenesisState;
            fromAmino(object: _73.GenesisStateAmino): _73.GenesisState;
            toAmino(message: _73.GenesisState): _73.GenesisStateAmino;
            fromAminoMsg(object: _73.GenesisStateAminoMsg): _73.GenesisState;
            fromProtoMsg(message: _73.GenesisStateProtoMsg): _73.GenesisState;
            toProto(message: _73.GenesisState): Uint8Array;
            toProtoMsg(message: _73.GenesisState): _73.GenesisStateProtoMsg;
        };
        Capability: {
            typeUrl: string;
            is(o: any): o is _72.Capability;
            isSDK(o: any): o is _72.CapabilitySDKType;
            isAmino(o: any): o is _72.CapabilityAmino;
            encode(message: _72.Capability, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.Capability;
            fromPartial(object: Partial<_72.Capability>): _72.Capability;
            fromAmino(object: _72.CapabilityAmino): _72.Capability;
            toAmino(message: _72.Capability): _72.CapabilityAmino;
            fromAminoMsg(object: _72.CapabilityAminoMsg): _72.Capability;
            fromProtoMsg(message: _72.CapabilityProtoMsg): _72.Capability;
            toProto(message: _72.Capability): Uint8Array;
            toProtoMsg(message: _72.Capability): _72.CapabilityProtoMsg;
        };
        Owner: {
            typeUrl: string;
            is(o: any): o is _72.Owner;
            isSDK(o: any): o is _72.OwnerSDKType;
            isAmino(o: any): o is _72.OwnerAmino;
            encode(message: _72.Owner, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.Owner;
            fromPartial(object: Partial<_72.Owner>): _72.Owner;
            fromAmino(object: _72.OwnerAmino): _72.Owner;
            toAmino(message: _72.Owner): _72.OwnerAmino;
            fromAminoMsg(object: _72.OwnerAminoMsg): _72.Owner;
            fromProtoMsg(message: _72.OwnerProtoMsg): _72.Owner;
            toProto(message: _72.Owner): Uint8Array;
            toProtoMsg(message: _72.Owner): _72.OwnerProtoMsg;
        };
        CapabilityOwners: {
            typeUrl: string;
            is(o: any): o is _72.CapabilityOwners;
            isSDK(o: any): o is _72.CapabilityOwnersSDKType;
            isAmino(o: any): o is _72.CapabilityOwnersAmino;
            encode(message: _72.CapabilityOwners, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.CapabilityOwners;
            fromPartial(object: Partial<_72.CapabilityOwners>): _72.CapabilityOwners;
            fromAmino(object: _72.CapabilityOwnersAmino): _72.CapabilityOwners;
            toAmino(message: _72.CapabilityOwners): _72.CapabilityOwnersAmino;
            fromAminoMsg(object: _72.CapabilityOwnersAminoMsg): _72.CapabilityOwners;
            fromProtoMsg(message: _72.CapabilityOwnersProtoMsg): _72.CapabilityOwners;
            toProto(message: _72.CapabilityOwners): Uint8Array;
            toProtoMsg(message: _72.CapabilityOwners): _72.CapabilityOwnersProtoMsg;
        };
    };
}
