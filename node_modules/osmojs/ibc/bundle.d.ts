import * as _74 from "./applications/fee/v1/ack";
import * as _75 from "./applications/fee/v1/fee";
import * as _76 from "./applications/fee/v1/genesis";
import * as _77 from "./applications/fee/v1/metadata";
import * as _78 from "./applications/fee/v1/query";
import * as _79 from "./applications/fee/v1/tx";
import * as _80 from "./applications/interchain_accounts/controller/v1/controller";
import * as _81 from "./applications/interchain_accounts/controller/v1/query";
import * as _82 from "./applications/interchain_accounts/controller/v1/tx";
import * as _83 from "./applications/interchain_accounts/genesis/v1/genesis";
import * as _84 from "./applications/interchain_accounts/host/v1/host";
import * as _85 from "./applications/interchain_accounts/host/v1/query";
import * as _86 from "./applications/interchain_accounts/host/v1/tx";
import * as _87 from "./applications/interchain_accounts/v1/account";
import * as _88 from "./applications/interchain_accounts/v1/metadata";
import * as _89 from "./applications/interchain_accounts/v1/packet";
import * as _90 from "./applications/transfer/v1/authz";
import * as _91 from "./applications/transfer/v1/genesis";
import * as _92 from "./applications/transfer/v1/query";
import * as _93 from "./applications/transfer/v1/transfer";
import * as _94 from "./applications/transfer/v1/tx";
import * as _95 from "./applications/transfer/v2/packet";
import * as _96 from "./core/channel/v1/channel";
import * as _97 from "./core/channel/v1/genesis";
import * as _98 from "./core/channel/v1/query";
import * as _99 from "./core/channel/v1/tx";
import * as _100 from "./core/channel/v1/upgrade";
import * as _101 from "./core/client/v1/client";
import * as _102 from "./core/client/v1/genesis";
import * as _103 from "./core/client/v1/query";
import * as _104 from "./core/client/v1/tx";
import * as _105 from "./core/commitment/v1/commitment";
import * as _106 from "./core/connection/v1/connection";
import * as _107 from "./core/connection/v1/genesis";
import * as _108 from "./core/connection/v1/query";
import * as _109 from "./core/connection/v1/tx";
import * as _110 from "./lightclients/localhost/v2/localhost";
import * as _111 from "./lightclients/solomachine/v2/solomachine";
import * as _112 from "./lightclients/solomachine/v3/solomachine";
import * as _113 from "./lightclients/tendermint/v1/tendermint";
import * as _114 from "./lightclients/wasm/v1/genesis";
import * as _115 from "./lightclients/wasm/v1/query";
import * as _116 from "./lightclients/wasm/v1/tx";
import * as _117 from "./lightclients/wasm/v1/wasm";
import * as _301 from "./applications/fee/v1/query.lcd";
import * as _302 from "./applications/interchain_accounts/controller/v1/query.lcd";
import * as _303 from "./applications/interchain_accounts/host/v1/query.lcd";
import * as _304 from "./applications/transfer/v1/query.lcd";
import * as _305 from "./core/channel/v1/query.lcd";
import * as _306 from "./core/client/v1/query.lcd";
import * as _307 from "./core/connection/v1/query.lcd";
import * as _308 from "./lightclients/wasm/v1/query.lcd";
import * as _309 from "./applications/fee/v1/query.rpc.Query";
import * as _310 from "./applications/interchain_accounts/controller/v1/query.rpc.Query";
import * as _311 from "./applications/interchain_accounts/host/v1/query.rpc.Query";
import * as _312 from "./applications/transfer/v1/query.rpc.Query";
import * as _313 from "./core/channel/v1/query.rpc.Query";
import * as _314 from "./core/client/v1/query.rpc.Query";
import * as _315 from "./core/connection/v1/query.rpc.Query";
import * as _316 from "./lightclients/wasm/v1/query.rpc.Query";
import * as _317 from "./applications/fee/v1/tx.rpc.msg";
import * as _318 from "./applications/interchain_accounts/controller/v1/tx.rpc.msg";
import * as _319 from "./applications/interchain_accounts/host/v1/tx.rpc.msg";
import * as _320 from "./applications/transfer/v1/tx.rpc.msg";
import * as _321 from "./core/channel/v1/tx.rpc.msg";
import * as _322 from "./core/client/v1/tx.rpc.msg";
import * as _323 from "./core/connection/v1/tx.rpc.msg";
import * as _324 from "./lightclients/wasm/v1/tx.rpc.msg";
export declare namespace ibc {
    namespace applications {
        namespace fee {
            const v1: {
                MsgClientImpl: typeof _317.MsgClientImpl;
                createClientImpl: (rpc: import("../helpers").Rpc) => _317.MsgClientImpl;
                QueryClientImpl: typeof _309.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    incentivizedPackets(request: _78.QueryIncentivizedPacketsRequest): Promise<_78.QueryIncentivizedPacketsResponse>;
                    incentivizedPacket(request: _78.QueryIncentivizedPacketRequest): Promise<_78.QueryIncentivizedPacketResponse>;
                    incentivizedPacketsForChannel(request: _78.QueryIncentivizedPacketsForChannelRequest): Promise<_78.QueryIncentivizedPacketsForChannelResponse>;
                    totalRecvFees(request: _78.QueryTotalRecvFeesRequest): Promise<_78.QueryTotalRecvFeesResponse>;
                    totalAckFees(request: _78.QueryTotalAckFeesRequest): Promise<_78.QueryTotalAckFeesResponse>;
                    totalTimeoutFees(request: _78.QueryTotalTimeoutFeesRequest): Promise<_78.QueryTotalTimeoutFeesResponse>;
                    payee(request: _78.QueryPayeeRequest): Promise<_78.QueryPayeeResponse>;
                    counterpartyPayee(request: _78.QueryCounterpartyPayeeRequest): Promise<_78.QueryCounterpartyPayeeResponse>;
                    feeEnabledChannels(request: _78.QueryFeeEnabledChannelsRequest): Promise<_78.QueryFeeEnabledChannelsResponse>;
                    feeEnabledChannel(request: _78.QueryFeeEnabledChannelRequest): Promise<_78.QueryFeeEnabledChannelResponse>;
                };
                LCDQueryClient: typeof _301.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        registerPayee(value: _79.MsgRegisterPayee): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        registerCounterpartyPayee(value: _79.MsgRegisterCounterpartyPayee): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        payPacketFee(value: _79.MsgPayPacketFee): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        payPacketFeeAsync(value: _79.MsgPayPacketFeeAsync): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        registerPayee(value: _79.MsgRegisterPayee): {
                            typeUrl: string;
                            value: _79.MsgRegisterPayee;
                        };
                        registerCounterpartyPayee(value: _79.MsgRegisterCounterpartyPayee): {
                            typeUrl: string;
                            value: _79.MsgRegisterCounterpartyPayee;
                        };
                        payPacketFee(value: _79.MsgPayPacketFee): {
                            typeUrl: string;
                            value: _79.MsgPayPacketFee;
                        };
                        payPacketFeeAsync(value: _79.MsgPayPacketFeeAsync): {
                            typeUrl: string;
                            value: _79.MsgPayPacketFeeAsync;
                        };
                    };
                    fromPartial: {
                        registerPayee(value: _79.MsgRegisterPayee): {
                            typeUrl: string;
                            value: _79.MsgRegisterPayee;
                        };
                        registerCounterpartyPayee(value: _79.MsgRegisterCounterpartyPayee): {
                            typeUrl: string;
                            value: _79.MsgRegisterCounterpartyPayee;
                        };
                        payPacketFee(value: _79.MsgPayPacketFee): {
                            typeUrl: string;
                            value: _79.MsgPayPacketFee;
                        };
                        payPacketFeeAsync(value: _79.MsgPayPacketFeeAsync): {
                            typeUrl: string;
                            value: _79.MsgPayPacketFeeAsync;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.applications.fee.v1.MsgRegisterPayee": {
                        aminoType: string;
                        toAmino: (message: _79.MsgRegisterPayee) => _79.MsgRegisterPayeeAmino;
                        fromAmino: (object: _79.MsgRegisterPayeeAmino) => _79.MsgRegisterPayee;
                    };
                    "/ibc.applications.fee.v1.MsgRegisterCounterpartyPayee": {
                        aminoType: string;
                        toAmino: (message: _79.MsgRegisterCounterpartyPayee) => _79.MsgRegisterCounterpartyPayeeAmino;
                        fromAmino: (object: _79.MsgRegisterCounterpartyPayeeAmino) => _79.MsgRegisterCounterpartyPayee;
                    };
                    "/ibc.applications.fee.v1.MsgPayPacketFee": {
                        aminoType: string;
                        toAmino: (message: _79.MsgPayPacketFee) => _79.MsgPayPacketFeeAmino;
                        fromAmino: (object: _79.MsgPayPacketFeeAmino) => _79.MsgPayPacketFee;
                    };
                    "/ibc.applications.fee.v1.MsgPayPacketFeeAsync": {
                        aminoType: string;
                        toAmino: (message: _79.MsgPayPacketFeeAsync) => _79.MsgPayPacketFeeAsyncAmino;
                        fromAmino: (object: _79.MsgPayPacketFeeAsyncAmino) => _79.MsgPayPacketFeeAsync;
                    };
                };
                MsgRegisterPayee: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.MsgRegisterPayee;
                    isSDK(o: any): o is _79.MsgRegisterPayeeSDKType;
                    isAmino(o: any): o is _79.MsgRegisterPayeeAmino;
                    encode(message: _79.MsgRegisterPayee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MsgRegisterPayee;
                    fromPartial(object: Partial<_79.MsgRegisterPayee>): _79.MsgRegisterPayee;
                    fromAmino(object: _79.MsgRegisterPayeeAmino): _79.MsgRegisterPayee;
                    toAmino(message: _79.MsgRegisterPayee): _79.MsgRegisterPayeeAmino;
                    fromAminoMsg(object: _79.MsgRegisterPayeeAminoMsg): _79.MsgRegisterPayee;
                    toAminoMsg(message: _79.MsgRegisterPayee): _79.MsgRegisterPayeeAminoMsg;
                    fromProtoMsg(message: _79.MsgRegisterPayeeProtoMsg): _79.MsgRegisterPayee;
                    toProto(message: _79.MsgRegisterPayee): Uint8Array;
                    toProtoMsg(message: _79.MsgRegisterPayee): _79.MsgRegisterPayeeProtoMsg;
                };
                MsgRegisterPayeeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.MsgRegisterPayeeResponse;
                    isSDK(o: any): o is _79.MsgRegisterPayeeResponseSDKType;
                    isAmino(o: any): o is _79.MsgRegisterPayeeResponseAmino;
                    encode(_: _79.MsgRegisterPayeeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MsgRegisterPayeeResponse;
                    fromPartial(_: Partial<_79.MsgRegisterPayeeResponse>): _79.MsgRegisterPayeeResponse;
                    fromAmino(_: _79.MsgRegisterPayeeResponseAmino): _79.MsgRegisterPayeeResponse;
                    toAmino(_: _79.MsgRegisterPayeeResponse): _79.MsgRegisterPayeeResponseAmino;
                    fromAminoMsg(object: _79.MsgRegisterPayeeResponseAminoMsg): _79.MsgRegisterPayeeResponse;
                    toAminoMsg(message: _79.MsgRegisterPayeeResponse): _79.MsgRegisterPayeeResponseAminoMsg;
                    fromProtoMsg(message: _79.MsgRegisterPayeeResponseProtoMsg): _79.MsgRegisterPayeeResponse;
                    toProto(message: _79.MsgRegisterPayeeResponse): Uint8Array;
                    toProtoMsg(message: _79.MsgRegisterPayeeResponse): _79.MsgRegisterPayeeResponseProtoMsg;
                };
                MsgRegisterCounterpartyPayee: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.MsgRegisterCounterpartyPayee;
                    isSDK(o: any): o is _79.MsgRegisterCounterpartyPayeeSDKType;
                    isAmino(o: any): o is _79.MsgRegisterCounterpartyPayeeAmino;
                    encode(message: _79.MsgRegisterCounterpartyPayee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MsgRegisterCounterpartyPayee;
                    fromPartial(object: Partial<_79.MsgRegisterCounterpartyPayee>): _79.MsgRegisterCounterpartyPayee;
                    fromAmino(object: _79.MsgRegisterCounterpartyPayeeAmino): _79.MsgRegisterCounterpartyPayee;
                    toAmino(message: _79.MsgRegisterCounterpartyPayee): _79.MsgRegisterCounterpartyPayeeAmino;
                    fromAminoMsg(object: _79.MsgRegisterCounterpartyPayeeAminoMsg): _79.MsgRegisterCounterpartyPayee;
                    toAminoMsg(message: _79.MsgRegisterCounterpartyPayee): _79.MsgRegisterCounterpartyPayeeAminoMsg;
                    fromProtoMsg(message: _79.MsgRegisterCounterpartyPayeeProtoMsg): _79.MsgRegisterCounterpartyPayee;
                    toProto(message: _79.MsgRegisterCounterpartyPayee): Uint8Array;
                    toProtoMsg(message: _79.MsgRegisterCounterpartyPayee): _79.MsgRegisterCounterpartyPayeeProtoMsg;
                };
                MsgRegisterCounterpartyPayeeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.MsgRegisterCounterpartyPayeeResponse;
                    isSDK(o: any): o is _79.MsgRegisterCounterpartyPayeeResponseSDKType;
                    isAmino(o: any): o is _79.MsgRegisterCounterpartyPayeeResponseAmino;
                    encode(_: _79.MsgRegisterCounterpartyPayeeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MsgRegisterCounterpartyPayeeResponse;
                    fromPartial(_: Partial<_79.MsgRegisterCounterpartyPayeeResponse>): _79.MsgRegisterCounterpartyPayeeResponse;
                    fromAmino(_: _79.MsgRegisterCounterpartyPayeeResponseAmino): _79.MsgRegisterCounterpartyPayeeResponse;
                    toAmino(_: _79.MsgRegisterCounterpartyPayeeResponse): _79.MsgRegisterCounterpartyPayeeResponseAmino;
                    fromAminoMsg(object: _79.MsgRegisterCounterpartyPayeeResponseAminoMsg): _79.MsgRegisterCounterpartyPayeeResponse;
                    toAminoMsg(message: _79.MsgRegisterCounterpartyPayeeResponse): _79.MsgRegisterCounterpartyPayeeResponseAminoMsg;
                    fromProtoMsg(message: _79.MsgRegisterCounterpartyPayeeResponseProtoMsg): _79.MsgRegisterCounterpartyPayeeResponse;
                    toProto(message: _79.MsgRegisterCounterpartyPayeeResponse): Uint8Array;
                    toProtoMsg(message: _79.MsgRegisterCounterpartyPayeeResponse): _79.MsgRegisterCounterpartyPayeeResponseProtoMsg;
                };
                MsgPayPacketFee: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.MsgPayPacketFee;
                    isSDK(o: any): o is _79.MsgPayPacketFeeSDKType;
                    isAmino(o: any): o is _79.MsgPayPacketFeeAmino;
                    encode(message: _79.MsgPayPacketFee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MsgPayPacketFee;
                    fromPartial(object: Partial<_79.MsgPayPacketFee>): _79.MsgPayPacketFee;
                    fromAmino(object: _79.MsgPayPacketFeeAmino): _79.MsgPayPacketFee;
                    toAmino(message: _79.MsgPayPacketFee): _79.MsgPayPacketFeeAmino;
                    fromAminoMsg(object: _79.MsgPayPacketFeeAminoMsg): _79.MsgPayPacketFee;
                    toAminoMsg(message: _79.MsgPayPacketFee): _79.MsgPayPacketFeeAminoMsg;
                    fromProtoMsg(message: _79.MsgPayPacketFeeProtoMsg): _79.MsgPayPacketFee;
                    toProto(message: _79.MsgPayPacketFee): Uint8Array;
                    toProtoMsg(message: _79.MsgPayPacketFee): _79.MsgPayPacketFeeProtoMsg;
                };
                MsgPayPacketFeeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.MsgPayPacketFeeResponse;
                    isSDK(o: any): o is _79.MsgPayPacketFeeResponseSDKType;
                    isAmino(o: any): o is _79.MsgPayPacketFeeResponseAmino;
                    encode(_: _79.MsgPayPacketFeeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MsgPayPacketFeeResponse;
                    fromPartial(_: Partial<_79.MsgPayPacketFeeResponse>): _79.MsgPayPacketFeeResponse;
                    fromAmino(_: _79.MsgPayPacketFeeResponseAmino): _79.MsgPayPacketFeeResponse;
                    toAmino(_: _79.MsgPayPacketFeeResponse): _79.MsgPayPacketFeeResponseAmino;
                    fromAminoMsg(object: _79.MsgPayPacketFeeResponseAminoMsg): _79.MsgPayPacketFeeResponse;
                    toAminoMsg(message: _79.MsgPayPacketFeeResponse): _79.MsgPayPacketFeeResponseAminoMsg;
                    fromProtoMsg(message: _79.MsgPayPacketFeeResponseProtoMsg): _79.MsgPayPacketFeeResponse;
                    toProto(message: _79.MsgPayPacketFeeResponse): Uint8Array;
                    toProtoMsg(message: _79.MsgPayPacketFeeResponse): _79.MsgPayPacketFeeResponseProtoMsg;
                };
                MsgPayPacketFeeAsync: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.MsgPayPacketFeeAsync;
                    isSDK(o: any): o is _79.MsgPayPacketFeeAsyncSDKType;
                    isAmino(o: any): o is _79.MsgPayPacketFeeAsyncAmino;
                    encode(message: _79.MsgPayPacketFeeAsync, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MsgPayPacketFeeAsync;
                    fromPartial(object: Partial<_79.MsgPayPacketFeeAsync>): _79.MsgPayPacketFeeAsync;
                    fromAmino(object: _79.MsgPayPacketFeeAsyncAmino): _79.MsgPayPacketFeeAsync;
                    toAmino(message: _79.MsgPayPacketFeeAsync): _79.MsgPayPacketFeeAsyncAmino;
                    fromAminoMsg(object: _79.MsgPayPacketFeeAsyncAminoMsg): _79.MsgPayPacketFeeAsync;
                    toAminoMsg(message: _79.MsgPayPacketFeeAsync): _79.MsgPayPacketFeeAsyncAminoMsg;
                    fromProtoMsg(message: _79.MsgPayPacketFeeAsyncProtoMsg): _79.MsgPayPacketFeeAsync;
                    toProto(message: _79.MsgPayPacketFeeAsync): Uint8Array;
                    toProtoMsg(message: _79.MsgPayPacketFeeAsync): _79.MsgPayPacketFeeAsyncProtoMsg;
                };
                MsgPayPacketFeeAsyncResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _79.MsgPayPacketFeeAsyncResponse;
                    isSDK(o: any): o is _79.MsgPayPacketFeeAsyncResponseSDKType;
                    isAmino(o: any): o is _79.MsgPayPacketFeeAsyncResponseAmino;
                    encode(_: _79.MsgPayPacketFeeAsyncResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.MsgPayPacketFeeAsyncResponse;
                    fromPartial(_: Partial<_79.MsgPayPacketFeeAsyncResponse>): _79.MsgPayPacketFeeAsyncResponse;
                    fromAmino(_: _79.MsgPayPacketFeeAsyncResponseAmino): _79.MsgPayPacketFeeAsyncResponse;
                    toAmino(_: _79.MsgPayPacketFeeAsyncResponse): _79.MsgPayPacketFeeAsyncResponseAmino;
                    fromAminoMsg(object: _79.MsgPayPacketFeeAsyncResponseAminoMsg): _79.MsgPayPacketFeeAsyncResponse;
                    toAminoMsg(message: _79.MsgPayPacketFeeAsyncResponse): _79.MsgPayPacketFeeAsyncResponseAminoMsg;
                    fromProtoMsg(message: _79.MsgPayPacketFeeAsyncResponseProtoMsg): _79.MsgPayPacketFeeAsyncResponse;
                    toProto(message: _79.MsgPayPacketFeeAsyncResponse): Uint8Array;
                    toProtoMsg(message: _79.MsgPayPacketFeeAsyncResponse): _79.MsgPayPacketFeeAsyncResponseProtoMsg;
                };
                QueryIncentivizedPacketsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryIncentivizedPacketsRequest;
                    isSDK(o: any): o is _78.QueryIncentivizedPacketsRequestSDKType;
                    isAmino(o: any): o is _78.QueryIncentivizedPacketsRequestAmino;
                    encode(message: _78.QueryIncentivizedPacketsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryIncentivizedPacketsRequest;
                    fromPartial(object: Partial<_78.QueryIncentivizedPacketsRequest>): _78.QueryIncentivizedPacketsRequest;
                    fromAmino(object: _78.QueryIncentivizedPacketsRequestAmino): _78.QueryIncentivizedPacketsRequest;
                    toAmino(message: _78.QueryIncentivizedPacketsRequest): _78.QueryIncentivizedPacketsRequestAmino;
                    fromAminoMsg(object: _78.QueryIncentivizedPacketsRequestAminoMsg): _78.QueryIncentivizedPacketsRequest;
                    toAminoMsg(message: _78.QueryIncentivizedPacketsRequest): _78.QueryIncentivizedPacketsRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryIncentivizedPacketsRequestProtoMsg): _78.QueryIncentivizedPacketsRequest;
                    toProto(message: _78.QueryIncentivizedPacketsRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryIncentivizedPacketsRequest): _78.QueryIncentivizedPacketsRequestProtoMsg;
                };
                QueryIncentivizedPacketsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryIncentivizedPacketsResponse;
                    isSDK(o: any): o is _78.QueryIncentivizedPacketsResponseSDKType;
                    isAmino(o: any): o is _78.QueryIncentivizedPacketsResponseAmino;
                    encode(message: _78.QueryIncentivizedPacketsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryIncentivizedPacketsResponse;
                    fromPartial(object: Partial<_78.QueryIncentivizedPacketsResponse>): _78.QueryIncentivizedPacketsResponse;
                    fromAmino(object: _78.QueryIncentivizedPacketsResponseAmino): _78.QueryIncentivizedPacketsResponse;
                    toAmino(message: _78.QueryIncentivizedPacketsResponse): _78.QueryIncentivizedPacketsResponseAmino;
                    fromAminoMsg(object: _78.QueryIncentivizedPacketsResponseAminoMsg): _78.QueryIncentivizedPacketsResponse;
                    toAminoMsg(message: _78.QueryIncentivizedPacketsResponse): _78.QueryIncentivizedPacketsResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryIncentivizedPacketsResponseProtoMsg): _78.QueryIncentivizedPacketsResponse;
                    toProto(message: _78.QueryIncentivizedPacketsResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryIncentivizedPacketsResponse): _78.QueryIncentivizedPacketsResponseProtoMsg;
                };
                QueryIncentivizedPacketRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryIncentivizedPacketRequest;
                    isSDK(o: any): o is _78.QueryIncentivizedPacketRequestSDKType;
                    isAmino(o: any): o is _78.QueryIncentivizedPacketRequestAmino;
                    encode(message: _78.QueryIncentivizedPacketRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryIncentivizedPacketRequest;
                    fromPartial(object: Partial<_78.QueryIncentivizedPacketRequest>): _78.QueryIncentivizedPacketRequest;
                    fromAmino(object: _78.QueryIncentivizedPacketRequestAmino): _78.QueryIncentivizedPacketRequest;
                    toAmino(message: _78.QueryIncentivizedPacketRequest): _78.QueryIncentivizedPacketRequestAmino;
                    fromAminoMsg(object: _78.QueryIncentivizedPacketRequestAminoMsg): _78.QueryIncentivizedPacketRequest;
                    toAminoMsg(message: _78.QueryIncentivizedPacketRequest): _78.QueryIncentivizedPacketRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryIncentivizedPacketRequestProtoMsg): _78.QueryIncentivizedPacketRequest;
                    toProto(message: _78.QueryIncentivizedPacketRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryIncentivizedPacketRequest): _78.QueryIncentivizedPacketRequestProtoMsg;
                };
                QueryIncentivizedPacketResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryIncentivizedPacketResponse;
                    isSDK(o: any): o is _78.QueryIncentivizedPacketResponseSDKType;
                    isAmino(o: any): o is _78.QueryIncentivizedPacketResponseAmino;
                    encode(message: _78.QueryIncentivizedPacketResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryIncentivizedPacketResponse;
                    fromPartial(object: Partial<_78.QueryIncentivizedPacketResponse>): _78.QueryIncentivizedPacketResponse;
                    fromAmino(object: _78.QueryIncentivizedPacketResponseAmino): _78.QueryIncentivizedPacketResponse;
                    toAmino(message: _78.QueryIncentivizedPacketResponse): _78.QueryIncentivizedPacketResponseAmino;
                    fromAminoMsg(object: _78.QueryIncentivizedPacketResponseAminoMsg): _78.QueryIncentivizedPacketResponse;
                    toAminoMsg(message: _78.QueryIncentivizedPacketResponse): _78.QueryIncentivizedPacketResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryIncentivizedPacketResponseProtoMsg): _78.QueryIncentivizedPacketResponse;
                    toProto(message: _78.QueryIncentivizedPacketResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryIncentivizedPacketResponse): _78.QueryIncentivizedPacketResponseProtoMsg;
                };
                QueryIncentivizedPacketsForChannelRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryIncentivizedPacketsForChannelRequest;
                    isSDK(o: any): o is _78.QueryIncentivizedPacketsForChannelRequestSDKType;
                    isAmino(o: any): o is _78.QueryIncentivizedPacketsForChannelRequestAmino;
                    encode(message: _78.QueryIncentivizedPacketsForChannelRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryIncentivizedPacketsForChannelRequest;
                    fromPartial(object: Partial<_78.QueryIncentivizedPacketsForChannelRequest>): _78.QueryIncentivizedPacketsForChannelRequest;
                    fromAmino(object: _78.QueryIncentivizedPacketsForChannelRequestAmino): _78.QueryIncentivizedPacketsForChannelRequest;
                    toAmino(message: _78.QueryIncentivizedPacketsForChannelRequest): _78.QueryIncentivizedPacketsForChannelRequestAmino;
                    fromAminoMsg(object: _78.QueryIncentivizedPacketsForChannelRequestAminoMsg): _78.QueryIncentivizedPacketsForChannelRequest;
                    toAminoMsg(message: _78.QueryIncentivizedPacketsForChannelRequest): _78.QueryIncentivizedPacketsForChannelRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryIncentivizedPacketsForChannelRequestProtoMsg): _78.QueryIncentivizedPacketsForChannelRequest;
                    toProto(message: _78.QueryIncentivizedPacketsForChannelRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryIncentivizedPacketsForChannelRequest): _78.QueryIncentivizedPacketsForChannelRequestProtoMsg;
                };
                QueryIncentivizedPacketsForChannelResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryIncentivizedPacketsForChannelResponse;
                    isSDK(o: any): o is _78.QueryIncentivizedPacketsForChannelResponseSDKType;
                    isAmino(o: any): o is _78.QueryIncentivizedPacketsForChannelResponseAmino;
                    encode(message: _78.QueryIncentivizedPacketsForChannelResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryIncentivizedPacketsForChannelResponse;
                    fromPartial(object: Partial<_78.QueryIncentivizedPacketsForChannelResponse>): _78.QueryIncentivizedPacketsForChannelResponse;
                    fromAmino(object: _78.QueryIncentivizedPacketsForChannelResponseAmino): _78.QueryIncentivizedPacketsForChannelResponse;
                    toAmino(message: _78.QueryIncentivizedPacketsForChannelResponse): _78.QueryIncentivizedPacketsForChannelResponseAmino;
                    fromAminoMsg(object: _78.QueryIncentivizedPacketsForChannelResponseAminoMsg): _78.QueryIncentivizedPacketsForChannelResponse;
                    toAminoMsg(message: _78.QueryIncentivizedPacketsForChannelResponse): _78.QueryIncentivizedPacketsForChannelResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryIncentivizedPacketsForChannelResponseProtoMsg): _78.QueryIncentivizedPacketsForChannelResponse;
                    toProto(message: _78.QueryIncentivizedPacketsForChannelResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryIncentivizedPacketsForChannelResponse): _78.QueryIncentivizedPacketsForChannelResponseProtoMsg;
                };
                QueryTotalRecvFeesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryTotalRecvFeesRequest;
                    isSDK(o: any): o is _78.QueryTotalRecvFeesRequestSDKType;
                    isAmino(o: any): o is _78.QueryTotalRecvFeesRequestAmino;
                    encode(message: _78.QueryTotalRecvFeesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryTotalRecvFeesRequest;
                    fromPartial(object: Partial<_78.QueryTotalRecvFeesRequest>): _78.QueryTotalRecvFeesRequest;
                    fromAmino(object: _78.QueryTotalRecvFeesRequestAmino): _78.QueryTotalRecvFeesRequest;
                    toAmino(message: _78.QueryTotalRecvFeesRequest): _78.QueryTotalRecvFeesRequestAmino;
                    fromAminoMsg(object: _78.QueryTotalRecvFeesRequestAminoMsg): _78.QueryTotalRecvFeesRequest;
                    toAminoMsg(message: _78.QueryTotalRecvFeesRequest): _78.QueryTotalRecvFeesRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryTotalRecvFeesRequestProtoMsg): _78.QueryTotalRecvFeesRequest;
                    toProto(message: _78.QueryTotalRecvFeesRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryTotalRecvFeesRequest): _78.QueryTotalRecvFeesRequestProtoMsg;
                };
                QueryTotalRecvFeesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryTotalRecvFeesResponse;
                    isSDK(o: any): o is _78.QueryTotalRecvFeesResponseSDKType;
                    isAmino(o: any): o is _78.QueryTotalRecvFeesResponseAmino;
                    encode(message: _78.QueryTotalRecvFeesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryTotalRecvFeesResponse;
                    fromPartial(object: Partial<_78.QueryTotalRecvFeesResponse>): _78.QueryTotalRecvFeesResponse;
                    fromAmino(object: _78.QueryTotalRecvFeesResponseAmino): _78.QueryTotalRecvFeesResponse;
                    toAmino(message: _78.QueryTotalRecvFeesResponse): _78.QueryTotalRecvFeesResponseAmino;
                    fromAminoMsg(object: _78.QueryTotalRecvFeesResponseAminoMsg): _78.QueryTotalRecvFeesResponse;
                    toAminoMsg(message: _78.QueryTotalRecvFeesResponse): _78.QueryTotalRecvFeesResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryTotalRecvFeesResponseProtoMsg): _78.QueryTotalRecvFeesResponse;
                    toProto(message: _78.QueryTotalRecvFeesResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryTotalRecvFeesResponse): _78.QueryTotalRecvFeesResponseProtoMsg;
                };
                QueryTotalAckFeesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryTotalAckFeesRequest;
                    isSDK(o: any): o is _78.QueryTotalAckFeesRequestSDKType;
                    isAmino(o: any): o is _78.QueryTotalAckFeesRequestAmino;
                    encode(message: _78.QueryTotalAckFeesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryTotalAckFeesRequest;
                    fromPartial(object: Partial<_78.QueryTotalAckFeesRequest>): _78.QueryTotalAckFeesRequest;
                    fromAmino(object: _78.QueryTotalAckFeesRequestAmino): _78.QueryTotalAckFeesRequest;
                    toAmino(message: _78.QueryTotalAckFeesRequest): _78.QueryTotalAckFeesRequestAmino;
                    fromAminoMsg(object: _78.QueryTotalAckFeesRequestAminoMsg): _78.QueryTotalAckFeesRequest;
                    toAminoMsg(message: _78.QueryTotalAckFeesRequest): _78.QueryTotalAckFeesRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryTotalAckFeesRequestProtoMsg): _78.QueryTotalAckFeesRequest;
                    toProto(message: _78.QueryTotalAckFeesRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryTotalAckFeesRequest): _78.QueryTotalAckFeesRequestProtoMsg;
                };
                QueryTotalAckFeesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryTotalAckFeesResponse;
                    isSDK(o: any): o is _78.QueryTotalAckFeesResponseSDKType;
                    isAmino(o: any): o is _78.QueryTotalAckFeesResponseAmino;
                    encode(message: _78.QueryTotalAckFeesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryTotalAckFeesResponse;
                    fromPartial(object: Partial<_78.QueryTotalAckFeesResponse>): _78.QueryTotalAckFeesResponse;
                    fromAmino(object: _78.QueryTotalAckFeesResponseAmino): _78.QueryTotalAckFeesResponse;
                    toAmino(message: _78.QueryTotalAckFeesResponse): _78.QueryTotalAckFeesResponseAmino;
                    fromAminoMsg(object: _78.QueryTotalAckFeesResponseAminoMsg): _78.QueryTotalAckFeesResponse;
                    toAminoMsg(message: _78.QueryTotalAckFeesResponse): _78.QueryTotalAckFeesResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryTotalAckFeesResponseProtoMsg): _78.QueryTotalAckFeesResponse;
                    toProto(message: _78.QueryTotalAckFeesResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryTotalAckFeesResponse): _78.QueryTotalAckFeesResponseProtoMsg;
                };
                QueryTotalTimeoutFeesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryTotalTimeoutFeesRequest;
                    isSDK(o: any): o is _78.QueryTotalTimeoutFeesRequestSDKType;
                    isAmino(o: any): o is _78.QueryTotalTimeoutFeesRequestAmino;
                    encode(message: _78.QueryTotalTimeoutFeesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryTotalTimeoutFeesRequest;
                    fromPartial(object: Partial<_78.QueryTotalTimeoutFeesRequest>): _78.QueryTotalTimeoutFeesRequest;
                    fromAmino(object: _78.QueryTotalTimeoutFeesRequestAmino): _78.QueryTotalTimeoutFeesRequest;
                    toAmino(message: _78.QueryTotalTimeoutFeesRequest): _78.QueryTotalTimeoutFeesRequestAmino;
                    fromAminoMsg(object: _78.QueryTotalTimeoutFeesRequestAminoMsg): _78.QueryTotalTimeoutFeesRequest;
                    toAminoMsg(message: _78.QueryTotalTimeoutFeesRequest): _78.QueryTotalTimeoutFeesRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryTotalTimeoutFeesRequestProtoMsg): _78.QueryTotalTimeoutFeesRequest;
                    toProto(message: _78.QueryTotalTimeoutFeesRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryTotalTimeoutFeesRequest): _78.QueryTotalTimeoutFeesRequestProtoMsg;
                };
                QueryTotalTimeoutFeesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryTotalTimeoutFeesResponse;
                    isSDK(o: any): o is _78.QueryTotalTimeoutFeesResponseSDKType;
                    isAmino(o: any): o is _78.QueryTotalTimeoutFeesResponseAmino;
                    encode(message: _78.QueryTotalTimeoutFeesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryTotalTimeoutFeesResponse;
                    fromPartial(object: Partial<_78.QueryTotalTimeoutFeesResponse>): _78.QueryTotalTimeoutFeesResponse;
                    fromAmino(object: _78.QueryTotalTimeoutFeesResponseAmino): _78.QueryTotalTimeoutFeesResponse;
                    toAmino(message: _78.QueryTotalTimeoutFeesResponse): _78.QueryTotalTimeoutFeesResponseAmino;
                    fromAminoMsg(object: _78.QueryTotalTimeoutFeesResponseAminoMsg): _78.QueryTotalTimeoutFeesResponse;
                    toAminoMsg(message: _78.QueryTotalTimeoutFeesResponse): _78.QueryTotalTimeoutFeesResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryTotalTimeoutFeesResponseProtoMsg): _78.QueryTotalTimeoutFeesResponse;
                    toProto(message: _78.QueryTotalTimeoutFeesResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryTotalTimeoutFeesResponse): _78.QueryTotalTimeoutFeesResponseProtoMsg;
                };
                QueryPayeeRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryPayeeRequest;
                    isSDK(o: any): o is _78.QueryPayeeRequestSDKType;
                    isAmino(o: any): o is _78.QueryPayeeRequestAmino;
                    encode(message: _78.QueryPayeeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryPayeeRequest;
                    fromPartial(object: Partial<_78.QueryPayeeRequest>): _78.QueryPayeeRequest;
                    fromAmino(object: _78.QueryPayeeRequestAmino): _78.QueryPayeeRequest;
                    toAmino(message: _78.QueryPayeeRequest): _78.QueryPayeeRequestAmino;
                    fromAminoMsg(object: _78.QueryPayeeRequestAminoMsg): _78.QueryPayeeRequest;
                    toAminoMsg(message: _78.QueryPayeeRequest): _78.QueryPayeeRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryPayeeRequestProtoMsg): _78.QueryPayeeRequest;
                    toProto(message: _78.QueryPayeeRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryPayeeRequest): _78.QueryPayeeRequestProtoMsg;
                };
                QueryPayeeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryPayeeResponse;
                    isSDK(o: any): o is _78.QueryPayeeResponseSDKType;
                    isAmino(o: any): o is _78.QueryPayeeResponseAmino;
                    encode(message: _78.QueryPayeeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryPayeeResponse;
                    fromPartial(object: Partial<_78.QueryPayeeResponse>): _78.QueryPayeeResponse;
                    fromAmino(object: _78.QueryPayeeResponseAmino): _78.QueryPayeeResponse;
                    toAmino(message: _78.QueryPayeeResponse): _78.QueryPayeeResponseAmino;
                    fromAminoMsg(object: _78.QueryPayeeResponseAminoMsg): _78.QueryPayeeResponse;
                    toAminoMsg(message: _78.QueryPayeeResponse): _78.QueryPayeeResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryPayeeResponseProtoMsg): _78.QueryPayeeResponse;
                    toProto(message: _78.QueryPayeeResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryPayeeResponse): _78.QueryPayeeResponseProtoMsg;
                };
                QueryCounterpartyPayeeRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryCounterpartyPayeeRequest;
                    isSDK(o: any): o is _78.QueryCounterpartyPayeeRequestSDKType;
                    isAmino(o: any): o is _78.QueryCounterpartyPayeeRequestAmino;
                    encode(message: _78.QueryCounterpartyPayeeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryCounterpartyPayeeRequest;
                    fromPartial(object: Partial<_78.QueryCounterpartyPayeeRequest>): _78.QueryCounterpartyPayeeRequest;
                    fromAmino(object: _78.QueryCounterpartyPayeeRequestAmino): _78.QueryCounterpartyPayeeRequest;
                    toAmino(message: _78.QueryCounterpartyPayeeRequest): _78.QueryCounterpartyPayeeRequestAmino;
                    fromAminoMsg(object: _78.QueryCounterpartyPayeeRequestAminoMsg): _78.QueryCounterpartyPayeeRequest;
                    toAminoMsg(message: _78.QueryCounterpartyPayeeRequest): _78.QueryCounterpartyPayeeRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryCounterpartyPayeeRequestProtoMsg): _78.QueryCounterpartyPayeeRequest;
                    toProto(message: _78.QueryCounterpartyPayeeRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryCounterpartyPayeeRequest): _78.QueryCounterpartyPayeeRequestProtoMsg;
                };
                QueryCounterpartyPayeeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryCounterpartyPayeeResponse;
                    isSDK(o: any): o is _78.QueryCounterpartyPayeeResponseSDKType;
                    isAmino(o: any): o is _78.QueryCounterpartyPayeeResponseAmino;
                    encode(message: _78.QueryCounterpartyPayeeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryCounterpartyPayeeResponse;
                    fromPartial(object: Partial<_78.QueryCounterpartyPayeeResponse>): _78.QueryCounterpartyPayeeResponse;
                    fromAmino(object: _78.QueryCounterpartyPayeeResponseAmino): _78.QueryCounterpartyPayeeResponse;
                    toAmino(message: _78.QueryCounterpartyPayeeResponse): _78.QueryCounterpartyPayeeResponseAmino;
                    fromAminoMsg(object: _78.QueryCounterpartyPayeeResponseAminoMsg): _78.QueryCounterpartyPayeeResponse;
                    toAminoMsg(message: _78.QueryCounterpartyPayeeResponse): _78.QueryCounterpartyPayeeResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryCounterpartyPayeeResponseProtoMsg): _78.QueryCounterpartyPayeeResponse;
                    toProto(message: _78.QueryCounterpartyPayeeResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryCounterpartyPayeeResponse): _78.QueryCounterpartyPayeeResponseProtoMsg;
                };
                QueryFeeEnabledChannelsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryFeeEnabledChannelsRequest;
                    isSDK(o: any): o is _78.QueryFeeEnabledChannelsRequestSDKType;
                    isAmino(o: any): o is _78.QueryFeeEnabledChannelsRequestAmino;
                    encode(message: _78.QueryFeeEnabledChannelsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryFeeEnabledChannelsRequest;
                    fromPartial(object: Partial<_78.QueryFeeEnabledChannelsRequest>): _78.QueryFeeEnabledChannelsRequest;
                    fromAmino(object: _78.QueryFeeEnabledChannelsRequestAmino): _78.QueryFeeEnabledChannelsRequest;
                    toAmino(message: _78.QueryFeeEnabledChannelsRequest): _78.QueryFeeEnabledChannelsRequestAmino;
                    fromAminoMsg(object: _78.QueryFeeEnabledChannelsRequestAminoMsg): _78.QueryFeeEnabledChannelsRequest;
                    toAminoMsg(message: _78.QueryFeeEnabledChannelsRequest): _78.QueryFeeEnabledChannelsRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryFeeEnabledChannelsRequestProtoMsg): _78.QueryFeeEnabledChannelsRequest;
                    toProto(message: _78.QueryFeeEnabledChannelsRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryFeeEnabledChannelsRequest): _78.QueryFeeEnabledChannelsRequestProtoMsg;
                };
                QueryFeeEnabledChannelsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryFeeEnabledChannelsResponse;
                    isSDK(o: any): o is _78.QueryFeeEnabledChannelsResponseSDKType;
                    isAmino(o: any): o is _78.QueryFeeEnabledChannelsResponseAmino;
                    encode(message: _78.QueryFeeEnabledChannelsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryFeeEnabledChannelsResponse;
                    fromPartial(object: Partial<_78.QueryFeeEnabledChannelsResponse>): _78.QueryFeeEnabledChannelsResponse;
                    fromAmino(object: _78.QueryFeeEnabledChannelsResponseAmino): _78.QueryFeeEnabledChannelsResponse;
                    toAmino(message: _78.QueryFeeEnabledChannelsResponse): _78.QueryFeeEnabledChannelsResponseAmino;
                    fromAminoMsg(object: _78.QueryFeeEnabledChannelsResponseAminoMsg): _78.QueryFeeEnabledChannelsResponse;
                    toAminoMsg(message: _78.QueryFeeEnabledChannelsResponse): _78.QueryFeeEnabledChannelsResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryFeeEnabledChannelsResponseProtoMsg): _78.QueryFeeEnabledChannelsResponse;
                    toProto(message: _78.QueryFeeEnabledChannelsResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryFeeEnabledChannelsResponse): _78.QueryFeeEnabledChannelsResponseProtoMsg;
                };
                QueryFeeEnabledChannelRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryFeeEnabledChannelRequest;
                    isSDK(o: any): o is _78.QueryFeeEnabledChannelRequestSDKType;
                    isAmino(o: any): o is _78.QueryFeeEnabledChannelRequestAmino;
                    encode(message: _78.QueryFeeEnabledChannelRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryFeeEnabledChannelRequest;
                    fromPartial(object: Partial<_78.QueryFeeEnabledChannelRequest>): _78.QueryFeeEnabledChannelRequest;
                    fromAmino(object: _78.QueryFeeEnabledChannelRequestAmino): _78.QueryFeeEnabledChannelRequest;
                    toAmino(message: _78.QueryFeeEnabledChannelRequest): _78.QueryFeeEnabledChannelRequestAmino;
                    fromAminoMsg(object: _78.QueryFeeEnabledChannelRequestAminoMsg): _78.QueryFeeEnabledChannelRequest;
                    toAminoMsg(message: _78.QueryFeeEnabledChannelRequest): _78.QueryFeeEnabledChannelRequestAminoMsg;
                    fromProtoMsg(message: _78.QueryFeeEnabledChannelRequestProtoMsg): _78.QueryFeeEnabledChannelRequest;
                    toProto(message: _78.QueryFeeEnabledChannelRequest): Uint8Array;
                    toProtoMsg(message: _78.QueryFeeEnabledChannelRequest): _78.QueryFeeEnabledChannelRequestProtoMsg;
                };
                QueryFeeEnabledChannelResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _78.QueryFeeEnabledChannelResponse;
                    isSDK(o: any): o is _78.QueryFeeEnabledChannelResponseSDKType;
                    isAmino(o: any): o is _78.QueryFeeEnabledChannelResponseAmino;
                    encode(message: _78.QueryFeeEnabledChannelResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.QueryFeeEnabledChannelResponse;
                    fromPartial(object: Partial<_78.QueryFeeEnabledChannelResponse>): _78.QueryFeeEnabledChannelResponse;
                    fromAmino(object: _78.QueryFeeEnabledChannelResponseAmino): _78.QueryFeeEnabledChannelResponse;
                    toAmino(message: _78.QueryFeeEnabledChannelResponse): _78.QueryFeeEnabledChannelResponseAmino;
                    fromAminoMsg(object: _78.QueryFeeEnabledChannelResponseAminoMsg): _78.QueryFeeEnabledChannelResponse;
                    toAminoMsg(message: _78.QueryFeeEnabledChannelResponse): _78.QueryFeeEnabledChannelResponseAminoMsg;
                    fromProtoMsg(message: _78.QueryFeeEnabledChannelResponseProtoMsg): _78.QueryFeeEnabledChannelResponse;
                    toProto(message: _78.QueryFeeEnabledChannelResponse): Uint8Array;
                    toProtoMsg(message: _78.QueryFeeEnabledChannelResponse): _78.QueryFeeEnabledChannelResponseProtoMsg;
                };
                Metadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _77.Metadata;
                    isSDK(o: any): o is _77.MetadataSDKType;
                    isAmino(o: any): o is _77.MetadataAmino;
                    encode(message: _77.Metadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.Metadata;
                    fromPartial(object: Partial<_77.Metadata>): _77.Metadata;
                    fromAmino(object: _77.MetadataAmino): _77.Metadata;
                    toAmino(message: _77.Metadata): _77.MetadataAmino;
                    fromAminoMsg(object: _77.MetadataAminoMsg): _77.Metadata;
                    toAminoMsg(message: _77.Metadata): _77.MetadataAminoMsg;
                    fromProtoMsg(message: _77.MetadataProtoMsg): _77.Metadata;
                    toProto(message: _77.Metadata): Uint8Array;
                    toProtoMsg(message: _77.Metadata): _77.MetadataProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _76.GenesisState;
                    isSDK(o: any): o is _76.GenesisStateSDKType;
                    isAmino(o: any): o is _76.GenesisStateAmino;
                    encode(message: _76.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.GenesisState;
                    fromPartial(object: Partial<_76.GenesisState>): _76.GenesisState;
                    fromAmino(object: _76.GenesisStateAmino): _76.GenesisState;
                    toAmino(message: _76.GenesisState): _76.GenesisStateAmino;
                    fromAminoMsg(object: _76.GenesisStateAminoMsg): _76.GenesisState;
                    toAminoMsg(message: _76.GenesisState): _76.GenesisStateAminoMsg;
                    fromProtoMsg(message: _76.GenesisStateProtoMsg): _76.GenesisState;
                    toProto(message: _76.GenesisState): Uint8Array;
                    toProtoMsg(message: _76.GenesisState): _76.GenesisStateProtoMsg;
                };
                FeeEnabledChannel: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _76.FeeEnabledChannel;
                    isSDK(o: any): o is _76.FeeEnabledChannelSDKType;
                    isAmino(o: any): o is _76.FeeEnabledChannelAmino;
                    encode(message: _76.FeeEnabledChannel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.FeeEnabledChannel;
                    fromPartial(object: Partial<_76.FeeEnabledChannel>): _76.FeeEnabledChannel;
                    fromAmino(object: _76.FeeEnabledChannelAmino): _76.FeeEnabledChannel;
                    toAmino(message: _76.FeeEnabledChannel): _76.FeeEnabledChannelAmino;
                    fromAminoMsg(object: _76.FeeEnabledChannelAminoMsg): _76.FeeEnabledChannel;
                    toAminoMsg(message: _76.FeeEnabledChannel): _76.FeeEnabledChannelAminoMsg;
                    fromProtoMsg(message: _76.FeeEnabledChannelProtoMsg): _76.FeeEnabledChannel;
                    toProto(message: _76.FeeEnabledChannel): Uint8Array;
                    toProtoMsg(message: _76.FeeEnabledChannel): _76.FeeEnabledChannelProtoMsg;
                };
                RegisteredPayee: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _76.RegisteredPayee;
                    isSDK(o: any): o is _76.RegisteredPayeeSDKType;
                    isAmino(o: any): o is _76.RegisteredPayeeAmino;
                    encode(message: _76.RegisteredPayee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.RegisteredPayee;
                    fromPartial(object: Partial<_76.RegisteredPayee>): _76.RegisteredPayee;
                    fromAmino(object: _76.RegisteredPayeeAmino): _76.RegisteredPayee;
                    toAmino(message: _76.RegisteredPayee): _76.RegisteredPayeeAmino;
                    fromAminoMsg(object: _76.RegisteredPayeeAminoMsg): _76.RegisteredPayee;
                    toAminoMsg(message: _76.RegisteredPayee): _76.RegisteredPayeeAminoMsg;
                    fromProtoMsg(message: _76.RegisteredPayeeProtoMsg): _76.RegisteredPayee;
                    toProto(message: _76.RegisteredPayee): Uint8Array;
                    toProtoMsg(message: _76.RegisteredPayee): _76.RegisteredPayeeProtoMsg;
                };
                RegisteredCounterpartyPayee: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _76.RegisteredCounterpartyPayee;
                    isSDK(o: any): o is _76.RegisteredCounterpartyPayeeSDKType;
                    isAmino(o: any): o is _76.RegisteredCounterpartyPayeeAmino;
                    encode(message: _76.RegisteredCounterpartyPayee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.RegisteredCounterpartyPayee;
                    fromPartial(object: Partial<_76.RegisteredCounterpartyPayee>): _76.RegisteredCounterpartyPayee;
                    fromAmino(object: _76.RegisteredCounterpartyPayeeAmino): _76.RegisteredCounterpartyPayee;
                    toAmino(message: _76.RegisteredCounterpartyPayee): _76.RegisteredCounterpartyPayeeAmino;
                    fromAminoMsg(object: _76.RegisteredCounterpartyPayeeAminoMsg): _76.RegisteredCounterpartyPayee;
                    toAminoMsg(message: _76.RegisteredCounterpartyPayee): _76.RegisteredCounterpartyPayeeAminoMsg;
                    fromProtoMsg(message: _76.RegisteredCounterpartyPayeeProtoMsg): _76.RegisteredCounterpartyPayee;
                    toProto(message: _76.RegisteredCounterpartyPayee): Uint8Array;
                    toProtoMsg(message: _76.RegisteredCounterpartyPayee): _76.RegisteredCounterpartyPayeeProtoMsg;
                };
                ForwardRelayerAddress: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _76.ForwardRelayerAddress;
                    isSDK(o: any): o is _76.ForwardRelayerAddressSDKType;
                    isAmino(o: any): o is _76.ForwardRelayerAddressAmino;
                    encode(message: _76.ForwardRelayerAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.ForwardRelayerAddress;
                    fromPartial(object: Partial<_76.ForwardRelayerAddress>): _76.ForwardRelayerAddress;
                    fromAmino(object: _76.ForwardRelayerAddressAmino): _76.ForwardRelayerAddress;
                    toAmino(message: _76.ForwardRelayerAddress): _76.ForwardRelayerAddressAmino;
                    fromAminoMsg(object: _76.ForwardRelayerAddressAminoMsg): _76.ForwardRelayerAddress;
                    toAminoMsg(message: _76.ForwardRelayerAddress): _76.ForwardRelayerAddressAminoMsg;
                    fromProtoMsg(message: _76.ForwardRelayerAddressProtoMsg): _76.ForwardRelayerAddress;
                    toProto(message: _76.ForwardRelayerAddress): Uint8Array;
                    toProtoMsg(message: _76.ForwardRelayerAddress): _76.ForwardRelayerAddressProtoMsg;
                };
                Fee: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.Fee;
                    isSDK(o: any): o is _75.FeeSDKType;
                    isAmino(o: any): o is _75.FeeAmino;
                    encode(message: _75.Fee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.Fee;
                    fromPartial(object: Partial<_75.Fee>): _75.Fee;
                    fromAmino(object: _75.FeeAmino): _75.Fee;
                    toAmino(message: _75.Fee): _75.FeeAmino;
                    fromAminoMsg(object: _75.FeeAminoMsg): _75.Fee;
                    toAminoMsg(message: _75.Fee): _75.FeeAminoMsg;
                    fromProtoMsg(message: _75.FeeProtoMsg): _75.Fee;
                    toProto(message: _75.Fee): Uint8Array;
                    toProtoMsg(message: _75.Fee): _75.FeeProtoMsg;
                };
                PacketFee: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.PacketFee;
                    isSDK(o: any): o is _75.PacketFeeSDKType;
                    isAmino(o: any): o is _75.PacketFeeAmino;
                    encode(message: _75.PacketFee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.PacketFee;
                    fromPartial(object: Partial<_75.PacketFee>): _75.PacketFee;
                    fromAmino(object: _75.PacketFeeAmino): _75.PacketFee;
                    toAmino(message: _75.PacketFee): _75.PacketFeeAmino;
                    fromAminoMsg(object: _75.PacketFeeAminoMsg): _75.PacketFee;
                    toAminoMsg(message: _75.PacketFee): _75.PacketFeeAminoMsg;
                    fromProtoMsg(message: _75.PacketFeeProtoMsg): _75.PacketFee;
                    toProto(message: _75.PacketFee): Uint8Array;
                    toProtoMsg(message: _75.PacketFee): _75.PacketFeeProtoMsg;
                };
                PacketFees: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.PacketFees;
                    isSDK(o: any): o is _75.PacketFeesSDKType;
                    isAmino(o: any): o is _75.PacketFeesAmino;
                    encode(message: _75.PacketFees, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.PacketFees;
                    fromPartial(object: Partial<_75.PacketFees>): _75.PacketFees;
                    fromAmino(object: _75.PacketFeesAmino): _75.PacketFees;
                    toAmino(message: _75.PacketFees): _75.PacketFeesAmino;
                    fromAminoMsg(object: _75.PacketFeesAminoMsg): _75.PacketFees;
                    toAminoMsg(message: _75.PacketFees): _75.PacketFeesAminoMsg;
                    fromProtoMsg(message: _75.PacketFeesProtoMsg): _75.PacketFees;
                    toProto(message: _75.PacketFees): Uint8Array;
                    toProtoMsg(message: _75.PacketFees): _75.PacketFeesProtoMsg;
                };
                IdentifiedPacketFees: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _75.IdentifiedPacketFees;
                    isSDK(o: any): o is _75.IdentifiedPacketFeesSDKType;
                    isAmino(o: any): o is _75.IdentifiedPacketFeesAmino;
                    encode(message: _75.IdentifiedPacketFees, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.IdentifiedPacketFees;
                    fromPartial(object: Partial<_75.IdentifiedPacketFees>): _75.IdentifiedPacketFees;
                    fromAmino(object: _75.IdentifiedPacketFeesAmino): _75.IdentifiedPacketFees;
                    toAmino(message: _75.IdentifiedPacketFees): _75.IdentifiedPacketFeesAmino;
                    fromAminoMsg(object: _75.IdentifiedPacketFeesAminoMsg): _75.IdentifiedPacketFees;
                    toAminoMsg(message: _75.IdentifiedPacketFees): _75.IdentifiedPacketFeesAminoMsg;
                    fromProtoMsg(message: _75.IdentifiedPacketFeesProtoMsg): _75.IdentifiedPacketFees;
                    toProto(message: _75.IdentifiedPacketFees): Uint8Array;
                    toProtoMsg(message: _75.IdentifiedPacketFees): _75.IdentifiedPacketFeesProtoMsg;
                };
                IncentivizedAcknowledgement: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _74.IncentivizedAcknowledgement;
                    isSDK(o: any): o is _74.IncentivizedAcknowledgementSDKType;
                    isAmino(o: any): o is _74.IncentivizedAcknowledgementAmino;
                    encode(message: _74.IncentivizedAcknowledgement, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.IncentivizedAcknowledgement;
                    fromPartial(object: Partial<_74.IncentivizedAcknowledgement>): _74.IncentivizedAcknowledgement;
                    fromAmino(object: _74.IncentivizedAcknowledgementAmino): _74.IncentivizedAcknowledgement;
                    toAmino(message: _74.IncentivizedAcknowledgement): _74.IncentivizedAcknowledgementAmino;
                    fromAminoMsg(object: _74.IncentivizedAcknowledgementAminoMsg): _74.IncentivizedAcknowledgement;
                    toAminoMsg(message: _74.IncentivizedAcknowledgement): _74.IncentivizedAcknowledgementAminoMsg;
                    fromProtoMsg(message: _74.IncentivizedAcknowledgementProtoMsg): _74.IncentivizedAcknowledgement;
                    toProto(message: _74.IncentivizedAcknowledgement): Uint8Array;
                    toProtoMsg(message: _74.IncentivizedAcknowledgement): _74.IncentivizedAcknowledgementProtoMsg;
                };
            };
        }
        namespace interchain_accounts {
            namespace controller {
                const v1: {
                    MsgClientImpl: typeof _318.MsgClientImpl;
                    createClientImpl: (rpc: import("../helpers").Rpc) => _318.MsgClientImpl;
                    QueryClientImpl: typeof _310.QueryClientImpl;
                    createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                        interchainAccount(request: _81.QueryInterchainAccountRequest): Promise<_81.QueryInterchainAccountResponse>;
                        params(request?: _81.QueryParamsRequest): Promise<_81.QueryParamsResponse>;
                    };
                    LCDQueryClient: typeof _302.LCDQueryClient;
                    registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                    load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                    MessageComposer: {
                        encoded: {
                            registerInterchainAccount(value: _82.MsgRegisterInterchainAccount): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                            sendTx(value: _82.MsgSendTx): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                            updateParams(value: _82.MsgUpdateParams): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                        };
                        withTypeUrl: {
                            registerInterchainAccount(value: _82.MsgRegisterInterchainAccount): {
                                typeUrl: string;
                                value: _82.MsgRegisterInterchainAccount;
                            };
                            sendTx(value: _82.MsgSendTx): {
                                typeUrl: string;
                                value: _82.MsgSendTx;
                            };
                            updateParams(value: _82.MsgUpdateParams): {
                                typeUrl: string;
                                value: _82.MsgUpdateParams;
                            };
                        };
                        fromPartial: {
                            registerInterchainAccount(value: _82.MsgRegisterInterchainAccount): {
                                typeUrl: string;
                                value: _82.MsgRegisterInterchainAccount;
                            };
                            sendTx(value: _82.MsgSendTx): {
                                typeUrl: string;
                                value: _82.MsgSendTx;
                            };
                            updateParams(value: _82.MsgUpdateParams): {
                                typeUrl: string;
                                value: _82.MsgUpdateParams;
                            };
                        };
                    };
                    AminoConverter: {
                        "/ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount": {
                            aminoType: string;
                            toAmino: (message: _82.MsgRegisterInterchainAccount) => _82.MsgRegisterInterchainAccountAmino;
                            fromAmino: (object: _82.MsgRegisterInterchainAccountAmino) => _82.MsgRegisterInterchainAccount;
                        };
                        "/ibc.applications.interchain_accounts.controller.v1.MsgSendTx": {
                            aminoType: string;
                            toAmino: (message: _82.MsgSendTx) => _82.MsgSendTxAmino;
                            fromAmino: (object: _82.MsgSendTxAmino) => _82.MsgSendTx;
                        };
                        "/ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams": {
                            aminoType: string;
                            toAmino: (message: _82.MsgUpdateParams) => _82.MsgUpdateParamsAmino;
                            fromAmino: (object: _82.MsgUpdateParamsAmino) => _82.MsgUpdateParams;
                        };
                    };
                    MsgRegisterInterchainAccount: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _82.MsgRegisterInterchainAccount;
                        isSDK(o: any): o is _82.MsgRegisterInterchainAccountSDKType;
                        isAmino(o: any): o is _82.MsgRegisterInterchainAccountAmino;
                        encode(message: _82.MsgRegisterInterchainAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.MsgRegisterInterchainAccount;
                        fromPartial(object: Partial<_82.MsgRegisterInterchainAccount>): _82.MsgRegisterInterchainAccount;
                        fromAmino(object: _82.MsgRegisterInterchainAccountAmino): _82.MsgRegisterInterchainAccount;
                        toAmino(message: _82.MsgRegisterInterchainAccount): _82.MsgRegisterInterchainAccountAmino;
                        fromAminoMsg(object: _82.MsgRegisterInterchainAccountAminoMsg): _82.MsgRegisterInterchainAccount;
                        toAminoMsg(message: _82.MsgRegisterInterchainAccount): _82.MsgRegisterInterchainAccountAminoMsg;
                        fromProtoMsg(message: _82.MsgRegisterInterchainAccountProtoMsg): _82.MsgRegisterInterchainAccount;
                        toProto(message: _82.MsgRegisterInterchainAccount): Uint8Array;
                        toProtoMsg(message: _82.MsgRegisterInterchainAccount): _82.MsgRegisterInterchainAccountProtoMsg;
                    };
                    MsgRegisterInterchainAccountResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _82.MsgRegisterInterchainAccountResponse;
                        isSDK(o: any): o is _82.MsgRegisterInterchainAccountResponseSDKType;
                        isAmino(o: any): o is _82.MsgRegisterInterchainAccountResponseAmino;
                        encode(message: _82.MsgRegisterInterchainAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.MsgRegisterInterchainAccountResponse;
                        fromPartial(object: Partial<_82.MsgRegisterInterchainAccountResponse>): _82.MsgRegisterInterchainAccountResponse;
                        fromAmino(object: _82.MsgRegisterInterchainAccountResponseAmino): _82.MsgRegisterInterchainAccountResponse;
                        toAmino(message: _82.MsgRegisterInterchainAccountResponse): _82.MsgRegisterInterchainAccountResponseAmino;
                        fromAminoMsg(object: _82.MsgRegisterInterchainAccountResponseAminoMsg): _82.MsgRegisterInterchainAccountResponse;
                        toAminoMsg(message: _82.MsgRegisterInterchainAccountResponse): _82.MsgRegisterInterchainAccountResponseAminoMsg;
                        fromProtoMsg(message: _82.MsgRegisterInterchainAccountResponseProtoMsg): _82.MsgRegisterInterchainAccountResponse;
                        toProto(message: _82.MsgRegisterInterchainAccountResponse): Uint8Array;
                        toProtoMsg(message: _82.MsgRegisterInterchainAccountResponse): _82.MsgRegisterInterchainAccountResponseProtoMsg;
                    };
                    MsgSendTx: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _82.MsgSendTx;
                        isSDK(o: any): o is _82.MsgSendTxSDKType;
                        isAmino(o: any): o is _82.MsgSendTxAmino;
                        encode(message: _82.MsgSendTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.MsgSendTx;
                        fromPartial(object: Partial<_82.MsgSendTx>): _82.MsgSendTx;
                        fromAmino(object: _82.MsgSendTxAmino): _82.MsgSendTx;
                        toAmino(message: _82.MsgSendTx): _82.MsgSendTxAmino;
                        fromAminoMsg(object: _82.MsgSendTxAminoMsg): _82.MsgSendTx;
                        toAminoMsg(message: _82.MsgSendTx): _82.MsgSendTxAminoMsg;
                        fromProtoMsg(message: _82.MsgSendTxProtoMsg): _82.MsgSendTx;
                        toProto(message: _82.MsgSendTx): Uint8Array;
                        toProtoMsg(message: _82.MsgSendTx): _82.MsgSendTxProtoMsg;
                    };
                    MsgSendTxResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _82.MsgSendTxResponse;
                        isSDK(o: any): o is _82.MsgSendTxResponseSDKType;
                        isAmino(o: any): o is _82.MsgSendTxResponseAmino;
                        encode(message: _82.MsgSendTxResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.MsgSendTxResponse;
                        fromPartial(object: Partial<_82.MsgSendTxResponse>): _82.MsgSendTxResponse;
                        fromAmino(object: _82.MsgSendTxResponseAmino): _82.MsgSendTxResponse;
                        toAmino(message: _82.MsgSendTxResponse): _82.MsgSendTxResponseAmino;
                        fromAminoMsg(object: _82.MsgSendTxResponseAminoMsg): _82.MsgSendTxResponse;
                        toAminoMsg(message: _82.MsgSendTxResponse): _82.MsgSendTxResponseAminoMsg;
                        fromProtoMsg(message: _82.MsgSendTxResponseProtoMsg): _82.MsgSendTxResponse;
                        toProto(message: _82.MsgSendTxResponse): Uint8Array;
                        toProtoMsg(message: _82.MsgSendTxResponse): _82.MsgSendTxResponseProtoMsg;
                    };
                    MsgUpdateParams: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _82.MsgUpdateParams;
                        isSDK(o: any): o is _82.MsgUpdateParamsSDKType;
                        isAmino(o: any): o is _82.MsgUpdateParamsAmino;
                        encode(message: _82.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.MsgUpdateParams;
                        fromPartial(object: Partial<_82.MsgUpdateParams>): _82.MsgUpdateParams;
                        fromAmino(object: _82.MsgUpdateParamsAmino): _82.MsgUpdateParams;
                        toAmino(message: _82.MsgUpdateParams): _82.MsgUpdateParamsAmino;
                        fromAminoMsg(object: _82.MsgUpdateParamsAminoMsg): _82.MsgUpdateParams;
                        toAminoMsg(message: _82.MsgUpdateParams): _82.MsgUpdateParamsAminoMsg;
                        fromProtoMsg(message: _82.MsgUpdateParamsProtoMsg): _82.MsgUpdateParams;
                        toProto(message: _82.MsgUpdateParams): Uint8Array;
                        toProtoMsg(message: _82.MsgUpdateParams): _82.MsgUpdateParamsProtoMsg;
                    };
                    MsgUpdateParamsResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _82.MsgUpdateParamsResponse;
                        isSDK(o: any): o is _82.MsgUpdateParamsResponseSDKType;
                        isAmino(o: any): o is _82.MsgUpdateParamsResponseAmino;
                        encode(_: _82.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.MsgUpdateParamsResponse;
                        fromPartial(_: Partial<_82.MsgUpdateParamsResponse>): _82.MsgUpdateParamsResponse;
                        fromAmino(_: _82.MsgUpdateParamsResponseAmino): _82.MsgUpdateParamsResponse;
                        toAmino(_: _82.MsgUpdateParamsResponse): _82.MsgUpdateParamsResponseAmino;
                        fromAminoMsg(object: _82.MsgUpdateParamsResponseAminoMsg): _82.MsgUpdateParamsResponse;
                        toAminoMsg(message: _82.MsgUpdateParamsResponse): _82.MsgUpdateParamsResponseAminoMsg;
                        fromProtoMsg(message: _82.MsgUpdateParamsResponseProtoMsg): _82.MsgUpdateParamsResponse;
                        toProto(message: _82.MsgUpdateParamsResponse): Uint8Array;
                        toProtoMsg(message: _82.MsgUpdateParamsResponse): _82.MsgUpdateParamsResponseProtoMsg;
                    };
                    QueryInterchainAccountRequest: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _81.QueryInterchainAccountRequest;
                        isSDK(o: any): o is _81.QueryInterchainAccountRequestSDKType;
                        isAmino(o: any): o is _81.QueryInterchainAccountRequestAmino;
                        encode(message: _81.QueryInterchainAccountRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.QueryInterchainAccountRequest;
                        fromPartial(object: Partial<_81.QueryInterchainAccountRequest>): _81.QueryInterchainAccountRequest;
                        fromAmino(object: _81.QueryInterchainAccountRequestAmino): _81.QueryInterchainAccountRequest;
                        toAmino(message: _81.QueryInterchainAccountRequest): _81.QueryInterchainAccountRequestAmino;
                        fromAminoMsg(object: _81.QueryInterchainAccountRequestAminoMsg): _81.QueryInterchainAccountRequest;
                        toAminoMsg(message: _81.QueryInterchainAccountRequest): _81.QueryInterchainAccountRequestAminoMsg;
                        fromProtoMsg(message: _81.QueryInterchainAccountRequestProtoMsg): _81.QueryInterchainAccountRequest;
                        toProto(message: _81.QueryInterchainAccountRequest): Uint8Array;
                        toProtoMsg(message: _81.QueryInterchainAccountRequest): _81.QueryInterchainAccountRequestProtoMsg;
                    };
                    QueryInterchainAccountResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _81.QueryInterchainAccountResponse;
                        isSDK(o: any): o is _81.QueryInterchainAccountResponseSDKType;
                        isAmino(o: any): o is _81.QueryInterchainAccountResponseAmino;
                        encode(message: _81.QueryInterchainAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.QueryInterchainAccountResponse;
                        fromPartial(object: Partial<_81.QueryInterchainAccountResponse>): _81.QueryInterchainAccountResponse;
                        fromAmino(object: _81.QueryInterchainAccountResponseAmino): _81.QueryInterchainAccountResponse;
                        toAmino(message: _81.QueryInterchainAccountResponse): _81.QueryInterchainAccountResponseAmino;
                        fromAminoMsg(object: _81.QueryInterchainAccountResponseAminoMsg): _81.QueryInterchainAccountResponse;
                        toAminoMsg(message: _81.QueryInterchainAccountResponse): _81.QueryInterchainAccountResponseAminoMsg;
                        fromProtoMsg(message: _81.QueryInterchainAccountResponseProtoMsg): _81.QueryInterchainAccountResponse;
                        toProto(message: _81.QueryInterchainAccountResponse): Uint8Array;
                        toProtoMsg(message: _81.QueryInterchainAccountResponse): _81.QueryInterchainAccountResponseProtoMsg;
                    };
                    QueryParamsRequest: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _81.QueryParamsRequest;
                        isSDK(o: any): o is _81.QueryParamsRequestSDKType;
                        isAmino(o: any): o is _81.QueryParamsRequestAmino;
                        encode(_: _81.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.QueryParamsRequest;
                        fromPartial(_: Partial<_81.QueryParamsRequest>): _81.QueryParamsRequest;
                        fromAmino(_: _81.QueryParamsRequestAmino): _81.QueryParamsRequest;
                        toAmino(_: _81.QueryParamsRequest): _81.QueryParamsRequestAmino;
                        fromAminoMsg(object: _81.QueryParamsRequestAminoMsg): _81.QueryParamsRequest;
                        toAminoMsg(message: _81.QueryParamsRequest): _81.QueryParamsRequestAminoMsg;
                        fromProtoMsg(message: _81.QueryParamsRequestProtoMsg): _81.QueryParamsRequest;
                        toProto(message: _81.QueryParamsRequest): Uint8Array;
                        toProtoMsg(message: _81.QueryParamsRequest): _81.QueryParamsRequestProtoMsg;
                    };
                    QueryParamsResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _81.QueryParamsResponse;
                        isSDK(o: any): o is _81.QueryParamsResponseSDKType;
                        isAmino(o: any): o is _81.QueryParamsResponseAmino;
                        encode(message: _81.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.QueryParamsResponse;
                        fromPartial(object: Partial<_81.QueryParamsResponse>): _81.QueryParamsResponse;
                        fromAmino(object: _81.QueryParamsResponseAmino): _81.QueryParamsResponse;
                        toAmino(message: _81.QueryParamsResponse): _81.QueryParamsResponseAmino;
                        fromAminoMsg(object: _81.QueryParamsResponseAminoMsg): _81.QueryParamsResponse;
                        toAminoMsg(message: _81.QueryParamsResponse): _81.QueryParamsResponseAminoMsg;
                        fromProtoMsg(message: _81.QueryParamsResponseProtoMsg): _81.QueryParamsResponse;
                        toProto(message: _81.QueryParamsResponse): Uint8Array;
                        toProtoMsg(message: _81.QueryParamsResponse): _81.QueryParamsResponseProtoMsg;
                    };
                    Params: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _80.Params;
                        isSDK(o: any): o is _80.ParamsSDKType;
                        isAmino(o: any): o is _80.ParamsAmino;
                        encode(message: _80.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _80.Params;
                        fromPartial(object: Partial<_80.Params>): _80.Params;
                        fromAmino(object: _80.ParamsAmino): _80.Params;
                        toAmino(message: _80.Params): _80.ParamsAmino;
                        fromAminoMsg(object: _80.ParamsAminoMsg): _80.Params;
                        toAminoMsg(message: _80.Params): _80.ParamsAminoMsg;
                        fromProtoMsg(message: _80.ParamsProtoMsg): _80.Params;
                        toProto(message: _80.Params): Uint8Array;
                        toProtoMsg(message: _80.Params): _80.ParamsProtoMsg;
                    };
                };
            }
            namespace genesis {
                const v1: {
                    GenesisState: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _83.GenesisState;
                        isSDK(o: any): o is _83.GenesisStateSDKType;
                        isAmino(o: any): o is _83.GenesisStateAmino;
                        encode(message: _83.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.GenesisState;
                        fromPartial(object: Partial<_83.GenesisState>): _83.GenesisState;
                        fromAmino(object: _83.GenesisStateAmino): _83.GenesisState;
                        toAmino(message: _83.GenesisState): _83.GenesisStateAmino;
                        fromAminoMsg(object: _83.GenesisStateAminoMsg): _83.GenesisState;
                        toAminoMsg(message: _83.GenesisState): _83.GenesisStateAminoMsg;
                        fromProtoMsg(message: _83.GenesisStateProtoMsg): _83.GenesisState;
                        toProto(message: _83.GenesisState): Uint8Array;
                        toProtoMsg(message: _83.GenesisState): _83.GenesisStateProtoMsg;
                    };
                    ControllerGenesisState: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _83.ControllerGenesisState;
                        isSDK(o: any): o is _83.ControllerGenesisStateSDKType;
                        isAmino(o: any): o is _83.ControllerGenesisStateAmino;
                        encode(message: _83.ControllerGenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ControllerGenesisState;
                        fromPartial(object: Partial<_83.ControllerGenesisState>): _83.ControllerGenesisState;
                        fromAmino(object: _83.ControllerGenesisStateAmino): _83.ControllerGenesisState;
                        toAmino(message: _83.ControllerGenesisState): _83.ControllerGenesisStateAmino;
                        fromAminoMsg(object: _83.ControllerGenesisStateAminoMsg): _83.ControllerGenesisState;
                        toAminoMsg(message: _83.ControllerGenesisState): _83.ControllerGenesisStateAminoMsg;
                        fromProtoMsg(message: _83.ControllerGenesisStateProtoMsg): _83.ControllerGenesisState;
                        toProto(message: _83.ControllerGenesisState): Uint8Array;
                        toProtoMsg(message: _83.ControllerGenesisState): _83.ControllerGenesisStateProtoMsg;
                    };
                    HostGenesisState: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _83.HostGenesisState;
                        isSDK(o: any): o is _83.HostGenesisStateSDKType;
                        isAmino(o: any): o is _83.HostGenesisStateAmino;
                        encode(message: _83.HostGenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.HostGenesisState;
                        fromPartial(object: Partial<_83.HostGenesisState>): _83.HostGenesisState;
                        fromAmino(object: _83.HostGenesisStateAmino): _83.HostGenesisState;
                        toAmino(message: _83.HostGenesisState): _83.HostGenesisStateAmino;
                        fromAminoMsg(object: _83.HostGenesisStateAminoMsg): _83.HostGenesisState;
                        toAminoMsg(message: _83.HostGenesisState): _83.HostGenesisStateAminoMsg;
                        fromProtoMsg(message: _83.HostGenesisStateProtoMsg): _83.HostGenesisState;
                        toProto(message: _83.HostGenesisState): Uint8Array;
                        toProtoMsg(message: _83.HostGenesisState): _83.HostGenesisStateProtoMsg;
                    };
                    ActiveChannel: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _83.ActiveChannel;
                        isSDK(o: any): o is _83.ActiveChannelSDKType;
                        isAmino(o: any): o is _83.ActiveChannelAmino;
                        encode(message: _83.ActiveChannel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.ActiveChannel;
                        fromPartial(object: Partial<_83.ActiveChannel>): _83.ActiveChannel;
                        fromAmino(object: _83.ActiveChannelAmino): _83.ActiveChannel;
                        toAmino(message: _83.ActiveChannel): _83.ActiveChannelAmino;
                        fromAminoMsg(object: _83.ActiveChannelAminoMsg): _83.ActiveChannel;
                        toAminoMsg(message: _83.ActiveChannel): _83.ActiveChannelAminoMsg;
                        fromProtoMsg(message: _83.ActiveChannelProtoMsg): _83.ActiveChannel;
                        toProto(message: _83.ActiveChannel): Uint8Array;
                        toProtoMsg(message: _83.ActiveChannel): _83.ActiveChannelProtoMsg;
                    };
                    RegisteredInterchainAccount: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _83.RegisteredInterchainAccount;
                        isSDK(o: any): o is _83.RegisteredInterchainAccountSDKType;
                        isAmino(o: any): o is _83.RegisteredInterchainAccountAmino;
                        encode(message: _83.RegisteredInterchainAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.RegisteredInterchainAccount;
                        fromPartial(object: Partial<_83.RegisteredInterchainAccount>): _83.RegisteredInterchainAccount;
                        fromAmino(object: _83.RegisteredInterchainAccountAmino): _83.RegisteredInterchainAccount;
                        toAmino(message: _83.RegisteredInterchainAccount): _83.RegisteredInterchainAccountAmino;
                        fromAminoMsg(object: _83.RegisteredInterchainAccountAminoMsg): _83.RegisteredInterchainAccount;
                        toAminoMsg(message: _83.RegisteredInterchainAccount): _83.RegisteredInterchainAccountAminoMsg;
                        fromProtoMsg(message: _83.RegisteredInterchainAccountProtoMsg): _83.RegisteredInterchainAccount;
                        toProto(message: _83.RegisteredInterchainAccount): Uint8Array;
                        toProtoMsg(message: _83.RegisteredInterchainAccount): _83.RegisteredInterchainAccountProtoMsg;
                    };
                };
            }
            namespace host {
                const v1: {
                    MsgClientImpl: typeof _319.MsgClientImpl;
                    createClientImpl: (rpc: import("../helpers").Rpc) => _319.MsgClientImpl;
                    QueryClientImpl: typeof _311.QueryClientImpl;
                    createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                        params(request?: _85.QueryParamsRequest): Promise<_85.QueryParamsResponse>;
                    };
                    LCDQueryClient: typeof _303.LCDQueryClient;
                    registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                    load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                    MessageComposer: {
                        encoded: {
                            updateParams(value: _86.MsgUpdateParams): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                            moduleQuerySafe(value: _86.MsgModuleQuerySafe): {
                                typeUrl: string;
                                value: Uint8Array;
                            };
                        };
                        withTypeUrl: {
                            updateParams(value: _86.MsgUpdateParams): {
                                typeUrl: string;
                                value: _86.MsgUpdateParams;
                            };
                            moduleQuerySafe(value: _86.MsgModuleQuerySafe): {
                                typeUrl: string;
                                value: _86.MsgModuleQuerySafe;
                            };
                        };
                        fromPartial: {
                            updateParams(value: _86.MsgUpdateParams): {
                                typeUrl: string;
                                value: _86.MsgUpdateParams;
                            };
                            moduleQuerySafe(value: _86.MsgModuleQuerySafe): {
                                typeUrl: string;
                                value: _86.MsgModuleQuerySafe;
                            };
                        };
                    };
                    AminoConverter: {
                        "/ibc.applications.interchain_accounts.host.v1.MsgUpdateParams": {
                            aminoType: string;
                            toAmino: (message: _86.MsgUpdateParams) => _86.MsgUpdateParamsAmino;
                            fromAmino: (object: _86.MsgUpdateParamsAmino) => _86.MsgUpdateParams;
                        };
                        "/ibc.applications.interchain_accounts.host.v1.MsgModuleQuerySafe": {
                            aminoType: string;
                            toAmino: (message: _86.MsgModuleQuerySafe) => _86.MsgModuleQuerySafeAmino;
                            fromAmino: (object: _86.MsgModuleQuerySafeAmino) => _86.MsgModuleQuerySafe;
                        };
                    };
                    MsgUpdateParams: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _86.MsgUpdateParams;
                        isSDK(o: any): o is _86.MsgUpdateParamsSDKType;
                        isAmino(o: any): o is _86.MsgUpdateParamsAmino;
                        encode(message: _86.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.MsgUpdateParams;
                        fromPartial(object: Partial<_86.MsgUpdateParams>): _86.MsgUpdateParams;
                        fromAmino(object: _86.MsgUpdateParamsAmino): _86.MsgUpdateParams;
                        toAmino(message: _86.MsgUpdateParams): _86.MsgUpdateParamsAmino;
                        fromAminoMsg(object: _86.MsgUpdateParamsAminoMsg): _86.MsgUpdateParams;
                        toAminoMsg(message: _86.MsgUpdateParams): _86.MsgUpdateParamsAminoMsg;
                        fromProtoMsg(message: _86.MsgUpdateParamsProtoMsg): _86.MsgUpdateParams;
                        toProto(message: _86.MsgUpdateParams): Uint8Array;
                        toProtoMsg(message: _86.MsgUpdateParams): _86.MsgUpdateParamsProtoMsg;
                    };
                    MsgUpdateParamsResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _86.MsgUpdateParamsResponse;
                        isSDK(o: any): o is _86.MsgUpdateParamsResponseSDKType;
                        isAmino(o: any): o is _86.MsgUpdateParamsResponseAmino;
                        encode(_: _86.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.MsgUpdateParamsResponse;
                        fromPartial(_: Partial<_86.MsgUpdateParamsResponse>): _86.MsgUpdateParamsResponse;
                        fromAmino(_: _86.MsgUpdateParamsResponseAmino): _86.MsgUpdateParamsResponse;
                        toAmino(_: _86.MsgUpdateParamsResponse): _86.MsgUpdateParamsResponseAmino;
                        fromAminoMsg(object: _86.MsgUpdateParamsResponseAminoMsg): _86.MsgUpdateParamsResponse;
                        toAminoMsg(message: _86.MsgUpdateParamsResponse): _86.MsgUpdateParamsResponseAminoMsg;
                        fromProtoMsg(message: _86.MsgUpdateParamsResponseProtoMsg): _86.MsgUpdateParamsResponse;
                        toProto(message: _86.MsgUpdateParamsResponse): Uint8Array;
                        toProtoMsg(message: _86.MsgUpdateParamsResponse): _86.MsgUpdateParamsResponseProtoMsg;
                    };
                    MsgModuleQuerySafe: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _86.MsgModuleQuerySafe;
                        isSDK(o: any): o is _86.MsgModuleQuerySafeSDKType;
                        isAmino(o: any): o is _86.MsgModuleQuerySafeAmino;
                        encode(message: _86.MsgModuleQuerySafe, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.MsgModuleQuerySafe;
                        fromPartial(object: Partial<_86.MsgModuleQuerySafe>): _86.MsgModuleQuerySafe;
                        fromAmino(object: _86.MsgModuleQuerySafeAmino): _86.MsgModuleQuerySafe;
                        toAmino(message: _86.MsgModuleQuerySafe): _86.MsgModuleQuerySafeAmino;
                        fromAminoMsg(object: _86.MsgModuleQuerySafeAminoMsg): _86.MsgModuleQuerySafe;
                        toAminoMsg(message: _86.MsgModuleQuerySafe): _86.MsgModuleQuerySafeAminoMsg;
                        fromProtoMsg(message: _86.MsgModuleQuerySafeProtoMsg): _86.MsgModuleQuerySafe;
                        toProto(message: _86.MsgModuleQuerySafe): Uint8Array;
                        toProtoMsg(message: _86.MsgModuleQuerySafe): _86.MsgModuleQuerySafeProtoMsg;
                    };
                    MsgModuleQuerySafeResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _86.MsgModuleQuerySafeResponse;
                        isSDK(o: any): o is _86.MsgModuleQuerySafeResponseSDKType;
                        isAmino(o: any): o is _86.MsgModuleQuerySafeResponseAmino;
                        encode(message: _86.MsgModuleQuerySafeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.MsgModuleQuerySafeResponse;
                        fromPartial(object: Partial<_86.MsgModuleQuerySafeResponse>): _86.MsgModuleQuerySafeResponse;
                        fromAmino(object: _86.MsgModuleQuerySafeResponseAmino): _86.MsgModuleQuerySafeResponse;
                        toAmino(message: _86.MsgModuleQuerySafeResponse): _86.MsgModuleQuerySafeResponseAmino;
                        fromAminoMsg(object: _86.MsgModuleQuerySafeResponseAminoMsg): _86.MsgModuleQuerySafeResponse;
                        toAminoMsg(message: _86.MsgModuleQuerySafeResponse): _86.MsgModuleQuerySafeResponseAminoMsg;
                        fromProtoMsg(message: _86.MsgModuleQuerySafeResponseProtoMsg): _86.MsgModuleQuerySafeResponse;
                        toProto(message: _86.MsgModuleQuerySafeResponse): Uint8Array;
                        toProtoMsg(message: _86.MsgModuleQuerySafeResponse): _86.MsgModuleQuerySafeResponseProtoMsg;
                    };
                    QueryParamsRequest: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _85.QueryParamsRequest;
                        isSDK(o: any): o is _85.QueryParamsRequestSDKType;
                        isAmino(o: any): o is _85.QueryParamsRequestAmino;
                        encode(_: _85.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.QueryParamsRequest;
                        fromPartial(_: Partial<_85.QueryParamsRequest>): _85.QueryParamsRequest;
                        fromAmino(_: _85.QueryParamsRequestAmino): _85.QueryParamsRequest;
                        toAmino(_: _85.QueryParamsRequest): _85.QueryParamsRequestAmino;
                        fromAminoMsg(object: _85.QueryParamsRequestAminoMsg): _85.QueryParamsRequest;
                        toAminoMsg(message: _85.QueryParamsRequest): _85.QueryParamsRequestAminoMsg;
                        fromProtoMsg(message: _85.QueryParamsRequestProtoMsg): _85.QueryParamsRequest;
                        toProto(message: _85.QueryParamsRequest): Uint8Array;
                        toProtoMsg(message: _85.QueryParamsRequest): _85.QueryParamsRequestProtoMsg;
                    };
                    QueryParamsResponse: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _85.QueryParamsResponse;
                        isSDK(o: any): o is _85.QueryParamsResponseSDKType;
                        isAmino(o: any): o is _85.QueryParamsResponseAmino;
                        encode(message: _85.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.QueryParamsResponse;
                        fromPartial(object: Partial<_85.QueryParamsResponse>): _85.QueryParamsResponse;
                        fromAmino(object: _85.QueryParamsResponseAmino): _85.QueryParamsResponse;
                        toAmino(message: _85.QueryParamsResponse): _85.QueryParamsResponseAmino;
                        fromAminoMsg(object: _85.QueryParamsResponseAminoMsg): _85.QueryParamsResponse;
                        toAminoMsg(message: _85.QueryParamsResponse): _85.QueryParamsResponseAminoMsg;
                        fromProtoMsg(message: _85.QueryParamsResponseProtoMsg): _85.QueryParamsResponse;
                        toProto(message: _85.QueryParamsResponse): Uint8Array;
                        toProtoMsg(message: _85.QueryParamsResponse): _85.QueryParamsResponseProtoMsg;
                    };
                    Params: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _84.Params;
                        isSDK(o: any): o is _84.ParamsSDKType;
                        isAmino(o: any): o is _84.ParamsAmino;
                        encode(message: _84.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.Params;
                        fromPartial(object: Partial<_84.Params>): _84.Params;
                        fromAmino(object: _84.ParamsAmino): _84.Params;
                        toAmino(message: _84.Params): _84.ParamsAmino;
                        fromAminoMsg(object: _84.ParamsAminoMsg): _84.Params;
                        toAminoMsg(message: _84.Params): _84.ParamsAminoMsg;
                        fromProtoMsg(message: _84.ParamsProtoMsg): _84.Params;
                        toProto(message: _84.Params): Uint8Array;
                        toProtoMsg(message: _84.Params): _84.ParamsProtoMsg;
                    };
                    QueryRequest: {
                        typeUrl: string;
                        aminoType: string;
                        is(o: any): o is _84.QueryRequest;
                        isSDK(o: any): o is _84.QueryRequestSDKType;
                        isAmino(o: any): o is _84.QueryRequestAmino;
                        encode(message: _84.QueryRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.QueryRequest;
                        fromPartial(object: Partial<_84.QueryRequest>): _84.QueryRequest;
                        fromAmino(object: _84.QueryRequestAmino): _84.QueryRequest;
                        toAmino(message: _84.QueryRequest): _84.QueryRequestAmino;
                        fromAminoMsg(object: _84.QueryRequestAminoMsg): _84.QueryRequest;
                        toAminoMsg(message: _84.QueryRequest): _84.QueryRequestAminoMsg;
                        fromProtoMsg(message: _84.QueryRequestProtoMsg): _84.QueryRequest;
                        toProto(message: _84.QueryRequest): Uint8Array;
                        toProtoMsg(message: _84.QueryRequest): _84.QueryRequestProtoMsg;
                    };
                };
            }
            const v1: {
                typeFromJSON(object: any): _89.Type;
                typeToJSON(object: _89.Type): string;
                Type: typeof _89.Type;
                TypeSDKType: typeof _89.Type;
                TypeAmino: typeof _89.Type;
                InterchainAccountPacketData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _89.InterchainAccountPacketData;
                    isSDK(o: any): o is _89.InterchainAccountPacketDataSDKType;
                    isAmino(o: any): o is _89.InterchainAccountPacketDataAmino;
                    encode(message: _89.InterchainAccountPacketData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.InterchainAccountPacketData;
                    fromPartial(object: Partial<_89.InterchainAccountPacketData>): _89.InterchainAccountPacketData;
                    fromAmino(object: _89.InterchainAccountPacketDataAmino): _89.InterchainAccountPacketData;
                    toAmino(message: _89.InterchainAccountPacketData): _89.InterchainAccountPacketDataAmino;
                    fromAminoMsg(object: _89.InterchainAccountPacketDataAminoMsg): _89.InterchainAccountPacketData;
                    toAminoMsg(message: _89.InterchainAccountPacketData): _89.InterchainAccountPacketDataAminoMsg;
                    fromProtoMsg(message: _89.InterchainAccountPacketDataProtoMsg): _89.InterchainAccountPacketData;
                    toProto(message: _89.InterchainAccountPacketData): Uint8Array;
                    toProtoMsg(message: _89.InterchainAccountPacketData): _89.InterchainAccountPacketDataProtoMsg;
                };
                CosmosTx: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _89.CosmosTx;
                    isSDK(o: any): o is _89.CosmosTxSDKType;
                    isAmino(o: any): o is _89.CosmosTxAmino;
                    encode(message: _89.CosmosTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.CosmosTx;
                    fromPartial(object: Partial<_89.CosmosTx>): _89.CosmosTx;
                    fromAmino(object: _89.CosmosTxAmino): _89.CosmosTx;
                    toAmino(message: _89.CosmosTx): _89.CosmosTxAmino;
                    fromAminoMsg(object: _89.CosmosTxAminoMsg): _89.CosmosTx;
                    toAminoMsg(message: _89.CosmosTx): _89.CosmosTxAminoMsg;
                    fromProtoMsg(message: _89.CosmosTxProtoMsg): _89.CosmosTx;
                    toProto(message: _89.CosmosTx): Uint8Array;
                    toProtoMsg(message: _89.CosmosTx): _89.CosmosTxProtoMsg;
                };
                Metadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _88.Metadata;
                    isSDK(o: any): o is _88.MetadataSDKType;
                    isAmino(o: any): o is _88.MetadataAmino;
                    encode(message: _88.Metadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.Metadata;
                    fromPartial(object: Partial<_88.Metadata>): _88.Metadata;
                    fromAmino(object: _88.MetadataAmino): _88.Metadata;
                    toAmino(message: _88.Metadata): _88.MetadataAmino;
                    fromAminoMsg(object: _88.MetadataAminoMsg): _88.Metadata;
                    toAminoMsg(message: _88.Metadata): _88.MetadataAminoMsg;
                    fromProtoMsg(message: _88.MetadataProtoMsg): _88.Metadata;
                    toProto(message: _88.Metadata): Uint8Array;
                    toProtoMsg(message: _88.Metadata): _88.MetadataProtoMsg;
                };
                InterchainAccount: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _87.InterchainAccount;
                    isSDK(o: any): o is _87.InterchainAccountSDKType;
                    isAmino(o: any): o is _87.InterchainAccountAmino;
                    encode(message: _87.InterchainAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.InterchainAccount;
                    fromPartial(object: Partial<_87.InterchainAccount>): _87.InterchainAccount;
                    fromAmino(object: _87.InterchainAccountAmino): _87.InterchainAccount;
                    toAmino(message: _87.InterchainAccount): _87.InterchainAccountAmino;
                    fromAminoMsg(object: _87.InterchainAccountAminoMsg): _87.InterchainAccount;
                    toAminoMsg(message: _87.InterchainAccount): _87.InterchainAccountAminoMsg;
                    fromProtoMsg(message: _87.InterchainAccountProtoMsg): _87.InterchainAccount;
                    toProto(message: _87.InterchainAccount): Uint8Array;
                    toProtoMsg(message: _87.InterchainAccount): _87.InterchainAccountProtoMsg;
                };
            };
        }
        namespace transfer {
            const v1: {
                MsgClientImpl: typeof _320.MsgClientImpl;
                createClientImpl: (rpc: import("../helpers").Rpc) => _320.MsgClientImpl;
                QueryClientImpl: typeof _312.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    denomTraces(request?: _92.QueryDenomTracesRequest): Promise<_92.QueryDenomTracesResponse>;
                    denomTrace(request: _92.QueryDenomTraceRequest): Promise<_92.QueryDenomTraceResponse>;
                    params(request?: _92.QueryParamsRequest): Promise<_92.QueryParamsResponse>;
                    denomHash(request: _92.QueryDenomHashRequest): Promise<_92.QueryDenomHashResponse>;
                    escrowAddress(request: _92.QueryEscrowAddressRequest): Promise<_92.QueryEscrowAddressResponse>;
                    totalEscrowForDenom(request: _92.QueryTotalEscrowForDenomRequest): Promise<_92.QueryTotalEscrowForDenomResponse>;
                };
                LCDQueryClient: typeof _304.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        transfer(value: _94.MsgTransfer): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateParams(value: _94.MsgUpdateParams): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        transfer(value: _94.MsgTransfer): {
                            typeUrl: string;
                            value: _94.MsgTransfer;
                        };
                        updateParams(value: _94.MsgUpdateParams): {
                            typeUrl: string;
                            value: _94.MsgUpdateParams;
                        };
                    };
                    fromPartial: {
                        transfer(value: _94.MsgTransfer): {
                            typeUrl: string;
                            value: _94.MsgTransfer;
                        };
                        updateParams(value: _94.MsgUpdateParams): {
                            typeUrl: string;
                            value: _94.MsgUpdateParams;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.applications.transfer.v1.MsgTransfer": {
                        aminoType: string;
                        toAmino: (message: _94.MsgTransfer) => _94.MsgTransferAmino;
                        fromAmino: (object: _94.MsgTransferAmino) => _94.MsgTransfer;
                    };
                    "/ibc.applications.transfer.v1.MsgUpdateParams": {
                        aminoType: string;
                        toAmino: (message: _94.MsgUpdateParams) => _94.MsgUpdateParamsAmino;
                        fromAmino: (object: _94.MsgUpdateParamsAmino) => _94.MsgUpdateParams;
                    };
                };
                MsgTransfer: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _94.MsgTransfer;
                    isSDK(o: any): o is _94.MsgTransferSDKType;
                    isAmino(o: any): o is _94.MsgTransferAmino;
                    encode(message: _94.MsgTransfer, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _94.MsgTransfer;
                    fromPartial(object: Partial<_94.MsgTransfer>): _94.MsgTransfer;
                    fromAmino(object: _94.MsgTransferAmino): _94.MsgTransfer;
                    toAmino(message: _94.MsgTransfer): _94.MsgTransferAmino;
                    fromAminoMsg(object: _94.MsgTransferAminoMsg): _94.MsgTransfer;
                    toAminoMsg(message: _94.MsgTransfer): _94.MsgTransferAminoMsg;
                    fromProtoMsg(message: _94.MsgTransferProtoMsg): _94.MsgTransfer;
                    toProto(message: _94.MsgTransfer): Uint8Array;
                    toProtoMsg(message: _94.MsgTransfer): _94.MsgTransferProtoMsg;
                };
                MsgTransferResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _94.MsgTransferResponse;
                    isSDK(o: any): o is _94.MsgTransferResponseSDKType;
                    isAmino(o: any): o is _94.MsgTransferResponseAmino;
                    encode(message: _94.MsgTransferResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _94.MsgTransferResponse;
                    fromPartial(object: Partial<_94.MsgTransferResponse>): _94.MsgTransferResponse;
                    fromAmino(object: _94.MsgTransferResponseAmino): _94.MsgTransferResponse;
                    toAmino(message: _94.MsgTransferResponse): _94.MsgTransferResponseAmino;
                    fromAminoMsg(object: _94.MsgTransferResponseAminoMsg): _94.MsgTransferResponse;
                    toAminoMsg(message: _94.MsgTransferResponse): _94.MsgTransferResponseAminoMsg;
                    fromProtoMsg(message: _94.MsgTransferResponseProtoMsg): _94.MsgTransferResponse;
                    toProto(message: _94.MsgTransferResponse): Uint8Array;
                    toProtoMsg(message: _94.MsgTransferResponse): _94.MsgTransferResponseProtoMsg;
                };
                MsgUpdateParams: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _94.MsgUpdateParams;
                    isSDK(o: any): o is _94.MsgUpdateParamsSDKType;
                    isAmino(o: any): o is _94.MsgUpdateParamsAmino;
                    encode(message: _94.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _94.MsgUpdateParams;
                    fromPartial(object: Partial<_94.MsgUpdateParams>): _94.MsgUpdateParams;
                    fromAmino(object: _94.MsgUpdateParamsAmino): _94.MsgUpdateParams;
                    toAmino(message: _94.MsgUpdateParams): _94.MsgUpdateParamsAmino;
                    fromAminoMsg(object: _94.MsgUpdateParamsAminoMsg): _94.MsgUpdateParams;
                    toAminoMsg(message: _94.MsgUpdateParams): _94.MsgUpdateParamsAminoMsg;
                    fromProtoMsg(message: _94.MsgUpdateParamsProtoMsg): _94.MsgUpdateParams;
                    toProto(message: _94.MsgUpdateParams): Uint8Array;
                    toProtoMsg(message: _94.MsgUpdateParams): _94.MsgUpdateParamsProtoMsg;
                };
                MsgUpdateParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _94.MsgUpdateParamsResponse;
                    isSDK(o: any): o is _94.MsgUpdateParamsResponseSDKType;
                    isAmino(o: any): o is _94.MsgUpdateParamsResponseAmino;
                    encode(_: _94.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _94.MsgUpdateParamsResponse;
                    fromPartial(_: Partial<_94.MsgUpdateParamsResponse>): _94.MsgUpdateParamsResponse;
                    fromAmino(_: _94.MsgUpdateParamsResponseAmino): _94.MsgUpdateParamsResponse;
                    toAmino(_: _94.MsgUpdateParamsResponse): _94.MsgUpdateParamsResponseAmino;
                    fromAminoMsg(object: _94.MsgUpdateParamsResponseAminoMsg): _94.MsgUpdateParamsResponse;
                    toAminoMsg(message: _94.MsgUpdateParamsResponse): _94.MsgUpdateParamsResponseAminoMsg;
                    fromProtoMsg(message: _94.MsgUpdateParamsResponseProtoMsg): _94.MsgUpdateParamsResponse;
                    toProto(message: _94.MsgUpdateParamsResponse): Uint8Array;
                    toProtoMsg(message: _94.MsgUpdateParamsResponse): _94.MsgUpdateParamsResponseProtoMsg;
                };
                DenomTrace: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _93.DenomTrace;
                    isSDK(o: any): o is _93.DenomTraceSDKType;
                    isAmino(o: any): o is _93.DenomTraceAmino;
                    encode(message: _93.DenomTrace, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _93.DenomTrace;
                    fromPartial(object: Partial<_93.DenomTrace>): _93.DenomTrace;
                    fromAmino(object: _93.DenomTraceAmino): _93.DenomTrace;
                    toAmino(message: _93.DenomTrace): _93.DenomTraceAmino;
                    fromAminoMsg(object: _93.DenomTraceAminoMsg): _93.DenomTrace;
                    toAminoMsg(message: _93.DenomTrace): _93.DenomTraceAminoMsg;
                    fromProtoMsg(message: _93.DenomTraceProtoMsg): _93.DenomTrace;
                    toProto(message: _93.DenomTrace): Uint8Array;
                    toProtoMsg(message: _93.DenomTrace): _93.DenomTraceProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _93.Params;
                    isSDK(o: any): o is _93.ParamsSDKType;
                    isAmino(o: any): o is _93.ParamsAmino;
                    encode(message: _93.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _93.Params;
                    fromPartial(object: Partial<_93.Params>): _93.Params;
                    fromAmino(object: _93.ParamsAmino): _93.Params;
                    toAmino(message: _93.Params): _93.ParamsAmino;
                    fromAminoMsg(object: _93.ParamsAminoMsg): _93.Params;
                    toAminoMsg(message: _93.Params): _93.ParamsAminoMsg;
                    fromProtoMsg(message: _93.ParamsProtoMsg): _93.Params;
                    toProto(message: _93.Params): Uint8Array;
                    toProtoMsg(message: _93.Params): _93.ParamsProtoMsg;
                };
                QueryDenomTraceRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryDenomTraceRequest;
                    isSDK(o: any): o is _92.QueryDenomTraceRequestSDKType;
                    isAmino(o: any): o is _92.QueryDenomTraceRequestAmino;
                    encode(message: _92.QueryDenomTraceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryDenomTraceRequest;
                    fromPartial(object: Partial<_92.QueryDenomTraceRequest>): _92.QueryDenomTraceRequest;
                    fromAmino(object: _92.QueryDenomTraceRequestAmino): _92.QueryDenomTraceRequest;
                    toAmino(message: _92.QueryDenomTraceRequest): _92.QueryDenomTraceRequestAmino;
                    fromAminoMsg(object: _92.QueryDenomTraceRequestAminoMsg): _92.QueryDenomTraceRequest;
                    toAminoMsg(message: _92.QueryDenomTraceRequest): _92.QueryDenomTraceRequestAminoMsg;
                    fromProtoMsg(message: _92.QueryDenomTraceRequestProtoMsg): _92.QueryDenomTraceRequest;
                    toProto(message: _92.QueryDenomTraceRequest): Uint8Array;
                    toProtoMsg(message: _92.QueryDenomTraceRequest): _92.QueryDenomTraceRequestProtoMsg;
                };
                QueryDenomTraceResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryDenomTraceResponse;
                    isSDK(o: any): o is _92.QueryDenomTraceResponseSDKType;
                    isAmino(o: any): o is _92.QueryDenomTraceResponseAmino;
                    encode(message: _92.QueryDenomTraceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryDenomTraceResponse;
                    fromPartial(object: Partial<_92.QueryDenomTraceResponse>): _92.QueryDenomTraceResponse;
                    fromAmino(object: _92.QueryDenomTraceResponseAmino): _92.QueryDenomTraceResponse;
                    toAmino(message: _92.QueryDenomTraceResponse): _92.QueryDenomTraceResponseAmino;
                    fromAminoMsg(object: _92.QueryDenomTraceResponseAminoMsg): _92.QueryDenomTraceResponse;
                    toAminoMsg(message: _92.QueryDenomTraceResponse): _92.QueryDenomTraceResponseAminoMsg;
                    fromProtoMsg(message: _92.QueryDenomTraceResponseProtoMsg): _92.QueryDenomTraceResponse;
                    toProto(message: _92.QueryDenomTraceResponse): Uint8Array;
                    toProtoMsg(message: _92.QueryDenomTraceResponse): _92.QueryDenomTraceResponseProtoMsg;
                };
                QueryDenomTracesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryDenomTracesRequest;
                    isSDK(o: any): o is _92.QueryDenomTracesRequestSDKType;
                    isAmino(o: any): o is _92.QueryDenomTracesRequestAmino;
                    encode(message: _92.QueryDenomTracesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryDenomTracesRequest;
                    fromPartial(object: Partial<_92.QueryDenomTracesRequest>): _92.QueryDenomTracesRequest;
                    fromAmino(object: _92.QueryDenomTracesRequestAmino): _92.QueryDenomTracesRequest;
                    toAmino(message: _92.QueryDenomTracesRequest): _92.QueryDenomTracesRequestAmino;
                    fromAminoMsg(object: _92.QueryDenomTracesRequestAminoMsg): _92.QueryDenomTracesRequest;
                    toAminoMsg(message: _92.QueryDenomTracesRequest): _92.QueryDenomTracesRequestAminoMsg;
                    fromProtoMsg(message: _92.QueryDenomTracesRequestProtoMsg): _92.QueryDenomTracesRequest;
                    toProto(message: _92.QueryDenomTracesRequest): Uint8Array;
                    toProtoMsg(message: _92.QueryDenomTracesRequest): _92.QueryDenomTracesRequestProtoMsg;
                };
                QueryDenomTracesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryDenomTracesResponse;
                    isSDK(o: any): o is _92.QueryDenomTracesResponseSDKType;
                    isAmino(o: any): o is _92.QueryDenomTracesResponseAmino;
                    encode(message: _92.QueryDenomTracesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryDenomTracesResponse;
                    fromPartial(object: Partial<_92.QueryDenomTracesResponse>): _92.QueryDenomTracesResponse;
                    fromAmino(object: _92.QueryDenomTracesResponseAmino): _92.QueryDenomTracesResponse;
                    toAmino(message: _92.QueryDenomTracesResponse): _92.QueryDenomTracesResponseAmino;
                    fromAminoMsg(object: _92.QueryDenomTracesResponseAminoMsg): _92.QueryDenomTracesResponse;
                    toAminoMsg(message: _92.QueryDenomTracesResponse): _92.QueryDenomTracesResponseAminoMsg;
                    fromProtoMsg(message: _92.QueryDenomTracesResponseProtoMsg): _92.QueryDenomTracesResponse;
                    toProto(message: _92.QueryDenomTracesResponse): Uint8Array;
                    toProtoMsg(message: _92.QueryDenomTracesResponse): _92.QueryDenomTracesResponseProtoMsg;
                };
                QueryParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryParamsRequest;
                    isSDK(o: any): o is _92.QueryParamsRequestSDKType;
                    isAmino(o: any): o is _92.QueryParamsRequestAmino;
                    encode(_: _92.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryParamsRequest;
                    fromPartial(_: Partial<_92.QueryParamsRequest>): _92.QueryParamsRequest;
                    fromAmino(_: _92.QueryParamsRequestAmino): _92.QueryParamsRequest;
                    toAmino(_: _92.QueryParamsRequest): _92.QueryParamsRequestAmino;
                    fromAminoMsg(object: _92.QueryParamsRequestAminoMsg): _92.QueryParamsRequest;
                    toAminoMsg(message: _92.QueryParamsRequest): _92.QueryParamsRequestAminoMsg;
                    fromProtoMsg(message: _92.QueryParamsRequestProtoMsg): _92.QueryParamsRequest;
                    toProto(message: _92.QueryParamsRequest): Uint8Array;
                    toProtoMsg(message: _92.QueryParamsRequest): _92.QueryParamsRequestProtoMsg;
                };
                QueryParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryParamsResponse;
                    isSDK(o: any): o is _92.QueryParamsResponseSDKType;
                    isAmino(o: any): o is _92.QueryParamsResponseAmino;
                    encode(message: _92.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryParamsResponse;
                    fromPartial(object: Partial<_92.QueryParamsResponse>): _92.QueryParamsResponse;
                    fromAmino(object: _92.QueryParamsResponseAmino): _92.QueryParamsResponse;
                    toAmino(message: _92.QueryParamsResponse): _92.QueryParamsResponseAmino;
                    fromAminoMsg(object: _92.QueryParamsResponseAminoMsg): _92.QueryParamsResponse;
                    toAminoMsg(message: _92.QueryParamsResponse): _92.QueryParamsResponseAminoMsg;
                    fromProtoMsg(message: _92.QueryParamsResponseProtoMsg): _92.QueryParamsResponse;
                    toProto(message: _92.QueryParamsResponse): Uint8Array;
                    toProtoMsg(message: _92.QueryParamsResponse): _92.QueryParamsResponseProtoMsg;
                };
                QueryDenomHashRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryDenomHashRequest;
                    isSDK(o: any): o is _92.QueryDenomHashRequestSDKType;
                    isAmino(o: any): o is _92.QueryDenomHashRequestAmino;
                    encode(message: _92.QueryDenomHashRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryDenomHashRequest;
                    fromPartial(object: Partial<_92.QueryDenomHashRequest>): _92.QueryDenomHashRequest;
                    fromAmino(object: _92.QueryDenomHashRequestAmino): _92.QueryDenomHashRequest;
                    toAmino(message: _92.QueryDenomHashRequest): _92.QueryDenomHashRequestAmino;
                    fromAminoMsg(object: _92.QueryDenomHashRequestAminoMsg): _92.QueryDenomHashRequest;
                    toAminoMsg(message: _92.QueryDenomHashRequest): _92.QueryDenomHashRequestAminoMsg;
                    fromProtoMsg(message: _92.QueryDenomHashRequestProtoMsg): _92.QueryDenomHashRequest;
                    toProto(message: _92.QueryDenomHashRequest): Uint8Array;
                    toProtoMsg(message: _92.QueryDenomHashRequest): _92.QueryDenomHashRequestProtoMsg;
                };
                QueryDenomHashResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryDenomHashResponse;
                    isSDK(o: any): o is _92.QueryDenomHashResponseSDKType;
                    isAmino(o: any): o is _92.QueryDenomHashResponseAmino;
                    encode(message: _92.QueryDenomHashResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryDenomHashResponse;
                    fromPartial(object: Partial<_92.QueryDenomHashResponse>): _92.QueryDenomHashResponse;
                    fromAmino(object: _92.QueryDenomHashResponseAmino): _92.QueryDenomHashResponse;
                    toAmino(message: _92.QueryDenomHashResponse): _92.QueryDenomHashResponseAmino;
                    fromAminoMsg(object: _92.QueryDenomHashResponseAminoMsg): _92.QueryDenomHashResponse;
                    toAminoMsg(message: _92.QueryDenomHashResponse): _92.QueryDenomHashResponseAminoMsg;
                    fromProtoMsg(message: _92.QueryDenomHashResponseProtoMsg): _92.QueryDenomHashResponse;
                    toProto(message: _92.QueryDenomHashResponse): Uint8Array;
                    toProtoMsg(message: _92.QueryDenomHashResponse): _92.QueryDenomHashResponseProtoMsg;
                };
                QueryEscrowAddressRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryEscrowAddressRequest;
                    isSDK(o: any): o is _92.QueryEscrowAddressRequestSDKType;
                    isAmino(o: any): o is _92.QueryEscrowAddressRequestAmino;
                    encode(message: _92.QueryEscrowAddressRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryEscrowAddressRequest;
                    fromPartial(object: Partial<_92.QueryEscrowAddressRequest>): _92.QueryEscrowAddressRequest;
                    fromAmino(object: _92.QueryEscrowAddressRequestAmino): _92.QueryEscrowAddressRequest;
                    toAmino(message: _92.QueryEscrowAddressRequest): _92.QueryEscrowAddressRequestAmino;
                    fromAminoMsg(object: _92.QueryEscrowAddressRequestAminoMsg): _92.QueryEscrowAddressRequest;
                    toAminoMsg(message: _92.QueryEscrowAddressRequest): _92.QueryEscrowAddressRequestAminoMsg;
                    fromProtoMsg(message: _92.QueryEscrowAddressRequestProtoMsg): _92.QueryEscrowAddressRequest;
                    toProto(message: _92.QueryEscrowAddressRequest): Uint8Array;
                    toProtoMsg(message: _92.QueryEscrowAddressRequest): _92.QueryEscrowAddressRequestProtoMsg;
                };
                QueryEscrowAddressResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryEscrowAddressResponse;
                    isSDK(o: any): o is _92.QueryEscrowAddressResponseSDKType;
                    isAmino(o: any): o is _92.QueryEscrowAddressResponseAmino;
                    encode(message: _92.QueryEscrowAddressResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryEscrowAddressResponse;
                    fromPartial(object: Partial<_92.QueryEscrowAddressResponse>): _92.QueryEscrowAddressResponse;
                    fromAmino(object: _92.QueryEscrowAddressResponseAmino): _92.QueryEscrowAddressResponse;
                    toAmino(message: _92.QueryEscrowAddressResponse): _92.QueryEscrowAddressResponseAmino;
                    fromAminoMsg(object: _92.QueryEscrowAddressResponseAminoMsg): _92.QueryEscrowAddressResponse;
                    toAminoMsg(message: _92.QueryEscrowAddressResponse): _92.QueryEscrowAddressResponseAminoMsg;
                    fromProtoMsg(message: _92.QueryEscrowAddressResponseProtoMsg): _92.QueryEscrowAddressResponse;
                    toProto(message: _92.QueryEscrowAddressResponse): Uint8Array;
                    toProtoMsg(message: _92.QueryEscrowAddressResponse): _92.QueryEscrowAddressResponseProtoMsg;
                };
                QueryTotalEscrowForDenomRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryTotalEscrowForDenomRequest;
                    isSDK(o: any): o is _92.QueryTotalEscrowForDenomRequestSDKType;
                    isAmino(o: any): o is _92.QueryTotalEscrowForDenomRequestAmino;
                    encode(message: _92.QueryTotalEscrowForDenomRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryTotalEscrowForDenomRequest;
                    fromPartial(object: Partial<_92.QueryTotalEscrowForDenomRequest>): _92.QueryTotalEscrowForDenomRequest;
                    fromAmino(object: _92.QueryTotalEscrowForDenomRequestAmino): _92.QueryTotalEscrowForDenomRequest;
                    toAmino(message: _92.QueryTotalEscrowForDenomRequest): _92.QueryTotalEscrowForDenomRequestAmino;
                    fromAminoMsg(object: _92.QueryTotalEscrowForDenomRequestAminoMsg): _92.QueryTotalEscrowForDenomRequest;
                    toAminoMsg(message: _92.QueryTotalEscrowForDenomRequest): _92.QueryTotalEscrowForDenomRequestAminoMsg;
                    fromProtoMsg(message: _92.QueryTotalEscrowForDenomRequestProtoMsg): _92.QueryTotalEscrowForDenomRequest;
                    toProto(message: _92.QueryTotalEscrowForDenomRequest): Uint8Array;
                    toProtoMsg(message: _92.QueryTotalEscrowForDenomRequest): _92.QueryTotalEscrowForDenomRequestProtoMsg;
                };
                QueryTotalEscrowForDenomResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _92.QueryTotalEscrowForDenomResponse;
                    isSDK(o: any): o is _92.QueryTotalEscrowForDenomResponseSDKType;
                    isAmino(o: any): o is _92.QueryTotalEscrowForDenomResponseAmino;
                    encode(message: _92.QueryTotalEscrowForDenomResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.QueryTotalEscrowForDenomResponse;
                    fromPartial(object: Partial<_92.QueryTotalEscrowForDenomResponse>): _92.QueryTotalEscrowForDenomResponse;
                    fromAmino(object: _92.QueryTotalEscrowForDenomResponseAmino): _92.QueryTotalEscrowForDenomResponse;
                    toAmino(message: _92.QueryTotalEscrowForDenomResponse): _92.QueryTotalEscrowForDenomResponseAmino;
                    fromAminoMsg(object: _92.QueryTotalEscrowForDenomResponseAminoMsg): _92.QueryTotalEscrowForDenomResponse;
                    toAminoMsg(message: _92.QueryTotalEscrowForDenomResponse): _92.QueryTotalEscrowForDenomResponseAminoMsg;
                    fromProtoMsg(message: _92.QueryTotalEscrowForDenomResponseProtoMsg): _92.QueryTotalEscrowForDenomResponse;
                    toProto(message: _92.QueryTotalEscrowForDenomResponse): Uint8Array;
                    toProtoMsg(message: _92.QueryTotalEscrowForDenomResponse): _92.QueryTotalEscrowForDenomResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _91.GenesisState;
                    isSDK(o: any): o is _91.GenesisStateSDKType;
                    isAmino(o: any): o is _91.GenesisStateAmino;
                    encode(message: _91.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.GenesisState;
                    fromPartial(object: Partial<_91.GenesisState>): _91.GenesisState;
                    fromAmino(object: _91.GenesisStateAmino): _91.GenesisState;
                    toAmino(message: _91.GenesisState): _91.GenesisStateAmino;
                    fromAminoMsg(object: _91.GenesisStateAminoMsg): _91.GenesisState;
                    toAminoMsg(message: _91.GenesisState): _91.GenesisStateAminoMsg;
                    fromProtoMsg(message: _91.GenesisStateProtoMsg): _91.GenesisState;
                    toProto(message: _91.GenesisState): Uint8Array;
                    toProtoMsg(message: _91.GenesisState): _91.GenesisStateProtoMsg;
                };
                Allocation: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _90.Allocation;
                    isSDK(o: any): o is _90.AllocationSDKType;
                    isAmino(o: any): o is _90.AllocationAmino;
                    encode(message: _90.Allocation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.Allocation;
                    fromPartial(object: Partial<_90.Allocation>): _90.Allocation;
                    fromAmino(object: _90.AllocationAmino): _90.Allocation;
                    toAmino(message: _90.Allocation): _90.AllocationAmino;
                    fromAminoMsg(object: _90.AllocationAminoMsg): _90.Allocation;
                    toAminoMsg(message: _90.Allocation): _90.AllocationAminoMsg;
                    fromProtoMsg(message: _90.AllocationProtoMsg): _90.Allocation;
                    toProto(message: _90.Allocation): Uint8Array;
                    toProtoMsg(message: _90.Allocation): _90.AllocationProtoMsg;
                };
                TransferAuthorization: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _90.TransferAuthorization;
                    isSDK(o: any): o is _90.TransferAuthorizationSDKType;
                    isAmino(o: any): o is _90.TransferAuthorizationAmino;
                    encode(message: _90.TransferAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.TransferAuthorization;
                    fromPartial(object: Partial<_90.TransferAuthorization>): _90.TransferAuthorization;
                    fromAmino(object: _90.TransferAuthorizationAmino): _90.TransferAuthorization;
                    toAmino(message: _90.TransferAuthorization): _90.TransferAuthorizationAmino;
                    fromAminoMsg(object: _90.TransferAuthorizationAminoMsg): _90.TransferAuthorization;
                    toAminoMsg(message: _90.TransferAuthorization): _90.TransferAuthorizationAminoMsg;
                    fromProtoMsg(message: _90.TransferAuthorizationProtoMsg): _90.TransferAuthorization;
                    toProto(message: _90.TransferAuthorization): Uint8Array;
                    toProtoMsg(message: _90.TransferAuthorization): _90.TransferAuthorizationProtoMsg;
                };
            };
            const v2: {
                FungibleTokenPacketData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _95.FungibleTokenPacketData;
                    isSDK(o: any): o is _95.FungibleTokenPacketDataSDKType;
                    isAmino(o: any): o is _95.FungibleTokenPacketDataAmino;
                    encode(message: _95.FungibleTokenPacketData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _95.FungibleTokenPacketData;
                    fromPartial(object: Partial<_95.FungibleTokenPacketData>): _95.FungibleTokenPacketData;
                    fromAmino(object: _95.FungibleTokenPacketDataAmino): _95.FungibleTokenPacketData;
                    toAmino(message: _95.FungibleTokenPacketData): _95.FungibleTokenPacketDataAmino;
                    fromAminoMsg(object: _95.FungibleTokenPacketDataAminoMsg): _95.FungibleTokenPacketData;
                    toAminoMsg(message: _95.FungibleTokenPacketData): _95.FungibleTokenPacketDataAminoMsg;
                    fromProtoMsg(message: _95.FungibleTokenPacketDataProtoMsg): _95.FungibleTokenPacketData;
                    toProto(message: _95.FungibleTokenPacketData): Uint8Array;
                    toProtoMsg(message: _95.FungibleTokenPacketData): _95.FungibleTokenPacketDataProtoMsg;
                };
            };
        }
    }
    namespace core {
        namespace channel {
            const v1: {
                MsgClientImpl: typeof _321.MsgClientImpl;
                createClientImpl: (rpc: import("../helpers").Rpc) => _321.MsgClientImpl;
                QueryClientImpl: typeof _313.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    channel(request: _98.QueryChannelRequest): Promise<_98.QueryChannelResponse>;
                    channels(request?: _98.QueryChannelsRequest): Promise<_98.QueryChannelsResponse>;
                    connectionChannels(request: _98.QueryConnectionChannelsRequest): Promise<_98.QueryConnectionChannelsResponse>;
                    channelClientState(request: _98.QueryChannelClientStateRequest): Promise<_98.QueryChannelClientStateResponse>;
                    channelConsensusState(request: _98.QueryChannelConsensusStateRequest): Promise<_98.QueryChannelConsensusStateResponse>;
                    packetCommitment(request: _98.QueryPacketCommitmentRequest): Promise<_98.QueryPacketCommitmentResponse>;
                    packetCommitments(request: _98.QueryPacketCommitmentsRequest): Promise<_98.QueryPacketCommitmentsResponse>;
                    packetReceipt(request: _98.QueryPacketReceiptRequest): Promise<_98.QueryPacketReceiptResponse>;
                    packetAcknowledgement(request: _98.QueryPacketAcknowledgementRequest): Promise<_98.QueryPacketAcknowledgementResponse>;
                    packetAcknowledgements(request: _98.QueryPacketAcknowledgementsRequest): Promise<_98.QueryPacketAcknowledgementsResponse>;
                    unreceivedPackets(request: _98.QueryUnreceivedPacketsRequest): Promise<_98.QueryUnreceivedPacketsResponse>;
                    unreceivedAcks(request: _98.QueryUnreceivedAcksRequest): Promise<_98.QueryUnreceivedAcksResponse>;
                    nextSequenceReceive(request: _98.QueryNextSequenceReceiveRequest): Promise<_98.QueryNextSequenceReceiveResponse>;
                    nextSequenceSend(request: _98.QueryNextSequenceSendRequest): Promise<_98.QueryNextSequenceSendResponse>;
                    upgradeError(request: _98.QueryUpgradeErrorRequest): Promise<_98.QueryUpgradeErrorResponse>;
                    upgrade(request: _98.QueryUpgradeRequest): Promise<_98.QueryUpgradeResponse>;
                    channelParams(request?: _98.QueryChannelParamsRequest): Promise<_98.QueryChannelParamsResponse>;
                };
                LCDQueryClient: typeof _305.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        channelOpenInit(value: _99.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenTry(value: _99.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenAck(value: _99.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenConfirm(value: _99.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelCloseInit(value: _99.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelCloseConfirm(value: _99.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        recvPacket(value: _99.MsgRecvPacket): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        timeout(value: _99.MsgTimeout): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        timeoutOnClose(value: _99.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        acknowledgement(value: _99.MsgAcknowledgement): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelUpgradeInit(value: _99.MsgChannelUpgradeInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelUpgradeTry(value: _99.MsgChannelUpgradeTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelUpgradeAck(value: _99.MsgChannelUpgradeAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelUpgradeConfirm(value: _99.MsgChannelUpgradeConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelUpgradeOpen(value: _99.MsgChannelUpgradeOpen): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelUpgradeTimeout(value: _99.MsgChannelUpgradeTimeout): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelUpgradeCancel(value: _99.MsgChannelUpgradeCancel): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateChannelParams(value: _99.MsgUpdateParams): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        pruneAcknowledgements(value: _99.MsgPruneAcknowledgements): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        channelOpenInit(value: _99.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: _99.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: _99.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: _99.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: _99.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: _99.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: _99.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: _99.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: _99.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: _99.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: _99.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: _99.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: _99.MsgRecvPacket): {
                            typeUrl: string;
                            value: _99.MsgRecvPacket;
                        };
                        timeout(value: _99.MsgTimeout): {
                            typeUrl: string;
                            value: _99.MsgTimeout;
                        };
                        timeoutOnClose(value: _99.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: _99.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: _99.MsgAcknowledgement): {
                            typeUrl: string;
                            value: _99.MsgAcknowledgement;
                        };
                        channelUpgradeInit(value: _99.MsgChannelUpgradeInit): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeInit;
                        };
                        channelUpgradeTry(value: _99.MsgChannelUpgradeTry): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeTry;
                        };
                        channelUpgradeAck(value: _99.MsgChannelUpgradeAck): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeAck;
                        };
                        channelUpgradeConfirm(value: _99.MsgChannelUpgradeConfirm): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeConfirm;
                        };
                        channelUpgradeOpen(value: _99.MsgChannelUpgradeOpen): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeOpen;
                        };
                        channelUpgradeTimeout(value: _99.MsgChannelUpgradeTimeout): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeTimeout;
                        };
                        channelUpgradeCancel(value: _99.MsgChannelUpgradeCancel): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeCancel;
                        };
                        updateChannelParams(value: _99.MsgUpdateParams): {
                            typeUrl: string;
                            value: _99.MsgUpdateParams;
                        };
                        pruneAcknowledgements(value: _99.MsgPruneAcknowledgements): {
                            typeUrl: string;
                            value: _99.MsgPruneAcknowledgements;
                        };
                    };
                    fromPartial: {
                        channelOpenInit(value: _99.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: _99.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: _99.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: _99.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: _99.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: _99.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: _99.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: _99.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: _99.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: _99.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: _99.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: _99.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: _99.MsgRecvPacket): {
                            typeUrl: string;
                            value: _99.MsgRecvPacket;
                        };
                        timeout(value: _99.MsgTimeout): {
                            typeUrl: string;
                            value: _99.MsgTimeout;
                        };
                        timeoutOnClose(value: _99.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: _99.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: _99.MsgAcknowledgement): {
                            typeUrl: string;
                            value: _99.MsgAcknowledgement;
                        };
                        channelUpgradeInit(value: _99.MsgChannelUpgradeInit): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeInit;
                        };
                        channelUpgradeTry(value: _99.MsgChannelUpgradeTry): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeTry;
                        };
                        channelUpgradeAck(value: _99.MsgChannelUpgradeAck): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeAck;
                        };
                        channelUpgradeConfirm(value: _99.MsgChannelUpgradeConfirm): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeConfirm;
                        };
                        channelUpgradeOpen(value: _99.MsgChannelUpgradeOpen): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeOpen;
                        };
                        channelUpgradeTimeout(value: _99.MsgChannelUpgradeTimeout): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeTimeout;
                        };
                        channelUpgradeCancel(value: _99.MsgChannelUpgradeCancel): {
                            typeUrl: string;
                            value: _99.MsgChannelUpgradeCancel;
                        };
                        updateChannelParams(value: _99.MsgUpdateParams): {
                            typeUrl: string;
                            value: _99.MsgUpdateParams;
                        };
                        pruneAcknowledgements(value: _99.MsgPruneAcknowledgements): {
                            typeUrl: string;
                            value: _99.MsgPruneAcknowledgements;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.channel.v1.MsgChannelOpenInit": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelOpenInit) => _99.MsgChannelOpenInitAmino;
                        fromAmino: (object: _99.MsgChannelOpenInitAmino) => _99.MsgChannelOpenInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenTry": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelOpenTry) => _99.MsgChannelOpenTryAmino;
                        fromAmino: (object: _99.MsgChannelOpenTryAmino) => _99.MsgChannelOpenTry;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenAck": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelOpenAck) => _99.MsgChannelOpenAckAmino;
                        fromAmino: (object: _99.MsgChannelOpenAckAmino) => _99.MsgChannelOpenAck;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenConfirm": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelOpenConfirm) => _99.MsgChannelOpenConfirmAmino;
                        fromAmino: (object: _99.MsgChannelOpenConfirmAmino) => _99.MsgChannelOpenConfirm;
                    };
                    "/ibc.core.channel.v1.MsgChannelCloseInit": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelCloseInit) => _99.MsgChannelCloseInitAmino;
                        fromAmino: (object: _99.MsgChannelCloseInitAmino) => _99.MsgChannelCloseInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelCloseConfirm": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelCloseConfirm) => _99.MsgChannelCloseConfirmAmino;
                        fromAmino: (object: _99.MsgChannelCloseConfirmAmino) => _99.MsgChannelCloseConfirm;
                    };
                    "/ibc.core.channel.v1.MsgRecvPacket": {
                        aminoType: string;
                        toAmino: (message: _99.MsgRecvPacket) => _99.MsgRecvPacketAmino;
                        fromAmino: (object: _99.MsgRecvPacketAmino) => _99.MsgRecvPacket;
                    };
                    "/ibc.core.channel.v1.MsgTimeout": {
                        aminoType: string;
                        toAmino: (message: _99.MsgTimeout) => _99.MsgTimeoutAmino;
                        fromAmino: (object: _99.MsgTimeoutAmino) => _99.MsgTimeout;
                    };
                    "/ibc.core.channel.v1.MsgTimeoutOnClose": {
                        aminoType: string;
                        toAmino: (message: _99.MsgTimeoutOnClose) => _99.MsgTimeoutOnCloseAmino;
                        fromAmino: (object: _99.MsgTimeoutOnCloseAmino) => _99.MsgTimeoutOnClose;
                    };
                    "/ibc.core.channel.v1.MsgAcknowledgement": {
                        aminoType: string;
                        toAmino: (message: _99.MsgAcknowledgement) => _99.MsgAcknowledgementAmino;
                        fromAmino: (object: _99.MsgAcknowledgementAmino) => _99.MsgAcknowledgement;
                    };
                    "/ibc.core.channel.v1.MsgChannelUpgradeInit": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelUpgradeInit) => _99.MsgChannelUpgradeInitAmino;
                        fromAmino: (object: _99.MsgChannelUpgradeInitAmino) => _99.MsgChannelUpgradeInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelUpgradeTry": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelUpgradeTry) => _99.MsgChannelUpgradeTryAmino;
                        fromAmino: (object: _99.MsgChannelUpgradeTryAmino) => _99.MsgChannelUpgradeTry;
                    };
                    "/ibc.core.channel.v1.MsgChannelUpgradeAck": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelUpgradeAck) => _99.MsgChannelUpgradeAckAmino;
                        fromAmino: (object: _99.MsgChannelUpgradeAckAmino) => _99.MsgChannelUpgradeAck;
                    };
                    "/ibc.core.channel.v1.MsgChannelUpgradeConfirm": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelUpgradeConfirm) => _99.MsgChannelUpgradeConfirmAmino;
                        fromAmino: (object: _99.MsgChannelUpgradeConfirmAmino) => _99.MsgChannelUpgradeConfirm;
                    };
                    "/ibc.core.channel.v1.MsgChannelUpgradeOpen": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelUpgradeOpen) => _99.MsgChannelUpgradeOpenAmino;
                        fromAmino: (object: _99.MsgChannelUpgradeOpenAmino) => _99.MsgChannelUpgradeOpen;
                    };
                    "/ibc.core.channel.v1.MsgChannelUpgradeTimeout": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelUpgradeTimeout) => _99.MsgChannelUpgradeTimeoutAmino;
                        fromAmino: (object: _99.MsgChannelUpgradeTimeoutAmino) => _99.MsgChannelUpgradeTimeout;
                    };
                    "/ibc.core.channel.v1.MsgChannelUpgradeCancel": {
                        aminoType: string;
                        toAmino: (message: _99.MsgChannelUpgradeCancel) => _99.MsgChannelUpgradeCancelAmino;
                        fromAmino: (object: _99.MsgChannelUpgradeCancelAmino) => _99.MsgChannelUpgradeCancel;
                    };
                    "/ibc.core.channel.v1.MsgUpdateParams": {
                        aminoType: string;
                        toAmino: (message: _99.MsgUpdateParams) => _99.MsgUpdateParamsAmino;
                        fromAmino: (object: _99.MsgUpdateParamsAmino) => _99.MsgUpdateParams;
                    };
                    "/ibc.core.channel.v1.MsgPruneAcknowledgements": {
                        aminoType: string;
                        toAmino: (message: _99.MsgPruneAcknowledgements) => _99.MsgPruneAcknowledgementsAmino;
                        fromAmino: (object: _99.MsgPruneAcknowledgementsAmino) => _99.MsgPruneAcknowledgements;
                    };
                };
                Upgrade: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _100.Upgrade;
                    isSDK(o: any): o is _100.UpgradeSDKType;
                    isAmino(o: any): o is _100.UpgradeAmino;
                    encode(message: _100.Upgrade, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.Upgrade;
                    fromPartial(object: Partial<_100.Upgrade>): _100.Upgrade;
                    fromAmino(object: _100.UpgradeAmino): _100.Upgrade;
                    toAmino(message: _100.Upgrade): _100.UpgradeAmino;
                    fromAminoMsg(object: _100.UpgradeAminoMsg): _100.Upgrade;
                    toAminoMsg(message: _100.Upgrade): _100.UpgradeAminoMsg;
                    fromProtoMsg(message: _100.UpgradeProtoMsg): _100.Upgrade;
                    toProto(message: _100.Upgrade): Uint8Array;
                    toProtoMsg(message: _100.Upgrade): _100.UpgradeProtoMsg;
                };
                UpgradeFields: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _100.UpgradeFields;
                    isSDK(o: any): o is _100.UpgradeFieldsSDKType;
                    isAmino(o: any): o is _100.UpgradeFieldsAmino;
                    encode(message: _100.UpgradeFields, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.UpgradeFields;
                    fromPartial(object: Partial<_100.UpgradeFields>): _100.UpgradeFields;
                    fromAmino(object: _100.UpgradeFieldsAmino): _100.UpgradeFields;
                    toAmino(message: _100.UpgradeFields): _100.UpgradeFieldsAmino;
                    fromAminoMsg(object: _100.UpgradeFieldsAminoMsg): _100.UpgradeFields;
                    toAminoMsg(message: _100.UpgradeFields): _100.UpgradeFieldsAminoMsg;
                    fromProtoMsg(message: _100.UpgradeFieldsProtoMsg): _100.UpgradeFields;
                    toProto(message: _100.UpgradeFields): Uint8Array;
                    toProtoMsg(message: _100.UpgradeFields): _100.UpgradeFieldsProtoMsg;
                };
                ErrorReceipt: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _100.ErrorReceipt;
                    isSDK(o: any): o is _100.ErrorReceiptSDKType;
                    isAmino(o: any): o is _100.ErrorReceiptAmino;
                    encode(message: _100.ErrorReceipt, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.ErrorReceipt;
                    fromPartial(object: Partial<_100.ErrorReceipt>): _100.ErrorReceipt;
                    fromAmino(object: _100.ErrorReceiptAmino): _100.ErrorReceipt;
                    toAmino(message: _100.ErrorReceipt): _100.ErrorReceiptAmino;
                    fromAminoMsg(object: _100.ErrorReceiptAminoMsg): _100.ErrorReceipt;
                    toAminoMsg(message: _100.ErrorReceipt): _100.ErrorReceiptAminoMsg;
                    fromProtoMsg(message: _100.ErrorReceiptProtoMsg): _100.ErrorReceipt;
                    toProto(message: _100.ErrorReceipt): Uint8Array;
                    toProtoMsg(message: _100.ErrorReceipt): _100.ErrorReceiptProtoMsg;
                };
                responseResultTypeFromJSON(object: any): _99.ResponseResultType;
                responseResultTypeToJSON(object: _99.ResponseResultType): string;
                ResponseResultType: typeof _99.ResponseResultType;
                ResponseResultTypeSDKType: typeof _99.ResponseResultType;
                ResponseResultTypeAmino: typeof _99.ResponseResultType;
                MsgChannelOpenInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelOpenInit;
                    isSDK(o: any): o is _99.MsgChannelOpenInitSDKType;
                    isAmino(o: any): o is _99.MsgChannelOpenInitAmino;
                    encode(message: _99.MsgChannelOpenInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelOpenInit;
                    fromPartial(object: Partial<_99.MsgChannelOpenInit>): _99.MsgChannelOpenInit;
                    fromAmino(object: _99.MsgChannelOpenInitAmino): _99.MsgChannelOpenInit;
                    toAmino(message: _99.MsgChannelOpenInit): _99.MsgChannelOpenInitAmino;
                    fromAminoMsg(object: _99.MsgChannelOpenInitAminoMsg): _99.MsgChannelOpenInit;
                    toAminoMsg(message: _99.MsgChannelOpenInit): _99.MsgChannelOpenInitAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelOpenInitProtoMsg): _99.MsgChannelOpenInit;
                    toProto(message: _99.MsgChannelOpenInit): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelOpenInit): _99.MsgChannelOpenInitProtoMsg;
                };
                MsgChannelOpenInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelOpenInitResponse;
                    isSDK(o: any): o is _99.MsgChannelOpenInitResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelOpenInitResponseAmino;
                    encode(message: _99.MsgChannelOpenInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelOpenInitResponse;
                    fromPartial(object: Partial<_99.MsgChannelOpenInitResponse>): _99.MsgChannelOpenInitResponse;
                    fromAmino(object: _99.MsgChannelOpenInitResponseAmino): _99.MsgChannelOpenInitResponse;
                    toAmino(message: _99.MsgChannelOpenInitResponse): _99.MsgChannelOpenInitResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelOpenInitResponseAminoMsg): _99.MsgChannelOpenInitResponse;
                    toAminoMsg(message: _99.MsgChannelOpenInitResponse): _99.MsgChannelOpenInitResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelOpenInitResponseProtoMsg): _99.MsgChannelOpenInitResponse;
                    toProto(message: _99.MsgChannelOpenInitResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelOpenInitResponse): _99.MsgChannelOpenInitResponseProtoMsg;
                };
                MsgChannelOpenTry: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelOpenTry;
                    isSDK(o: any): o is _99.MsgChannelOpenTrySDKType;
                    isAmino(o: any): o is _99.MsgChannelOpenTryAmino;
                    encode(message: _99.MsgChannelOpenTry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelOpenTry;
                    fromPartial(object: Partial<_99.MsgChannelOpenTry>): _99.MsgChannelOpenTry;
                    fromAmino(object: _99.MsgChannelOpenTryAmino): _99.MsgChannelOpenTry;
                    toAmino(message: _99.MsgChannelOpenTry): _99.MsgChannelOpenTryAmino;
                    fromAminoMsg(object: _99.MsgChannelOpenTryAminoMsg): _99.MsgChannelOpenTry;
                    toAminoMsg(message: _99.MsgChannelOpenTry): _99.MsgChannelOpenTryAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelOpenTryProtoMsg): _99.MsgChannelOpenTry;
                    toProto(message: _99.MsgChannelOpenTry): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelOpenTry): _99.MsgChannelOpenTryProtoMsg;
                };
                MsgChannelOpenTryResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelOpenTryResponse;
                    isSDK(o: any): o is _99.MsgChannelOpenTryResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelOpenTryResponseAmino;
                    encode(message: _99.MsgChannelOpenTryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelOpenTryResponse;
                    fromPartial(object: Partial<_99.MsgChannelOpenTryResponse>): _99.MsgChannelOpenTryResponse;
                    fromAmino(object: _99.MsgChannelOpenTryResponseAmino): _99.MsgChannelOpenTryResponse;
                    toAmino(message: _99.MsgChannelOpenTryResponse): _99.MsgChannelOpenTryResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelOpenTryResponseAminoMsg): _99.MsgChannelOpenTryResponse;
                    toAminoMsg(message: _99.MsgChannelOpenTryResponse): _99.MsgChannelOpenTryResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelOpenTryResponseProtoMsg): _99.MsgChannelOpenTryResponse;
                    toProto(message: _99.MsgChannelOpenTryResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelOpenTryResponse): _99.MsgChannelOpenTryResponseProtoMsg;
                };
                MsgChannelOpenAck: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelOpenAck;
                    isSDK(o: any): o is _99.MsgChannelOpenAckSDKType;
                    isAmino(o: any): o is _99.MsgChannelOpenAckAmino;
                    encode(message: _99.MsgChannelOpenAck, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelOpenAck;
                    fromPartial(object: Partial<_99.MsgChannelOpenAck>): _99.MsgChannelOpenAck;
                    fromAmino(object: _99.MsgChannelOpenAckAmino): _99.MsgChannelOpenAck;
                    toAmino(message: _99.MsgChannelOpenAck): _99.MsgChannelOpenAckAmino;
                    fromAminoMsg(object: _99.MsgChannelOpenAckAminoMsg): _99.MsgChannelOpenAck;
                    toAminoMsg(message: _99.MsgChannelOpenAck): _99.MsgChannelOpenAckAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelOpenAckProtoMsg): _99.MsgChannelOpenAck;
                    toProto(message: _99.MsgChannelOpenAck): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelOpenAck): _99.MsgChannelOpenAckProtoMsg;
                };
                MsgChannelOpenAckResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelOpenAckResponse;
                    isSDK(o: any): o is _99.MsgChannelOpenAckResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelOpenAckResponseAmino;
                    encode(_: _99.MsgChannelOpenAckResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelOpenAckResponse;
                    fromPartial(_: Partial<_99.MsgChannelOpenAckResponse>): _99.MsgChannelOpenAckResponse;
                    fromAmino(_: _99.MsgChannelOpenAckResponseAmino): _99.MsgChannelOpenAckResponse;
                    toAmino(_: _99.MsgChannelOpenAckResponse): _99.MsgChannelOpenAckResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelOpenAckResponseAminoMsg): _99.MsgChannelOpenAckResponse;
                    toAminoMsg(message: _99.MsgChannelOpenAckResponse): _99.MsgChannelOpenAckResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelOpenAckResponseProtoMsg): _99.MsgChannelOpenAckResponse;
                    toProto(message: _99.MsgChannelOpenAckResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelOpenAckResponse): _99.MsgChannelOpenAckResponseProtoMsg;
                };
                MsgChannelOpenConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelOpenConfirm;
                    isSDK(o: any): o is _99.MsgChannelOpenConfirmSDKType;
                    isAmino(o: any): o is _99.MsgChannelOpenConfirmAmino;
                    encode(message: _99.MsgChannelOpenConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelOpenConfirm;
                    fromPartial(object: Partial<_99.MsgChannelOpenConfirm>): _99.MsgChannelOpenConfirm;
                    fromAmino(object: _99.MsgChannelOpenConfirmAmino): _99.MsgChannelOpenConfirm;
                    toAmino(message: _99.MsgChannelOpenConfirm): _99.MsgChannelOpenConfirmAmino;
                    fromAminoMsg(object: _99.MsgChannelOpenConfirmAminoMsg): _99.MsgChannelOpenConfirm;
                    toAminoMsg(message: _99.MsgChannelOpenConfirm): _99.MsgChannelOpenConfirmAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelOpenConfirmProtoMsg): _99.MsgChannelOpenConfirm;
                    toProto(message: _99.MsgChannelOpenConfirm): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelOpenConfirm): _99.MsgChannelOpenConfirmProtoMsg;
                };
                MsgChannelOpenConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelOpenConfirmResponse;
                    isSDK(o: any): o is _99.MsgChannelOpenConfirmResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelOpenConfirmResponseAmino;
                    encode(_: _99.MsgChannelOpenConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelOpenConfirmResponse;
                    fromPartial(_: Partial<_99.MsgChannelOpenConfirmResponse>): _99.MsgChannelOpenConfirmResponse;
                    fromAmino(_: _99.MsgChannelOpenConfirmResponseAmino): _99.MsgChannelOpenConfirmResponse;
                    toAmino(_: _99.MsgChannelOpenConfirmResponse): _99.MsgChannelOpenConfirmResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelOpenConfirmResponseAminoMsg): _99.MsgChannelOpenConfirmResponse;
                    toAminoMsg(message: _99.MsgChannelOpenConfirmResponse): _99.MsgChannelOpenConfirmResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelOpenConfirmResponseProtoMsg): _99.MsgChannelOpenConfirmResponse;
                    toProto(message: _99.MsgChannelOpenConfirmResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelOpenConfirmResponse): _99.MsgChannelOpenConfirmResponseProtoMsg;
                };
                MsgChannelCloseInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelCloseInit;
                    isSDK(o: any): o is _99.MsgChannelCloseInitSDKType;
                    isAmino(o: any): o is _99.MsgChannelCloseInitAmino;
                    encode(message: _99.MsgChannelCloseInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelCloseInit;
                    fromPartial(object: Partial<_99.MsgChannelCloseInit>): _99.MsgChannelCloseInit;
                    fromAmino(object: _99.MsgChannelCloseInitAmino): _99.MsgChannelCloseInit;
                    toAmino(message: _99.MsgChannelCloseInit): _99.MsgChannelCloseInitAmino;
                    fromAminoMsg(object: _99.MsgChannelCloseInitAminoMsg): _99.MsgChannelCloseInit;
                    toAminoMsg(message: _99.MsgChannelCloseInit): _99.MsgChannelCloseInitAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelCloseInitProtoMsg): _99.MsgChannelCloseInit;
                    toProto(message: _99.MsgChannelCloseInit): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelCloseInit): _99.MsgChannelCloseInitProtoMsg;
                };
                MsgChannelCloseInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelCloseInitResponse;
                    isSDK(o: any): o is _99.MsgChannelCloseInitResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelCloseInitResponseAmino;
                    encode(_: _99.MsgChannelCloseInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelCloseInitResponse;
                    fromPartial(_: Partial<_99.MsgChannelCloseInitResponse>): _99.MsgChannelCloseInitResponse;
                    fromAmino(_: _99.MsgChannelCloseInitResponseAmino): _99.MsgChannelCloseInitResponse;
                    toAmino(_: _99.MsgChannelCloseInitResponse): _99.MsgChannelCloseInitResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelCloseInitResponseAminoMsg): _99.MsgChannelCloseInitResponse;
                    toAminoMsg(message: _99.MsgChannelCloseInitResponse): _99.MsgChannelCloseInitResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelCloseInitResponseProtoMsg): _99.MsgChannelCloseInitResponse;
                    toProto(message: _99.MsgChannelCloseInitResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelCloseInitResponse): _99.MsgChannelCloseInitResponseProtoMsg;
                };
                MsgChannelCloseConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelCloseConfirm;
                    isSDK(o: any): o is _99.MsgChannelCloseConfirmSDKType;
                    isAmino(o: any): o is _99.MsgChannelCloseConfirmAmino;
                    encode(message: _99.MsgChannelCloseConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelCloseConfirm;
                    fromPartial(object: Partial<_99.MsgChannelCloseConfirm>): _99.MsgChannelCloseConfirm;
                    fromAmino(object: _99.MsgChannelCloseConfirmAmino): _99.MsgChannelCloseConfirm;
                    toAmino(message: _99.MsgChannelCloseConfirm): _99.MsgChannelCloseConfirmAmino;
                    fromAminoMsg(object: _99.MsgChannelCloseConfirmAminoMsg): _99.MsgChannelCloseConfirm;
                    toAminoMsg(message: _99.MsgChannelCloseConfirm): _99.MsgChannelCloseConfirmAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelCloseConfirmProtoMsg): _99.MsgChannelCloseConfirm;
                    toProto(message: _99.MsgChannelCloseConfirm): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelCloseConfirm): _99.MsgChannelCloseConfirmProtoMsg;
                };
                MsgChannelCloseConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelCloseConfirmResponse;
                    isSDK(o: any): o is _99.MsgChannelCloseConfirmResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelCloseConfirmResponseAmino;
                    encode(_: _99.MsgChannelCloseConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelCloseConfirmResponse;
                    fromPartial(_: Partial<_99.MsgChannelCloseConfirmResponse>): _99.MsgChannelCloseConfirmResponse;
                    fromAmino(_: _99.MsgChannelCloseConfirmResponseAmino): _99.MsgChannelCloseConfirmResponse;
                    toAmino(_: _99.MsgChannelCloseConfirmResponse): _99.MsgChannelCloseConfirmResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelCloseConfirmResponseAminoMsg): _99.MsgChannelCloseConfirmResponse;
                    toAminoMsg(message: _99.MsgChannelCloseConfirmResponse): _99.MsgChannelCloseConfirmResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelCloseConfirmResponseProtoMsg): _99.MsgChannelCloseConfirmResponse;
                    toProto(message: _99.MsgChannelCloseConfirmResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelCloseConfirmResponse): _99.MsgChannelCloseConfirmResponseProtoMsg;
                };
                MsgRecvPacket: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgRecvPacket;
                    isSDK(o: any): o is _99.MsgRecvPacketSDKType;
                    isAmino(o: any): o is _99.MsgRecvPacketAmino;
                    encode(message: _99.MsgRecvPacket, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgRecvPacket;
                    fromPartial(object: Partial<_99.MsgRecvPacket>): _99.MsgRecvPacket;
                    fromAmino(object: _99.MsgRecvPacketAmino): _99.MsgRecvPacket;
                    toAmino(message: _99.MsgRecvPacket): _99.MsgRecvPacketAmino;
                    fromAminoMsg(object: _99.MsgRecvPacketAminoMsg): _99.MsgRecvPacket;
                    toAminoMsg(message: _99.MsgRecvPacket): _99.MsgRecvPacketAminoMsg;
                    fromProtoMsg(message: _99.MsgRecvPacketProtoMsg): _99.MsgRecvPacket;
                    toProto(message: _99.MsgRecvPacket): Uint8Array;
                    toProtoMsg(message: _99.MsgRecvPacket): _99.MsgRecvPacketProtoMsg;
                };
                MsgRecvPacketResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgRecvPacketResponse;
                    isSDK(o: any): o is _99.MsgRecvPacketResponseSDKType;
                    isAmino(o: any): o is _99.MsgRecvPacketResponseAmino;
                    encode(message: _99.MsgRecvPacketResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgRecvPacketResponse;
                    fromPartial(object: Partial<_99.MsgRecvPacketResponse>): _99.MsgRecvPacketResponse;
                    fromAmino(object: _99.MsgRecvPacketResponseAmino): _99.MsgRecvPacketResponse;
                    toAmino(message: _99.MsgRecvPacketResponse): _99.MsgRecvPacketResponseAmino;
                    fromAminoMsg(object: _99.MsgRecvPacketResponseAminoMsg): _99.MsgRecvPacketResponse;
                    toAminoMsg(message: _99.MsgRecvPacketResponse): _99.MsgRecvPacketResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgRecvPacketResponseProtoMsg): _99.MsgRecvPacketResponse;
                    toProto(message: _99.MsgRecvPacketResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgRecvPacketResponse): _99.MsgRecvPacketResponseProtoMsg;
                };
                MsgTimeout: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgTimeout;
                    isSDK(o: any): o is _99.MsgTimeoutSDKType;
                    isAmino(o: any): o is _99.MsgTimeoutAmino;
                    encode(message: _99.MsgTimeout, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgTimeout;
                    fromPartial(object: Partial<_99.MsgTimeout>): _99.MsgTimeout;
                    fromAmino(object: _99.MsgTimeoutAmino): _99.MsgTimeout;
                    toAmino(message: _99.MsgTimeout): _99.MsgTimeoutAmino;
                    fromAminoMsg(object: _99.MsgTimeoutAminoMsg): _99.MsgTimeout;
                    toAminoMsg(message: _99.MsgTimeout): _99.MsgTimeoutAminoMsg;
                    fromProtoMsg(message: _99.MsgTimeoutProtoMsg): _99.MsgTimeout;
                    toProto(message: _99.MsgTimeout): Uint8Array;
                    toProtoMsg(message: _99.MsgTimeout): _99.MsgTimeoutProtoMsg;
                };
                MsgTimeoutResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgTimeoutResponse;
                    isSDK(o: any): o is _99.MsgTimeoutResponseSDKType;
                    isAmino(o: any): o is _99.MsgTimeoutResponseAmino;
                    encode(message: _99.MsgTimeoutResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgTimeoutResponse;
                    fromPartial(object: Partial<_99.MsgTimeoutResponse>): _99.MsgTimeoutResponse;
                    fromAmino(object: _99.MsgTimeoutResponseAmino): _99.MsgTimeoutResponse;
                    toAmino(message: _99.MsgTimeoutResponse): _99.MsgTimeoutResponseAmino;
                    fromAminoMsg(object: _99.MsgTimeoutResponseAminoMsg): _99.MsgTimeoutResponse;
                    toAminoMsg(message: _99.MsgTimeoutResponse): _99.MsgTimeoutResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgTimeoutResponseProtoMsg): _99.MsgTimeoutResponse;
                    toProto(message: _99.MsgTimeoutResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgTimeoutResponse): _99.MsgTimeoutResponseProtoMsg;
                };
                MsgTimeoutOnClose: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgTimeoutOnClose;
                    isSDK(o: any): o is _99.MsgTimeoutOnCloseSDKType;
                    isAmino(o: any): o is _99.MsgTimeoutOnCloseAmino;
                    encode(message: _99.MsgTimeoutOnClose, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgTimeoutOnClose;
                    fromPartial(object: Partial<_99.MsgTimeoutOnClose>): _99.MsgTimeoutOnClose;
                    fromAmino(object: _99.MsgTimeoutOnCloseAmino): _99.MsgTimeoutOnClose;
                    toAmino(message: _99.MsgTimeoutOnClose): _99.MsgTimeoutOnCloseAmino;
                    fromAminoMsg(object: _99.MsgTimeoutOnCloseAminoMsg): _99.MsgTimeoutOnClose;
                    toAminoMsg(message: _99.MsgTimeoutOnClose): _99.MsgTimeoutOnCloseAminoMsg;
                    fromProtoMsg(message: _99.MsgTimeoutOnCloseProtoMsg): _99.MsgTimeoutOnClose;
                    toProto(message: _99.MsgTimeoutOnClose): Uint8Array;
                    toProtoMsg(message: _99.MsgTimeoutOnClose): _99.MsgTimeoutOnCloseProtoMsg;
                };
                MsgTimeoutOnCloseResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgTimeoutOnCloseResponse;
                    isSDK(o: any): o is _99.MsgTimeoutOnCloseResponseSDKType;
                    isAmino(o: any): o is _99.MsgTimeoutOnCloseResponseAmino;
                    encode(message: _99.MsgTimeoutOnCloseResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgTimeoutOnCloseResponse;
                    fromPartial(object: Partial<_99.MsgTimeoutOnCloseResponse>): _99.MsgTimeoutOnCloseResponse;
                    fromAmino(object: _99.MsgTimeoutOnCloseResponseAmino): _99.MsgTimeoutOnCloseResponse;
                    toAmino(message: _99.MsgTimeoutOnCloseResponse): _99.MsgTimeoutOnCloseResponseAmino;
                    fromAminoMsg(object: _99.MsgTimeoutOnCloseResponseAminoMsg): _99.MsgTimeoutOnCloseResponse;
                    toAminoMsg(message: _99.MsgTimeoutOnCloseResponse): _99.MsgTimeoutOnCloseResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgTimeoutOnCloseResponseProtoMsg): _99.MsgTimeoutOnCloseResponse;
                    toProto(message: _99.MsgTimeoutOnCloseResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgTimeoutOnCloseResponse): _99.MsgTimeoutOnCloseResponseProtoMsg;
                };
                MsgAcknowledgement: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgAcknowledgement;
                    isSDK(o: any): o is _99.MsgAcknowledgementSDKType;
                    isAmino(o: any): o is _99.MsgAcknowledgementAmino;
                    encode(message: _99.MsgAcknowledgement, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgAcknowledgement;
                    fromPartial(object: Partial<_99.MsgAcknowledgement>): _99.MsgAcknowledgement;
                    fromAmino(object: _99.MsgAcknowledgementAmino): _99.MsgAcknowledgement;
                    toAmino(message: _99.MsgAcknowledgement): _99.MsgAcknowledgementAmino;
                    fromAminoMsg(object: _99.MsgAcknowledgementAminoMsg): _99.MsgAcknowledgement;
                    toAminoMsg(message: _99.MsgAcknowledgement): _99.MsgAcknowledgementAminoMsg;
                    fromProtoMsg(message: _99.MsgAcknowledgementProtoMsg): _99.MsgAcknowledgement;
                    toProto(message: _99.MsgAcknowledgement): Uint8Array;
                    toProtoMsg(message: _99.MsgAcknowledgement): _99.MsgAcknowledgementProtoMsg;
                };
                MsgAcknowledgementResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgAcknowledgementResponse;
                    isSDK(o: any): o is _99.MsgAcknowledgementResponseSDKType;
                    isAmino(o: any): o is _99.MsgAcknowledgementResponseAmino;
                    encode(message: _99.MsgAcknowledgementResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgAcknowledgementResponse;
                    fromPartial(object: Partial<_99.MsgAcknowledgementResponse>): _99.MsgAcknowledgementResponse;
                    fromAmino(object: _99.MsgAcknowledgementResponseAmino): _99.MsgAcknowledgementResponse;
                    toAmino(message: _99.MsgAcknowledgementResponse): _99.MsgAcknowledgementResponseAmino;
                    fromAminoMsg(object: _99.MsgAcknowledgementResponseAminoMsg): _99.MsgAcknowledgementResponse;
                    toAminoMsg(message: _99.MsgAcknowledgementResponse): _99.MsgAcknowledgementResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgAcknowledgementResponseProtoMsg): _99.MsgAcknowledgementResponse;
                    toProto(message: _99.MsgAcknowledgementResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgAcknowledgementResponse): _99.MsgAcknowledgementResponseProtoMsg;
                };
                MsgChannelUpgradeInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeInit;
                    isSDK(o: any): o is _99.MsgChannelUpgradeInitSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeInitAmino;
                    encode(message: _99.MsgChannelUpgradeInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeInit;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeInit>): _99.MsgChannelUpgradeInit;
                    fromAmino(object: _99.MsgChannelUpgradeInitAmino): _99.MsgChannelUpgradeInit;
                    toAmino(message: _99.MsgChannelUpgradeInit): _99.MsgChannelUpgradeInitAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeInitAminoMsg): _99.MsgChannelUpgradeInit;
                    toAminoMsg(message: _99.MsgChannelUpgradeInit): _99.MsgChannelUpgradeInitAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeInitProtoMsg): _99.MsgChannelUpgradeInit;
                    toProto(message: _99.MsgChannelUpgradeInit): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeInit): _99.MsgChannelUpgradeInitProtoMsg;
                };
                MsgChannelUpgradeInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeInitResponse;
                    isSDK(o: any): o is _99.MsgChannelUpgradeInitResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeInitResponseAmino;
                    encode(message: _99.MsgChannelUpgradeInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeInitResponse;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeInitResponse>): _99.MsgChannelUpgradeInitResponse;
                    fromAmino(object: _99.MsgChannelUpgradeInitResponseAmino): _99.MsgChannelUpgradeInitResponse;
                    toAmino(message: _99.MsgChannelUpgradeInitResponse): _99.MsgChannelUpgradeInitResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeInitResponseAminoMsg): _99.MsgChannelUpgradeInitResponse;
                    toAminoMsg(message: _99.MsgChannelUpgradeInitResponse): _99.MsgChannelUpgradeInitResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeInitResponseProtoMsg): _99.MsgChannelUpgradeInitResponse;
                    toProto(message: _99.MsgChannelUpgradeInitResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeInitResponse): _99.MsgChannelUpgradeInitResponseProtoMsg;
                };
                MsgChannelUpgradeTry: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeTry;
                    isSDK(o: any): o is _99.MsgChannelUpgradeTrySDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeTryAmino;
                    encode(message: _99.MsgChannelUpgradeTry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeTry;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeTry>): _99.MsgChannelUpgradeTry;
                    fromAmino(object: _99.MsgChannelUpgradeTryAmino): _99.MsgChannelUpgradeTry;
                    toAmino(message: _99.MsgChannelUpgradeTry): _99.MsgChannelUpgradeTryAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeTryAminoMsg): _99.MsgChannelUpgradeTry;
                    toAminoMsg(message: _99.MsgChannelUpgradeTry): _99.MsgChannelUpgradeTryAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeTryProtoMsg): _99.MsgChannelUpgradeTry;
                    toProto(message: _99.MsgChannelUpgradeTry): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeTry): _99.MsgChannelUpgradeTryProtoMsg;
                };
                MsgChannelUpgradeTryResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeTryResponse;
                    isSDK(o: any): o is _99.MsgChannelUpgradeTryResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeTryResponseAmino;
                    encode(message: _99.MsgChannelUpgradeTryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeTryResponse;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeTryResponse>): _99.MsgChannelUpgradeTryResponse;
                    fromAmino(object: _99.MsgChannelUpgradeTryResponseAmino): _99.MsgChannelUpgradeTryResponse;
                    toAmino(message: _99.MsgChannelUpgradeTryResponse): _99.MsgChannelUpgradeTryResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeTryResponseAminoMsg): _99.MsgChannelUpgradeTryResponse;
                    toAminoMsg(message: _99.MsgChannelUpgradeTryResponse): _99.MsgChannelUpgradeTryResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeTryResponseProtoMsg): _99.MsgChannelUpgradeTryResponse;
                    toProto(message: _99.MsgChannelUpgradeTryResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeTryResponse): _99.MsgChannelUpgradeTryResponseProtoMsg;
                };
                MsgChannelUpgradeAck: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeAck;
                    isSDK(o: any): o is _99.MsgChannelUpgradeAckSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeAckAmino;
                    encode(message: _99.MsgChannelUpgradeAck, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeAck;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeAck>): _99.MsgChannelUpgradeAck;
                    fromAmino(object: _99.MsgChannelUpgradeAckAmino): _99.MsgChannelUpgradeAck;
                    toAmino(message: _99.MsgChannelUpgradeAck): _99.MsgChannelUpgradeAckAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeAckAminoMsg): _99.MsgChannelUpgradeAck;
                    toAminoMsg(message: _99.MsgChannelUpgradeAck): _99.MsgChannelUpgradeAckAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeAckProtoMsg): _99.MsgChannelUpgradeAck;
                    toProto(message: _99.MsgChannelUpgradeAck): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeAck): _99.MsgChannelUpgradeAckProtoMsg;
                };
                MsgChannelUpgradeAckResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeAckResponse;
                    isSDK(o: any): o is _99.MsgChannelUpgradeAckResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeAckResponseAmino;
                    encode(message: _99.MsgChannelUpgradeAckResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeAckResponse;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeAckResponse>): _99.MsgChannelUpgradeAckResponse;
                    fromAmino(object: _99.MsgChannelUpgradeAckResponseAmino): _99.MsgChannelUpgradeAckResponse;
                    toAmino(message: _99.MsgChannelUpgradeAckResponse): _99.MsgChannelUpgradeAckResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeAckResponseAminoMsg): _99.MsgChannelUpgradeAckResponse;
                    toAminoMsg(message: _99.MsgChannelUpgradeAckResponse): _99.MsgChannelUpgradeAckResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeAckResponseProtoMsg): _99.MsgChannelUpgradeAckResponse;
                    toProto(message: _99.MsgChannelUpgradeAckResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeAckResponse): _99.MsgChannelUpgradeAckResponseProtoMsg;
                };
                MsgChannelUpgradeConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeConfirm;
                    isSDK(o: any): o is _99.MsgChannelUpgradeConfirmSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeConfirmAmino;
                    encode(message: _99.MsgChannelUpgradeConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeConfirm;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeConfirm>): _99.MsgChannelUpgradeConfirm;
                    fromAmino(object: _99.MsgChannelUpgradeConfirmAmino): _99.MsgChannelUpgradeConfirm;
                    toAmino(message: _99.MsgChannelUpgradeConfirm): _99.MsgChannelUpgradeConfirmAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeConfirmAminoMsg): _99.MsgChannelUpgradeConfirm;
                    toAminoMsg(message: _99.MsgChannelUpgradeConfirm): _99.MsgChannelUpgradeConfirmAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeConfirmProtoMsg): _99.MsgChannelUpgradeConfirm;
                    toProto(message: _99.MsgChannelUpgradeConfirm): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeConfirm): _99.MsgChannelUpgradeConfirmProtoMsg;
                };
                MsgChannelUpgradeConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeConfirmResponse;
                    isSDK(o: any): o is _99.MsgChannelUpgradeConfirmResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeConfirmResponseAmino;
                    encode(message: _99.MsgChannelUpgradeConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeConfirmResponse;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeConfirmResponse>): _99.MsgChannelUpgradeConfirmResponse;
                    fromAmino(object: _99.MsgChannelUpgradeConfirmResponseAmino): _99.MsgChannelUpgradeConfirmResponse;
                    toAmino(message: _99.MsgChannelUpgradeConfirmResponse): _99.MsgChannelUpgradeConfirmResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeConfirmResponseAminoMsg): _99.MsgChannelUpgradeConfirmResponse;
                    toAminoMsg(message: _99.MsgChannelUpgradeConfirmResponse): _99.MsgChannelUpgradeConfirmResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeConfirmResponseProtoMsg): _99.MsgChannelUpgradeConfirmResponse;
                    toProto(message: _99.MsgChannelUpgradeConfirmResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeConfirmResponse): _99.MsgChannelUpgradeConfirmResponseProtoMsg;
                };
                MsgChannelUpgradeOpen: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeOpen;
                    isSDK(o: any): o is _99.MsgChannelUpgradeOpenSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeOpenAmino;
                    encode(message: _99.MsgChannelUpgradeOpen, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeOpen;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeOpen>): _99.MsgChannelUpgradeOpen;
                    fromAmino(object: _99.MsgChannelUpgradeOpenAmino): _99.MsgChannelUpgradeOpen;
                    toAmino(message: _99.MsgChannelUpgradeOpen): _99.MsgChannelUpgradeOpenAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeOpenAminoMsg): _99.MsgChannelUpgradeOpen;
                    toAminoMsg(message: _99.MsgChannelUpgradeOpen): _99.MsgChannelUpgradeOpenAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeOpenProtoMsg): _99.MsgChannelUpgradeOpen;
                    toProto(message: _99.MsgChannelUpgradeOpen): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeOpen): _99.MsgChannelUpgradeOpenProtoMsg;
                };
                MsgChannelUpgradeOpenResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeOpenResponse;
                    isSDK(o: any): o is _99.MsgChannelUpgradeOpenResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeOpenResponseAmino;
                    encode(_: _99.MsgChannelUpgradeOpenResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeOpenResponse;
                    fromPartial(_: Partial<_99.MsgChannelUpgradeOpenResponse>): _99.MsgChannelUpgradeOpenResponse;
                    fromAmino(_: _99.MsgChannelUpgradeOpenResponseAmino): _99.MsgChannelUpgradeOpenResponse;
                    toAmino(_: _99.MsgChannelUpgradeOpenResponse): _99.MsgChannelUpgradeOpenResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeOpenResponseAminoMsg): _99.MsgChannelUpgradeOpenResponse;
                    toAminoMsg(message: _99.MsgChannelUpgradeOpenResponse): _99.MsgChannelUpgradeOpenResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeOpenResponseProtoMsg): _99.MsgChannelUpgradeOpenResponse;
                    toProto(message: _99.MsgChannelUpgradeOpenResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeOpenResponse): _99.MsgChannelUpgradeOpenResponseProtoMsg;
                };
                MsgChannelUpgradeTimeout: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeTimeout;
                    isSDK(o: any): o is _99.MsgChannelUpgradeTimeoutSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeTimeoutAmino;
                    encode(message: _99.MsgChannelUpgradeTimeout, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeTimeout;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeTimeout>): _99.MsgChannelUpgradeTimeout;
                    fromAmino(object: _99.MsgChannelUpgradeTimeoutAmino): _99.MsgChannelUpgradeTimeout;
                    toAmino(message: _99.MsgChannelUpgradeTimeout): _99.MsgChannelUpgradeTimeoutAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeTimeoutAminoMsg): _99.MsgChannelUpgradeTimeout;
                    toAminoMsg(message: _99.MsgChannelUpgradeTimeout): _99.MsgChannelUpgradeTimeoutAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeTimeoutProtoMsg): _99.MsgChannelUpgradeTimeout;
                    toProto(message: _99.MsgChannelUpgradeTimeout): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeTimeout): _99.MsgChannelUpgradeTimeoutProtoMsg;
                };
                MsgChannelUpgradeTimeoutResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeTimeoutResponse;
                    isSDK(o: any): o is _99.MsgChannelUpgradeTimeoutResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeTimeoutResponseAmino;
                    encode(_: _99.MsgChannelUpgradeTimeoutResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeTimeoutResponse;
                    fromPartial(_: Partial<_99.MsgChannelUpgradeTimeoutResponse>): _99.MsgChannelUpgradeTimeoutResponse;
                    fromAmino(_: _99.MsgChannelUpgradeTimeoutResponseAmino): _99.MsgChannelUpgradeTimeoutResponse;
                    toAmino(_: _99.MsgChannelUpgradeTimeoutResponse): _99.MsgChannelUpgradeTimeoutResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeTimeoutResponseAminoMsg): _99.MsgChannelUpgradeTimeoutResponse;
                    toAminoMsg(message: _99.MsgChannelUpgradeTimeoutResponse): _99.MsgChannelUpgradeTimeoutResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeTimeoutResponseProtoMsg): _99.MsgChannelUpgradeTimeoutResponse;
                    toProto(message: _99.MsgChannelUpgradeTimeoutResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeTimeoutResponse): _99.MsgChannelUpgradeTimeoutResponseProtoMsg;
                };
                MsgChannelUpgradeCancel: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeCancel;
                    isSDK(o: any): o is _99.MsgChannelUpgradeCancelSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeCancelAmino;
                    encode(message: _99.MsgChannelUpgradeCancel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeCancel;
                    fromPartial(object: Partial<_99.MsgChannelUpgradeCancel>): _99.MsgChannelUpgradeCancel;
                    fromAmino(object: _99.MsgChannelUpgradeCancelAmino): _99.MsgChannelUpgradeCancel;
                    toAmino(message: _99.MsgChannelUpgradeCancel): _99.MsgChannelUpgradeCancelAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeCancelAminoMsg): _99.MsgChannelUpgradeCancel;
                    toAminoMsg(message: _99.MsgChannelUpgradeCancel): _99.MsgChannelUpgradeCancelAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeCancelProtoMsg): _99.MsgChannelUpgradeCancel;
                    toProto(message: _99.MsgChannelUpgradeCancel): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeCancel): _99.MsgChannelUpgradeCancelProtoMsg;
                };
                MsgChannelUpgradeCancelResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgChannelUpgradeCancelResponse;
                    isSDK(o: any): o is _99.MsgChannelUpgradeCancelResponseSDKType;
                    isAmino(o: any): o is _99.MsgChannelUpgradeCancelResponseAmino;
                    encode(_: _99.MsgChannelUpgradeCancelResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgChannelUpgradeCancelResponse;
                    fromPartial(_: Partial<_99.MsgChannelUpgradeCancelResponse>): _99.MsgChannelUpgradeCancelResponse;
                    fromAmino(_: _99.MsgChannelUpgradeCancelResponseAmino): _99.MsgChannelUpgradeCancelResponse;
                    toAmino(_: _99.MsgChannelUpgradeCancelResponse): _99.MsgChannelUpgradeCancelResponseAmino;
                    fromAminoMsg(object: _99.MsgChannelUpgradeCancelResponseAminoMsg): _99.MsgChannelUpgradeCancelResponse;
                    toAminoMsg(message: _99.MsgChannelUpgradeCancelResponse): _99.MsgChannelUpgradeCancelResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgChannelUpgradeCancelResponseProtoMsg): _99.MsgChannelUpgradeCancelResponse;
                    toProto(message: _99.MsgChannelUpgradeCancelResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgChannelUpgradeCancelResponse): _99.MsgChannelUpgradeCancelResponseProtoMsg;
                };
                MsgUpdateParams: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgUpdateParams;
                    isSDK(o: any): o is _99.MsgUpdateParamsSDKType;
                    isAmino(o: any): o is _99.MsgUpdateParamsAmino;
                    encode(message: _99.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgUpdateParams;
                    fromPartial(object: Partial<_99.MsgUpdateParams>): _99.MsgUpdateParams;
                    fromAmino(object: _99.MsgUpdateParamsAmino): _99.MsgUpdateParams;
                    toAmino(message: _99.MsgUpdateParams): _99.MsgUpdateParamsAmino;
                    fromAminoMsg(object: _99.MsgUpdateParamsAminoMsg): _99.MsgUpdateParams;
                    toAminoMsg(message: _99.MsgUpdateParams): _99.MsgUpdateParamsAminoMsg;
                    fromProtoMsg(message: _99.MsgUpdateParamsProtoMsg): _99.MsgUpdateParams;
                    toProto(message: _99.MsgUpdateParams): Uint8Array;
                    toProtoMsg(message: _99.MsgUpdateParams): _99.MsgUpdateParamsProtoMsg;
                };
                MsgUpdateParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgUpdateParamsResponse;
                    isSDK(o: any): o is _99.MsgUpdateParamsResponseSDKType;
                    isAmino(o: any): o is _99.MsgUpdateParamsResponseAmino;
                    encode(_: _99.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgUpdateParamsResponse;
                    fromPartial(_: Partial<_99.MsgUpdateParamsResponse>): _99.MsgUpdateParamsResponse;
                    fromAmino(_: _99.MsgUpdateParamsResponseAmino): _99.MsgUpdateParamsResponse;
                    toAmino(_: _99.MsgUpdateParamsResponse): _99.MsgUpdateParamsResponseAmino;
                    fromAminoMsg(object: _99.MsgUpdateParamsResponseAminoMsg): _99.MsgUpdateParamsResponse;
                    toAminoMsg(message: _99.MsgUpdateParamsResponse): _99.MsgUpdateParamsResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgUpdateParamsResponseProtoMsg): _99.MsgUpdateParamsResponse;
                    toProto(message: _99.MsgUpdateParamsResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgUpdateParamsResponse): _99.MsgUpdateParamsResponseProtoMsg;
                };
                MsgPruneAcknowledgements: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgPruneAcknowledgements;
                    isSDK(o: any): o is _99.MsgPruneAcknowledgementsSDKType;
                    isAmino(o: any): o is _99.MsgPruneAcknowledgementsAmino;
                    encode(message: _99.MsgPruneAcknowledgements, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgPruneAcknowledgements;
                    fromPartial(object: Partial<_99.MsgPruneAcknowledgements>): _99.MsgPruneAcknowledgements;
                    fromAmino(object: _99.MsgPruneAcknowledgementsAmino): _99.MsgPruneAcknowledgements;
                    toAmino(message: _99.MsgPruneAcknowledgements): _99.MsgPruneAcknowledgementsAmino;
                    fromAminoMsg(object: _99.MsgPruneAcknowledgementsAminoMsg): _99.MsgPruneAcknowledgements;
                    toAminoMsg(message: _99.MsgPruneAcknowledgements): _99.MsgPruneAcknowledgementsAminoMsg;
                    fromProtoMsg(message: _99.MsgPruneAcknowledgementsProtoMsg): _99.MsgPruneAcknowledgements;
                    toProto(message: _99.MsgPruneAcknowledgements): Uint8Array;
                    toProtoMsg(message: _99.MsgPruneAcknowledgements): _99.MsgPruneAcknowledgementsProtoMsg;
                };
                MsgPruneAcknowledgementsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _99.MsgPruneAcknowledgementsResponse;
                    isSDK(o: any): o is _99.MsgPruneAcknowledgementsResponseSDKType;
                    isAmino(o: any): o is _99.MsgPruneAcknowledgementsResponseAmino;
                    encode(message: _99.MsgPruneAcknowledgementsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.MsgPruneAcknowledgementsResponse;
                    fromPartial(object: Partial<_99.MsgPruneAcknowledgementsResponse>): _99.MsgPruneAcknowledgementsResponse;
                    fromAmino(object: _99.MsgPruneAcknowledgementsResponseAmino): _99.MsgPruneAcknowledgementsResponse;
                    toAmino(message: _99.MsgPruneAcknowledgementsResponse): _99.MsgPruneAcknowledgementsResponseAmino;
                    fromAminoMsg(object: _99.MsgPruneAcknowledgementsResponseAminoMsg): _99.MsgPruneAcknowledgementsResponse;
                    toAminoMsg(message: _99.MsgPruneAcknowledgementsResponse): _99.MsgPruneAcknowledgementsResponseAminoMsg;
                    fromProtoMsg(message: _99.MsgPruneAcknowledgementsResponseProtoMsg): _99.MsgPruneAcknowledgementsResponse;
                    toProto(message: _99.MsgPruneAcknowledgementsResponse): Uint8Array;
                    toProtoMsg(message: _99.MsgPruneAcknowledgementsResponse): _99.MsgPruneAcknowledgementsResponseProtoMsg;
                };
                QueryChannelRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelRequest;
                    isSDK(o: any): o is _98.QueryChannelRequestSDKType;
                    isAmino(o: any): o is _98.QueryChannelRequestAmino;
                    encode(message: _98.QueryChannelRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelRequest;
                    fromPartial(object: Partial<_98.QueryChannelRequest>): _98.QueryChannelRequest;
                    fromAmino(object: _98.QueryChannelRequestAmino): _98.QueryChannelRequest;
                    toAmino(message: _98.QueryChannelRequest): _98.QueryChannelRequestAmino;
                    fromAminoMsg(object: _98.QueryChannelRequestAminoMsg): _98.QueryChannelRequest;
                    toAminoMsg(message: _98.QueryChannelRequest): _98.QueryChannelRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelRequestProtoMsg): _98.QueryChannelRequest;
                    toProto(message: _98.QueryChannelRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelRequest): _98.QueryChannelRequestProtoMsg;
                };
                QueryChannelResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelResponse;
                    isSDK(o: any): o is _98.QueryChannelResponseSDKType;
                    isAmino(o: any): o is _98.QueryChannelResponseAmino;
                    encode(message: _98.QueryChannelResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelResponse;
                    fromPartial(object: Partial<_98.QueryChannelResponse>): _98.QueryChannelResponse;
                    fromAmino(object: _98.QueryChannelResponseAmino): _98.QueryChannelResponse;
                    toAmino(message: _98.QueryChannelResponse): _98.QueryChannelResponseAmino;
                    fromAminoMsg(object: _98.QueryChannelResponseAminoMsg): _98.QueryChannelResponse;
                    toAminoMsg(message: _98.QueryChannelResponse): _98.QueryChannelResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelResponseProtoMsg): _98.QueryChannelResponse;
                    toProto(message: _98.QueryChannelResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelResponse): _98.QueryChannelResponseProtoMsg;
                };
                QueryChannelsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelsRequest;
                    isSDK(o: any): o is _98.QueryChannelsRequestSDKType;
                    isAmino(o: any): o is _98.QueryChannelsRequestAmino;
                    encode(message: _98.QueryChannelsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelsRequest;
                    fromPartial(object: Partial<_98.QueryChannelsRequest>): _98.QueryChannelsRequest;
                    fromAmino(object: _98.QueryChannelsRequestAmino): _98.QueryChannelsRequest;
                    toAmino(message: _98.QueryChannelsRequest): _98.QueryChannelsRequestAmino;
                    fromAminoMsg(object: _98.QueryChannelsRequestAminoMsg): _98.QueryChannelsRequest;
                    toAminoMsg(message: _98.QueryChannelsRequest): _98.QueryChannelsRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelsRequestProtoMsg): _98.QueryChannelsRequest;
                    toProto(message: _98.QueryChannelsRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelsRequest): _98.QueryChannelsRequestProtoMsg;
                };
                QueryChannelsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelsResponse;
                    isSDK(o: any): o is _98.QueryChannelsResponseSDKType;
                    isAmino(o: any): o is _98.QueryChannelsResponseAmino;
                    encode(message: _98.QueryChannelsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelsResponse;
                    fromPartial(object: Partial<_98.QueryChannelsResponse>): _98.QueryChannelsResponse;
                    fromAmino(object: _98.QueryChannelsResponseAmino): _98.QueryChannelsResponse;
                    toAmino(message: _98.QueryChannelsResponse): _98.QueryChannelsResponseAmino;
                    fromAminoMsg(object: _98.QueryChannelsResponseAminoMsg): _98.QueryChannelsResponse;
                    toAminoMsg(message: _98.QueryChannelsResponse): _98.QueryChannelsResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelsResponseProtoMsg): _98.QueryChannelsResponse;
                    toProto(message: _98.QueryChannelsResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelsResponse): _98.QueryChannelsResponseProtoMsg;
                };
                QueryConnectionChannelsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryConnectionChannelsRequest;
                    isSDK(o: any): o is _98.QueryConnectionChannelsRequestSDKType;
                    isAmino(o: any): o is _98.QueryConnectionChannelsRequestAmino;
                    encode(message: _98.QueryConnectionChannelsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryConnectionChannelsRequest;
                    fromPartial(object: Partial<_98.QueryConnectionChannelsRequest>): _98.QueryConnectionChannelsRequest;
                    fromAmino(object: _98.QueryConnectionChannelsRequestAmino): _98.QueryConnectionChannelsRequest;
                    toAmino(message: _98.QueryConnectionChannelsRequest): _98.QueryConnectionChannelsRequestAmino;
                    fromAminoMsg(object: _98.QueryConnectionChannelsRequestAminoMsg): _98.QueryConnectionChannelsRequest;
                    toAminoMsg(message: _98.QueryConnectionChannelsRequest): _98.QueryConnectionChannelsRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryConnectionChannelsRequestProtoMsg): _98.QueryConnectionChannelsRequest;
                    toProto(message: _98.QueryConnectionChannelsRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryConnectionChannelsRequest): _98.QueryConnectionChannelsRequestProtoMsg;
                };
                QueryConnectionChannelsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryConnectionChannelsResponse;
                    isSDK(o: any): o is _98.QueryConnectionChannelsResponseSDKType;
                    isAmino(o: any): o is _98.QueryConnectionChannelsResponseAmino;
                    encode(message: _98.QueryConnectionChannelsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryConnectionChannelsResponse;
                    fromPartial(object: Partial<_98.QueryConnectionChannelsResponse>): _98.QueryConnectionChannelsResponse;
                    fromAmino(object: _98.QueryConnectionChannelsResponseAmino): _98.QueryConnectionChannelsResponse;
                    toAmino(message: _98.QueryConnectionChannelsResponse): _98.QueryConnectionChannelsResponseAmino;
                    fromAminoMsg(object: _98.QueryConnectionChannelsResponseAminoMsg): _98.QueryConnectionChannelsResponse;
                    toAminoMsg(message: _98.QueryConnectionChannelsResponse): _98.QueryConnectionChannelsResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryConnectionChannelsResponseProtoMsg): _98.QueryConnectionChannelsResponse;
                    toProto(message: _98.QueryConnectionChannelsResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryConnectionChannelsResponse): _98.QueryConnectionChannelsResponseProtoMsg;
                };
                QueryChannelClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelClientStateRequest;
                    isSDK(o: any): o is _98.QueryChannelClientStateRequestSDKType;
                    isAmino(o: any): o is _98.QueryChannelClientStateRequestAmino;
                    encode(message: _98.QueryChannelClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelClientStateRequest;
                    fromPartial(object: Partial<_98.QueryChannelClientStateRequest>): _98.QueryChannelClientStateRequest;
                    fromAmino(object: _98.QueryChannelClientStateRequestAmino): _98.QueryChannelClientStateRequest;
                    toAmino(message: _98.QueryChannelClientStateRequest): _98.QueryChannelClientStateRequestAmino;
                    fromAminoMsg(object: _98.QueryChannelClientStateRequestAminoMsg): _98.QueryChannelClientStateRequest;
                    toAminoMsg(message: _98.QueryChannelClientStateRequest): _98.QueryChannelClientStateRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelClientStateRequestProtoMsg): _98.QueryChannelClientStateRequest;
                    toProto(message: _98.QueryChannelClientStateRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelClientStateRequest): _98.QueryChannelClientStateRequestProtoMsg;
                };
                QueryChannelClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelClientStateResponse;
                    isSDK(o: any): o is _98.QueryChannelClientStateResponseSDKType;
                    isAmino(o: any): o is _98.QueryChannelClientStateResponseAmino;
                    encode(message: _98.QueryChannelClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelClientStateResponse;
                    fromPartial(object: Partial<_98.QueryChannelClientStateResponse>): _98.QueryChannelClientStateResponse;
                    fromAmino(object: _98.QueryChannelClientStateResponseAmino): _98.QueryChannelClientStateResponse;
                    toAmino(message: _98.QueryChannelClientStateResponse): _98.QueryChannelClientStateResponseAmino;
                    fromAminoMsg(object: _98.QueryChannelClientStateResponseAminoMsg): _98.QueryChannelClientStateResponse;
                    toAminoMsg(message: _98.QueryChannelClientStateResponse): _98.QueryChannelClientStateResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelClientStateResponseProtoMsg): _98.QueryChannelClientStateResponse;
                    toProto(message: _98.QueryChannelClientStateResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelClientStateResponse): _98.QueryChannelClientStateResponseProtoMsg;
                };
                QueryChannelConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelConsensusStateRequest;
                    isSDK(o: any): o is _98.QueryChannelConsensusStateRequestSDKType;
                    isAmino(o: any): o is _98.QueryChannelConsensusStateRequestAmino;
                    encode(message: _98.QueryChannelConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelConsensusStateRequest;
                    fromPartial(object: Partial<_98.QueryChannelConsensusStateRequest>): _98.QueryChannelConsensusStateRequest;
                    fromAmino(object: _98.QueryChannelConsensusStateRequestAmino): _98.QueryChannelConsensusStateRequest;
                    toAmino(message: _98.QueryChannelConsensusStateRequest): _98.QueryChannelConsensusStateRequestAmino;
                    fromAminoMsg(object: _98.QueryChannelConsensusStateRequestAminoMsg): _98.QueryChannelConsensusStateRequest;
                    toAminoMsg(message: _98.QueryChannelConsensusStateRequest): _98.QueryChannelConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelConsensusStateRequestProtoMsg): _98.QueryChannelConsensusStateRequest;
                    toProto(message: _98.QueryChannelConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelConsensusStateRequest): _98.QueryChannelConsensusStateRequestProtoMsg;
                };
                QueryChannelConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelConsensusStateResponse;
                    isSDK(o: any): o is _98.QueryChannelConsensusStateResponseSDKType;
                    isAmino(o: any): o is _98.QueryChannelConsensusStateResponseAmino;
                    encode(message: _98.QueryChannelConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelConsensusStateResponse;
                    fromPartial(object: Partial<_98.QueryChannelConsensusStateResponse>): _98.QueryChannelConsensusStateResponse;
                    fromAmino(object: _98.QueryChannelConsensusStateResponseAmino): _98.QueryChannelConsensusStateResponse;
                    toAmino(message: _98.QueryChannelConsensusStateResponse): _98.QueryChannelConsensusStateResponseAmino;
                    fromAminoMsg(object: _98.QueryChannelConsensusStateResponseAminoMsg): _98.QueryChannelConsensusStateResponse;
                    toAminoMsg(message: _98.QueryChannelConsensusStateResponse): _98.QueryChannelConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelConsensusStateResponseProtoMsg): _98.QueryChannelConsensusStateResponse;
                    toProto(message: _98.QueryChannelConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelConsensusStateResponse): _98.QueryChannelConsensusStateResponseProtoMsg;
                };
                QueryPacketCommitmentRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketCommitmentRequest;
                    isSDK(o: any): o is _98.QueryPacketCommitmentRequestSDKType;
                    isAmino(o: any): o is _98.QueryPacketCommitmentRequestAmino;
                    encode(message: _98.QueryPacketCommitmentRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketCommitmentRequest;
                    fromPartial(object: Partial<_98.QueryPacketCommitmentRequest>): _98.QueryPacketCommitmentRequest;
                    fromAmino(object: _98.QueryPacketCommitmentRequestAmino): _98.QueryPacketCommitmentRequest;
                    toAmino(message: _98.QueryPacketCommitmentRequest): _98.QueryPacketCommitmentRequestAmino;
                    fromAminoMsg(object: _98.QueryPacketCommitmentRequestAminoMsg): _98.QueryPacketCommitmentRequest;
                    toAminoMsg(message: _98.QueryPacketCommitmentRequest): _98.QueryPacketCommitmentRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketCommitmentRequestProtoMsg): _98.QueryPacketCommitmentRequest;
                    toProto(message: _98.QueryPacketCommitmentRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketCommitmentRequest): _98.QueryPacketCommitmentRequestProtoMsg;
                };
                QueryPacketCommitmentResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketCommitmentResponse;
                    isSDK(o: any): o is _98.QueryPacketCommitmentResponseSDKType;
                    isAmino(o: any): o is _98.QueryPacketCommitmentResponseAmino;
                    encode(message: _98.QueryPacketCommitmentResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketCommitmentResponse;
                    fromPartial(object: Partial<_98.QueryPacketCommitmentResponse>): _98.QueryPacketCommitmentResponse;
                    fromAmino(object: _98.QueryPacketCommitmentResponseAmino): _98.QueryPacketCommitmentResponse;
                    toAmino(message: _98.QueryPacketCommitmentResponse): _98.QueryPacketCommitmentResponseAmino;
                    fromAminoMsg(object: _98.QueryPacketCommitmentResponseAminoMsg): _98.QueryPacketCommitmentResponse;
                    toAminoMsg(message: _98.QueryPacketCommitmentResponse): _98.QueryPacketCommitmentResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketCommitmentResponseProtoMsg): _98.QueryPacketCommitmentResponse;
                    toProto(message: _98.QueryPacketCommitmentResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketCommitmentResponse): _98.QueryPacketCommitmentResponseProtoMsg;
                };
                QueryPacketCommitmentsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketCommitmentsRequest;
                    isSDK(o: any): o is _98.QueryPacketCommitmentsRequestSDKType;
                    isAmino(o: any): o is _98.QueryPacketCommitmentsRequestAmino;
                    encode(message: _98.QueryPacketCommitmentsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketCommitmentsRequest;
                    fromPartial(object: Partial<_98.QueryPacketCommitmentsRequest>): _98.QueryPacketCommitmentsRequest;
                    fromAmino(object: _98.QueryPacketCommitmentsRequestAmino): _98.QueryPacketCommitmentsRequest;
                    toAmino(message: _98.QueryPacketCommitmentsRequest): _98.QueryPacketCommitmentsRequestAmino;
                    fromAminoMsg(object: _98.QueryPacketCommitmentsRequestAminoMsg): _98.QueryPacketCommitmentsRequest;
                    toAminoMsg(message: _98.QueryPacketCommitmentsRequest): _98.QueryPacketCommitmentsRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketCommitmentsRequestProtoMsg): _98.QueryPacketCommitmentsRequest;
                    toProto(message: _98.QueryPacketCommitmentsRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketCommitmentsRequest): _98.QueryPacketCommitmentsRequestProtoMsg;
                };
                QueryPacketCommitmentsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketCommitmentsResponse;
                    isSDK(o: any): o is _98.QueryPacketCommitmentsResponseSDKType;
                    isAmino(o: any): o is _98.QueryPacketCommitmentsResponseAmino;
                    encode(message: _98.QueryPacketCommitmentsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketCommitmentsResponse;
                    fromPartial(object: Partial<_98.QueryPacketCommitmentsResponse>): _98.QueryPacketCommitmentsResponse;
                    fromAmino(object: _98.QueryPacketCommitmentsResponseAmino): _98.QueryPacketCommitmentsResponse;
                    toAmino(message: _98.QueryPacketCommitmentsResponse): _98.QueryPacketCommitmentsResponseAmino;
                    fromAminoMsg(object: _98.QueryPacketCommitmentsResponseAminoMsg): _98.QueryPacketCommitmentsResponse;
                    toAminoMsg(message: _98.QueryPacketCommitmentsResponse): _98.QueryPacketCommitmentsResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketCommitmentsResponseProtoMsg): _98.QueryPacketCommitmentsResponse;
                    toProto(message: _98.QueryPacketCommitmentsResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketCommitmentsResponse): _98.QueryPacketCommitmentsResponseProtoMsg;
                };
                QueryPacketReceiptRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketReceiptRequest;
                    isSDK(o: any): o is _98.QueryPacketReceiptRequestSDKType;
                    isAmino(o: any): o is _98.QueryPacketReceiptRequestAmino;
                    encode(message: _98.QueryPacketReceiptRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketReceiptRequest;
                    fromPartial(object: Partial<_98.QueryPacketReceiptRequest>): _98.QueryPacketReceiptRequest;
                    fromAmino(object: _98.QueryPacketReceiptRequestAmino): _98.QueryPacketReceiptRequest;
                    toAmino(message: _98.QueryPacketReceiptRequest): _98.QueryPacketReceiptRequestAmino;
                    fromAminoMsg(object: _98.QueryPacketReceiptRequestAminoMsg): _98.QueryPacketReceiptRequest;
                    toAminoMsg(message: _98.QueryPacketReceiptRequest): _98.QueryPacketReceiptRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketReceiptRequestProtoMsg): _98.QueryPacketReceiptRequest;
                    toProto(message: _98.QueryPacketReceiptRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketReceiptRequest): _98.QueryPacketReceiptRequestProtoMsg;
                };
                QueryPacketReceiptResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketReceiptResponse;
                    isSDK(o: any): o is _98.QueryPacketReceiptResponseSDKType;
                    isAmino(o: any): o is _98.QueryPacketReceiptResponseAmino;
                    encode(message: _98.QueryPacketReceiptResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketReceiptResponse;
                    fromPartial(object: Partial<_98.QueryPacketReceiptResponse>): _98.QueryPacketReceiptResponse;
                    fromAmino(object: _98.QueryPacketReceiptResponseAmino): _98.QueryPacketReceiptResponse;
                    toAmino(message: _98.QueryPacketReceiptResponse): _98.QueryPacketReceiptResponseAmino;
                    fromAminoMsg(object: _98.QueryPacketReceiptResponseAminoMsg): _98.QueryPacketReceiptResponse;
                    toAminoMsg(message: _98.QueryPacketReceiptResponse): _98.QueryPacketReceiptResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketReceiptResponseProtoMsg): _98.QueryPacketReceiptResponse;
                    toProto(message: _98.QueryPacketReceiptResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketReceiptResponse): _98.QueryPacketReceiptResponseProtoMsg;
                };
                QueryPacketAcknowledgementRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketAcknowledgementRequest;
                    isSDK(o: any): o is _98.QueryPacketAcknowledgementRequestSDKType;
                    isAmino(o: any): o is _98.QueryPacketAcknowledgementRequestAmino;
                    encode(message: _98.QueryPacketAcknowledgementRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketAcknowledgementRequest;
                    fromPartial(object: Partial<_98.QueryPacketAcknowledgementRequest>): _98.QueryPacketAcknowledgementRequest;
                    fromAmino(object: _98.QueryPacketAcknowledgementRequestAmino): _98.QueryPacketAcknowledgementRequest;
                    toAmino(message: _98.QueryPacketAcknowledgementRequest): _98.QueryPacketAcknowledgementRequestAmino;
                    fromAminoMsg(object: _98.QueryPacketAcknowledgementRequestAminoMsg): _98.QueryPacketAcknowledgementRequest;
                    toAminoMsg(message: _98.QueryPacketAcknowledgementRequest): _98.QueryPacketAcknowledgementRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketAcknowledgementRequestProtoMsg): _98.QueryPacketAcknowledgementRequest;
                    toProto(message: _98.QueryPacketAcknowledgementRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketAcknowledgementRequest): _98.QueryPacketAcknowledgementRequestProtoMsg;
                };
                QueryPacketAcknowledgementResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketAcknowledgementResponse;
                    isSDK(o: any): o is _98.QueryPacketAcknowledgementResponseSDKType;
                    isAmino(o: any): o is _98.QueryPacketAcknowledgementResponseAmino;
                    encode(message: _98.QueryPacketAcknowledgementResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketAcknowledgementResponse;
                    fromPartial(object: Partial<_98.QueryPacketAcknowledgementResponse>): _98.QueryPacketAcknowledgementResponse;
                    fromAmino(object: _98.QueryPacketAcknowledgementResponseAmino): _98.QueryPacketAcknowledgementResponse;
                    toAmino(message: _98.QueryPacketAcknowledgementResponse): _98.QueryPacketAcknowledgementResponseAmino;
                    fromAminoMsg(object: _98.QueryPacketAcknowledgementResponseAminoMsg): _98.QueryPacketAcknowledgementResponse;
                    toAminoMsg(message: _98.QueryPacketAcknowledgementResponse): _98.QueryPacketAcknowledgementResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketAcknowledgementResponseProtoMsg): _98.QueryPacketAcknowledgementResponse;
                    toProto(message: _98.QueryPacketAcknowledgementResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketAcknowledgementResponse): _98.QueryPacketAcknowledgementResponseProtoMsg;
                };
                QueryPacketAcknowledgementsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketAcknowledgementsRequest;
                    isSDK(o: any): o is _98.QueryPacketAcknowledgementsRequestSDKType;
                    isAmino(o: any): o is _98.QueryPacketAcknowledgementsRequestAmino;
                    encode(message: _98.QueryPacketAcknowledgementsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketAcknowledgementsRequest;
                    fromPartial(object: Partial<_98.QueryPacketAcknowledgementsRequest>): _98.QueryPacketAcknowledgementsRequest;
                    fromAmino(object: _98.QueryPacketAcknowledgementsRequestAmino): _98.QueryPacketAcknowledgementsRequest;
                    toAmino(message: _98.QueryPacketAcknowledgementsRequest): _98.QueryPacketAcknowledgementsRequestAmino;
                    fromAminoMsg(object: _98.QueryPacketAcknowledgementsRequestAminoMsg): _98.QueryPacketAcknowledgementsRequest;
                    toAminoMsg(message: _98.QueryPacketAcknowledgementsRequest): _98.QueryPacketAcknowledgementsRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketAcknowledgementsRequestProtoMsg): _98.QueryPacketAcknowledgementsRequest;
                    toProto(message: _98.QueryPacketAcknowledgementsRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketAcknowledgementsRequest): _98.QueryPacketAcknowledgementsRequestProtoMsg;
                };
                QueryPacketAcknowledgementsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryPacketAcknowledgementsResponse;
                    isSDK(o: any): o is _98.QueryPacketAcknowledgementsResponseSDKType;
                    isAmino(o: any): o is _98.QueryPacketAcknowledgementsResponseAmino;
                    encode(message: _98.QueryPacketAcknowledgementsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryPacketAcknowledgementsResponse;
                    fromPartial(object: Partial<_98.QueryPacketAcknowledgementsResponse>): _98.QueryPacketAcknowledgementsResponse;
                    fromAmino(object: _98.QueryPacketAcknowledgementsResponseAmino): _98.QueryPacketAcknowledgementsResponse;
                    toAmino(message: _98.QueryPacketAcknowledgementsResponse): _98.QueryPacketAcknowledgementsResponseAmino;
                    fromAminoMsg(object: _98.QueryPacketAcknowledgementsResponseAminoMsg): _98.QueryPacketAcknowledgementsResponse;
                    toAminoMsg(message: _98.QueryPacketAcknowledgementsResponse): _98.QueryPacketAcknowledgementsResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryPacketAcknowledgementsResponseProtoMsg): _98.QueryPacketAcknowledgementsResponse;
                    toProto(message: _98.QueryPacketAcknowledgementsResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryPacketAcknowledgementsResponse): _98.QueryPacketAcknowledgementsResponseProtoMsg;
                };
                QueryUnreceivedPacketsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryUnreceivedPacketsRequest;
                    isSDK(o: any): o is _98.QueryUnreceivedPacketsRequestSDKType;
                    isAmino(o: any): o is _98.QueryUnreceivedPacketsRequestAmino;
                    encode(message: _98.QueryUnreceivedPacketsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryUnreceivedPacketsRequest;
                    fromPartial(object: Partial<_98.QueryUnreceivedPacketsRequest>): _98.QueryUnreceivedPacketsRequest;
                    fromAmino(object: _98.QueryUnreceivedPacketsRequestAmino): _98.QueryUnreceivedPacketsRequest;
                    toAmino(message: _98.QueryUnreceivedPacketsRequest): _98.QueryUnreceivedPacketsRequestAmino;
                    fromAminoMsg(object: _98.QueryUnreceivedPacketsRequestAminoMsg): _98.QueryUnreceivedPacketsRequest;
                    toAminoMsg(message: _98.QueryUnreceivedPacketsRequest): _98.QueryUnreceivedPacketsRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryUnreceivedPacketsRequestProtoMsg): _98.QueryUnreceivedPacketsRequest;
                    toProto(message: _98.QueryUnreceivedPacketsRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryUnreceivedPacketsRequest): _98.QueryUnreceivedPacketsRequestProtoMsg;
                };
                QueryUnreceivedPacketsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryUnreceivedPacketsResponse;
                    isSDK(o: any): o is _98.QueryUnreceivedPacketsResponseSDKType;
                    isAmino(o: any): o is _98.QueryUnreceivedPacketsResponseAmino;
                    encode(message: _98.QueryUnreceivedPacketsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryUnreceivedPacketsResponse;
                    fromPartial(object: Partial<_98.QueryUnreceivedPacketsResponse>): _98.QueryUnreceivedPacketsResponse;
                    fromAmino(object: _98.QueryUnreceivedPacketsResponseAmino): _98.QueryUnreceivedPacketsResponse;
                    toAmino(message: _98.QueryUnreceivedPacketsResponse): _98.QueryUnreceivedPacketsResponseAmino;
                    fromAminoMsg(object: _98.QueryUnreceivedPacketsResponseAminoMsg): _98.QueryUnreceivedPacketsResponse;
                    toAminoMsg(message: _98.QueryUnreceivedPacketsResponse): _98.QueryUnreceivedPacketsResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryUnreceivedPacketsResponseProtoMsg): _98.QueryUnreceivedPacketsResponse;
                    toProto(message: _98.QueryUnreceivedPacketsResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryUnreceivedPacketsResponse): _98.QueryUnreceivedPacketsResponseProtoMsg;
                };
                QueryUnreceivedAcksRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryUnreceivedAcksRequest;
                    isSDK(o: any): o is _98.QueryUnreceivedAcksRequestSDKType;
                    isAmino(o: any): o is _98.QueryUnreceivedAcksRequestAmino;
                    encode(message: _98.QueryUnreceivedAcksRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryUnreceivedAcksRequest;
                    fromPartial(object: Partial<_98.QueryUnreceivedAcksRequest>): _98.QueryUnreceivedAcksRequest;
                    fromAmino(object: _98.QueryUnreceivedAcksRequestAmino): _98.QueryUnreceivedAcksRequest;
                    toAmino(message: _98.QueryUnreceivedAcksRequest): _98.QueryUnreceivedAcksRequestAmino;
                    fromAminoMsg(object: _98.QueryUnreceivedAcksRequestAminoMsg): _98.QueryUnreceivedAcksRequest;
                    toAminoMsg(message: _98.QueryUnreceivedAcksRequest): _98.QueryUnreceivedAcksRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryUnreceivedAcksRequestProtoMsg): _98.QueryUnreceivedAcksRequest;
                    toProto(message: _98.QueryUnreceivedAcksRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryUnreceivedAcksRequest): _98.QueryUnreceivedAcksRequestProtoMsg;
                };
                QueryUnreceivedAcksResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryUnreceivedAcksResponse;
                    isSDK(o: any): o is _98.QueryUnreceivedAcksResponseSDKType;
                    isAmino(o: any): o is _98.QueryUnreceivedAcksResponseAmino;
                    encode(message: _98.QueryUnreceivedAcksResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryUnreceivedAcksResponse;
                    fromPartial(object: Partial<_98.QueryUnreceivedAcksResponse>): _98.QueryUnreceivedAcksResponse;
                    fromAmino(object: _98.QueryUnreceivedAcksResponseAmino): _98.QueryUnreceivedAcksResponse;
                    toAmino(message: _98.QueryUnreceivedAcksResponse): _98.QueryUnreceivedAcksResponseAmino;
                    fromAminoMsg(object: _98.QueryUnreceivedAcksResponseAminoMsg): _98.QueryUnreceivedAcksResponse;
                    toAminoMsg(message: _98.QueryUnreceivedAcksResponse): _98.QueryUnreceivedAcksResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryUnreceivedAcksResponseProtoMsg): _98.QueryUnreceivedAcksResponse;
                    toProto(message: _98.QueryUnreceivedAcksResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryUnreceivedAcksResponse): _98.QueryUnreceivedAcksResponseProtoMsg;
                };
                QueryNextSequenceReceiveRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryNextSequenceReceiveRequest;
                    isSDK(o: any): o is _98.QueryNextSequenceReceiveRequestSDKType;
                    isAmino(o: any): o is _98.QueryNextSequenceReceiveRequestAmino;
                    encode(message: _98.QueryNextSequenceReceiveRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryNextSequenceReceiveRequest;
                    fromPartial(object: Partial<_98.QueryNextSequenceReceiveRequest>): _98.QueryNextSequenceReceiveRequest;
                    fromAmino(object: _98.QueryNextSequenceReceiveRequestAmino): _98.QueryNextSequenceReceiveRequest;
                    toAmino(message: _98.QueryNextSequenceReceiveRequest): _98.QueryNextSequenceReceiveRequestAmino;
                    fromAminoMsg(object: _98.QueryNextSequenceReceiveRequestAminoMsg): _98.QueryNextSequenceReceiveRequest;
                    toAminoMsg(message: _98.QueryNextSequenceReceiveRequest): _98.QueryNextSequenceReceiveRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryNextSequenceReceiveRequestProtoMsg): _98.QueryNextSequenceReceiveRequest;
                    toProto(message: _98.QueryNextSequenceReceiveRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryNextSequenceReceiveRequest): _98.QueryNextSequenceReceiveRequestProtoMsg;
                };
                QueryNextSequenceReceiveResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryNextSequenceReceiveResponse;
                    isSDK(o: any): o is _98.QueryNextSequenceReceiveResponseSDKType;
                    isAmino(o: any): o is _98.QueryNextSequenceReceiveResponseAmino;
                    encode(message: _98.QueryNextSequenceReceiveResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryNextSequenceReceiveResponse;
                    fromPartial(object: Partial<_98.QueryNextSequenceReceiveResponse>): _98.QueryNextSequenceReceiveResponse;
                    fromAmino(object: _98.QueryNextSequenceReceiveResponseAmino): _98.QueryNextSequenceReceiveResponse;
                    toAmino(message: _98.QueryNextSequenceReceiveResponse): _98.QueryNextSequenceReceiveResponseAmino;
                    fromAminoMsg(object: _98.QueryNextSequenceReceiveResponseAminoMsg): _98.QueryNextSequenceReceiveResponse;
                    toAminoMsg(message: _98.QueryNextSequenceReceiveResponse): _98.QueryNextSequenceReceiveResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryNextSequenceReceiveResponseProtoMsg): _98.QueryNextSequenceReceiveResponse;
                    toProto(message: _98.QueryNextSequenceReceiveResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryNextSequenceReceiveResponse): _98.QueryNextSequenceReceiveResponseProtoMsg;
                };
                QueryNextSequenceSendRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryNextSequenceSendRequest;
                    isSDK(o: any): o is _98.QueryNextSequenceSendRequestSDKType;
                    isAmino(o: any): o is _98.QueryNextSequenceSendRequestAmino;
                    encode(message: _98.QueryNextSequenceSendRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryNextSequenceSendRequest;
                    fromPartial(object: Partial<_98.QueryNextSequenceSendRequest>): _98.QueryNextSequenceSendRequest;
                    fromAmino(object: _98.QueryNextSequenceSendRequestAmino): _98.QueryNextSequenceSendRequest;
                    toAmino(message: _98.QueryNextSequenceSendRequest): _98.QueryNextSequenceSendRequestAmino;
                    fromAminoMsg(object: _98.QueryNextSequenceSendRequestAminoMsg): _98.QueryNextSequenceSendRequest;
                    toAminoMsg(message: _98.QueryNextSequenceSendRequest): _98.QueryNextSequenceSendRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryNextSequenceSendRequestProtoMsg): _98.QueryNextSequenceSendRequest;
                    toProto(message: _98.QueryNextSequenceSendRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryNextSequenceSendRequest): _98.QueryNextSequenceSendRequestProtoMsg;
                };
                QueryNextSequenceSendResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryNextSequenceSendResponse;
                    isSDK(o: any): o is _98.QueryNextSequenceSendResponseSDKType;
                    isAmino(o: any): o is _98.QueryNextSequenceSendResponseAmino;
                    encode(message: _98.QueryNextSequenceSendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryNextSequenceSendResponse;
                    fromPartial(object: Partial<_98.QueryNextSequenceSendResponse>): _98.QueryNextSequenceSendResponse;
                    fromAmino(object: _98.QueryNextSequenceSendResponseAmino): _98.QueryNextSequenceSendResponse;
                    toAmino(message: _98.QueryNextSequenceSendResponse): _98.QueryNextSequenceSendResponseAmino;
                    fromAminoMsg(object: _98.QueryNextSequenceSendResponseAminoMsg): _98.QueryNextSequenceSendResponse;
                    toAminoMsg(message: _98.QueryNextSequenceSendResponse): _98.QueryNextSequenceSendResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryNextSequenceSendResponseProtoMsg): _98.QueryNextSequenceSendResponse;
                    toProto(message: _98.QueryNextSequenceSendResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryNextSequenceSendResponse): _98.QueryNextSequenceSendResponseProtoMsg;
                };
                QueryUpgradeErrorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryUpgradeErrorRequest;
                    isSDK(o: any): o is _98.QueryUpgradeErrorRequestSDKType;
                    isAmino(o: any): o is _98.QueryUpgradeErrorRequestAmino;
                    encode(message: _98.QueryUpgradeErrorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryUpgradeErrorRequest;
                    fromPartial(object: Partial<_98.QueryUpgradeErrorRequest>): _98.QueryUpgradeErrorRequest;
                    fromAmino(object: _98.QueryUpgradeErrorRequestAmino): _98.QueryUpgradeErrorRequest;
                    toAmino(message: _98.QueryUpgradeErrorRequest): _98.QueryUpgradeErrorRequestAmino;
                    fromAminoMsg(object: _98.QueryUpgradeErrorRequestAminoMsg): _98.QueryUpgradeErrorRequest;
                    toAminoMsg(message: _98.QueryUpgradeErrorRequest): _98.QueryUpgradeErrorRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryUpgradeErrorRequestProtoMsg): _98.QueryUpgradeErrorRequest;
                    toProto(message: _98.QueryUpgradeErrorRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryUpgradeErrorRequest): _98.QueryUpgradeErrorRequestProtoMsg;
                };
                QueryUpgradeErrorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryUpgradeErrorResponse;
                    isSDK(o: any): o is _98.QueryUpgradeErrorResponseSDKType;
                    isAmino(o: any): o is _98.QueryUpgradeErrorResponseAmino;
                    encode(message: _98.QueryUpgradeErrorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryUpgradeErrorResponse;
                    fromPartial(object: Partial<_98.QueryUpgradeErrorResponse>): _98.QueryUpgradeErrorResponse;
                    fromAmino(object: _98.QueryUpgradeErrorResponseAmino): _98.QueryUpgradeErrorResponse;
                    toAmino(message: _98.QueryUpgradeErrorResponse): _98.QueryUpgradeErrorResponseAmino;
                    fromAminoMsg(object: _98.QueryUpgradeErrorResponseAminoMsg): _98.QueryUpgradeErrorResponse;
                    toAminoMsg(message: _98.QueryUpgradeErrorResponse): _98.QueryUpgradeErrorResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryUpgradeErrorResponseProtoMsg): _98.QueryUpgradeErrorResponse;
                    toProto(message: _98.QueryUpgradeErrorResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryUpgradeErrorResponse): _98.QueryUpgradeErrorResponseProtoMsg;
                };
                QueryUpgradeRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryUpgradeRequest;
                    isSDK(o: any): o is _98.QueryUpgradeRequestSDKType;
                    isAmino(o: any): o is _98.QueryUpgradeRequestAmino;
                    encode(message: _98.QueryUpgradeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryUpgradeRequest;
                    fromPartial(object: Partial<_98.QueryUpgradeRequest>): _98.QueryUpgradeRequest;
                    fromAmino(object: _98.QueryUpgradeRequestAmino): _98.QueryUpgradeRequest;
                    toAmino(message: _98.QueryUpgradeRequest): _98.QueryUpgradeRequestAmino;
                    fromAminoMsg(object: _98.QueryUpgradeRequestAminoMsg): _98.QueryUpgradeRequest;
                    toAminoMsg(message: _98.QueryUpgradeRequest): _98.QueryUpgradeRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryUpgradeRequestProtoMsg): _98.QueryUpgradeRequest;
                    toProto(message: _98.QueryUpgradeRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryUpgradeRequest): _98.QueryUpgradeRequestProtoMsg;
                };
                QueryUpgradeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryUpgradeResponse;
                    isSDK(o: any): o is _98.QueryUpgradeResponseSDKType;
                    isAmino(o: any): o is _98.QueryUpgradeResponseAmino;
                    encode(message: _98.QueryUpgradeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryUpgradeResponse;
                    fromPartial(object: Partial<_98.QueryUpgradeResponse>): _98.QueryUpgradeResponse;
                    fromAmino(object: _98.QueryUpgradeResponseAmino): _98.QueryUpgradeResponse;
                    toAmino(message: _98.QueryUpgradeResponse): _98.QueryUpgradeResponseAmino;
                    fromAminoMsg(object: _98.QueryUpgradeResponseAminoMsg): _98.QueryUpgradeResponse;
                    toAminoMsg(message: _98.QueryUpgradeResponse): _98.QueryUpgradeResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryUpgradeResponseProtoMsg): _98.QueryUpgradeResponse;
                    toProto(message: _98.QueryUpgradeResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryUpgradeResponse): _98.QueryUpgradeResponseProtoMsg;
                };
                QueryChannelParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelParamsRequest;
                    isSDK(o: any): o is _98.QueryChannelParamsRequestSDKType;
                    isAmino(o: any): o is _98.QueryChannelParamsRequestAmino;
                    encode(_: _98.QueryChannelParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelParamsRequest;
                    fromPartial(_: Partial<_98.QueryChannelParamsRequest>): _98.QueryChannelParamsRequest;
                    fromAmino(_: _98.QueryChannelParamsRequestAmino): _98.QueryChannelParamsRequest;
                    toAmino(_: _98.QueryChannelParamsRequest): _98.QueryChannelParamsRequestAmino;
                    fromAminoMsg(object: _98.QueryChannelParamsRequestAminoMsg): _98.QueryChannelParamsRequest;
                    toAminoMsg(message: _98.QueryChannelParamsRequest): _98.QueryChannelParamsRequestAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelParamsRequestProtoMsg): _98.QueryChannelParamsRequest;
                    toProto(message: _98.QueryChannelParamsRequest): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelParamsRequest): _98.QueryChannelParamsRequestProtoMsg;
                };
                QueryChannelParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _98.QueryChannelParamsResponse;
                    isSDK(o: any): o is _98.QueryChannelParamsResponseSDKType;
                    isAmino(o: any): o is _98.QueryChannelParamsResponseAmino;
                    encode(message: _98.QueryChannelParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.QueryChannelParamsResponse;
                    fromPartial(object: Partial<_98.QueryChannelParamsResponse>): _98.QueryChannelParamsResponse;
                    fromAmino(object: _98.QueryChannelParamsResponseAmino): _98.QueryChannelParamsResponse;
                    toAmino(message: _98.QueryChannelParamsResponse): _98.QueryChannelParamsResponseAmino;
                    fromAminoMsg(object: _98.QueryChannelParamsResponseAminoMsg): _98.QueryChannelParamsResponse;
                    toAminoMsg(message: _98.QueryChannelParamsResponse): _98.QueryChannelParamsResponseAminoMsg;
                    fromProtoMsg(message: _98.QueryChannelParamsResponseProtoMsg): _98.QueryChannelParamsResponse;
                    toProto(message: _98.QueryChannelParamsResponse): Uint8Array;
                    toProtoMsg(message: _98.QueryChannelParamsResponse): _98.QueryChannelParamsResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _97.GenesisState;
                    isSDK(o: any): o is _97.GenesisStateSDKType;
                    isAmino(o: any): o is _97.GenesisStateAmino;
                    encode(message: _97.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.GenesisState;
                    fromPartial(object: Partial<_97.GenesisState>): _97.GenesisState;
                    fromAmino(object: _97.GenesisStateAmino): _97.GenesisState;
                    toAmino(message: _97.GenesisState): _97.GenesisStateAmino;
                    fromAminoMsg(object: _97.GenesisStateAminoMsg): _97.GenesisState;
                    toAminoMsg(message: _97.GenesisState): _97.GenesisStateAminoMsg;
                    fromProtoMsg(message: _97.GenesisStateProtoMsg): _97.GenesisState;
                    toProto(message: _97.GenesisState): Uint8Array;
                    toProtoMsg(message: _97.GenesisState): _97.GenesisStateProtoMsg;
                };
                PacketSequence: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _97.PacketSequence;
                    isSDK(o: any): o is _97.PacketSequenceSDKType;
                    isAmino(o: any): o is _97.PacketSequenceAmino;
                    encode(message: _97.PacketSequence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.PacketSequence;
                    fromPartial(object: Partial<_97.PacketSequence>): _97.PacketSequence;
                    fromAmino(object: _97.PacketSequenceAmino): _97.PacketSequence;
                    toAmino(message: _97.PacketSequence): _97.PacketSequenceAmino;
                    fromAminoMsg(object: _97.PacketSequenceAminoMsg): _97.PacketSequence;
                    toAminoMsg(message: _97.PacketSequence): _97.PacketSequenceAminoMsg;
                    fromProtoMsg(message: _97.PacketSequenceProtoMsg): _97.PacketSequence;
                    toProto(message: _97.PacketSequence): Uint8Array;
                    toProtoMsg(message: _97.PacketSequence): _97.PacketSequenceProtoMsg;
                };
                stateFromJSON(object: any): _96.State;
                stateToJSON(object: _96.State): string;
                orderFromJSON(object: any): _96.Order;
                orderToJSON(object: _96.Order): string;
                State: typeof _96.State;
                StateSDKType: typeof _96.State;
                StateAmino: typeof _96.State;
                Order: typeof _96.Order;
                OrderSDKType: typeof _96.Order;
                OrderAmino: typeof _96.Order;
                Channel: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.Channel;
                    isSDK(o: any): o is _96.ChannelSDKType;
                    isAmino(o: any): o is _96.ChannelAmino;
                    encode(message: _96.Channel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.Channel;
                    fromPartial(object: Partial<_96.Channel>): _96.Channel;
                    fromAmino(object: _96.ChannelAmino): _96.Channel;
                    toAmino(message: _96.Channel): _96.ChannelAmino;
                    fromAminoMsg(object: _96.ChannelAminoMsg): _96.Channel;
                    toAminoMsg(message: _96.Channel): _96.ChannelAminoMsg;
                    fromProtoMsg(message: _96.ChannelProtoMsg): _96.Channel;
                    toProto(message: _96.Channel): Uint8Array;
                    toProtoMsg(message: _96.Channel): _96.ChannelProtoMsg;
                };
                IdentifiedChannel: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.IdentifiedChannel;
                    isSDK(o: any): o is _96.IdentifiedChannelSDKType;
                    isAmino(o: any): o is _96.IdentifiedChannelAmino;
                    encode(message: _96.IdentifiedChannel, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.IdentifiedChannel;
                    fromPartial(object: Partial<_96.IdentifiedChannel>): _96.IdentifiedChannel;
                    fromAmino(object: _96.IdentifiedChannelAmino): _96.IdentifiedChannel;
                    toAmino(message: _96.IdentifiedChannel): _96.IdentifiedChannelAmino;
                    fromAminoMsg(object: _96.IdentifiedChannelAminoMsg): _96.IdentifiedChannel;
                    toAminoMsg(message: _96.IdentifiedChannel): _96.IdentifiedChannelAminoMsg;
                    fromProtoMsg(message: _96.IdentifiedChannelProtoMsg): _96.IdentifiedChannel;
                    toProto(message: _96.IdentifiedChannel): Uint8Array;
                    toProtoMsg(message: _96.IdentifiedChannel): _96.IdentifiedChannelProtoMsg;
                };
                Counterparty: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.Counterparty;
                    isSDK(o: any): o is _96.CounterpartySDKType;
                    isAmino(o: any): o is _96.CounterpartyAmino;
                    encode(message: _96.Counterparty, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.Counterparty;
                    fromPartial(object: Partial<_96.Counterparty>): _96.Counterparty;
                    fromAmino(object: _96.CounterpartyAmino): _96.Counterparty;
                    toAmino(message: _96.Counterparty): _96.CounterpartyAmino;
                    fromAminoMsg(object: _96.CounterpartyAminoMsg): _96.Counterparty;
                    toAminoMsg(message: _96.Counterparty): _96.CounterpartyAminoMsg;
                    fromProtoMsg(message: _96.CounterpartyProtoMsg): _96.Counterparty;
                    toProto(message: _96.Counterparty): Uint8Array;
                    toProtoMsg(message: _96.Counterparty): _96.CounterpartyProtoMsg;
                };
                Packet: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.Packet;
                    isSDK(o: any): o is _96.PacketSDKType;
                    isAmino(o: any): o is _96.PacketAmino;
                    encode(message: _96.Packet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.Packet;
                    fromPartial(object: Partial<_96.Packet>): _96.Packet;
                    fromAmino(object: _96.PacketAmino): _96.Packet;
                    toAmino(message: _96.Packet): _96.PacketAmino;
                    fromAminoMsg(object: _96.PacketAminoMsg): _96.Packet;
                    toAminoMsg(message: _96.Packet): _96.PacketAminoMsg;
                    fromProtoMsg(message: _96.PacketProtoMsg): _96.Packet;
                    toProto(message: _96.Packet): Uint8Array;
                    toProtoMsg(message: _96.Packet): _96.PacketProtoMsg;
                };
                PacketState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.PacketState;
                    isSDK(o: any): o is _96.PacketStateSDKType;
                    isAmino(o: any): o is _96.PacketStateAmino;
                    encode(message: _96.PacketState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.PacketState;
                    fromPartial(object: Partial<_96.PacketState>): _96.PacketState;
                    fromAmino(object: _96.PacketStateAmino): _96.PacketState;
                    toAmino(message: _96.PacketState): _96.PacketStateAmino;
                    fromAminoMsg(object: _96.PacketStateAminoMsg): _96.PacketState;
                    toAminoMsg(message: _96.PacketState): _96.PacketStateAminoMsg;
                    fromProtoMsg(message: _96.PacketStateProtoMsg): _96.PacketState;
                    toProto(message: _96.PacketState): Uint8Array;
                    toProtoMsg(message: _96.PacketState): _96.PacketStateProtoMsg;
                };
                PacketId: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.PacketId;
                    isSDK(o: any): o is _96.PacketIdSDKType;
                    isAmino(o: any): o is _96.PacketIdAmino;
                    encode(message: _96.PacketId, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.PacketId;
                    fromPartial(object: Partial<_96.PacketId>): _96.PacketId;
                    fromAmino(object: _96.PacketIdAmino): _96.PacketId;
                    toAmino(message: _96.PacketId): _96.PacketIdAmino;
                    fromAminoMsg(object: _96.PacketIdAminoMsg): _96.PacketId;
                    toAminoMsg(message: _96.PacketId): _96.PacketIdAminoMsg;
                    fromProtoMsg(message: _96.PacketIdProtoMsg): _96.PacketId;
                    toProto(message: _96.PacketId): Uint8Array;
                    toProtoMsg(message: _96.PacketId): _96.PacketIdProtoMsg;
                };
                Acknowledgement: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.Acknowledgement;
                    isSDK(o: any): o is _96.AcknowledgementSDKType;
                    isAmino(o: any): o is _96.AcknowledgementAmino;
                    encode(message: _96.Acknowledgement, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.Acknowledgement;
                    fromPartial(object: Partial<_96.Acknowledgement>): _96.Acknowledgement;
                    fromAmino(object: _96.AcknowledgementAmino): _96.Acknowledgement;
                    toAmino(message: _96.Acknowledgement): _96.AcknowledgementAmino;
                    fromAminoMsg(object: _96.AcknowledgementAminoMsg): _96.Acknowledgement;
                    toAminoMsg(message: _96.Acknowledgement): _96.AcknowledgementAminoMsg;
                    fromProtoMsg(message: _96.AcknowledgementProtoMsg): _96.Acknowledgement;
                    toProto(message: _96.Acknowledgement): Uint8Array;
                    toProtoMsg(message: _96.Acknowledgement): _96.AcknowledgementProtoMsg;
                };
                Timeout: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.Timeout;
                    isSDK(o: any): o is _96.TimeoutSDKType;
                    isAmino(o: any): o is _96.TimeoutAmino;
                    encode(message: _96.Timeout, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.Timeout;
                    fromPartial(object: Partial<_96.Timeout>): _96.Timeout;
                    fromAmino(object: _96.TimeoutAmino): _96.Timeout;
                    toAmino(message: _96.Timeout): _96.TimeoutAmino;
                    fromAminoMsg(object: _96.TimeoutAminoMsg): _96.Timeout;
                    toAminoMsg(message: _96.Timeout): _96.TimeoutAminoMsg;
                    fromProtoMsg(message: _96.TimeoutProtoMsg): _96.Timeout;
                    toProto(message: _96.Timeout): Uint8Array;
                    toProtoMsg(message: _96.Timeout): _96.TimeoutProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _96.Params;
                    isSDK(o: any): o is _96.ParamsSDKType;
                    isAmino(o: any): o is _96.ParamsAmino;
                    encode(message: _96.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.Params;
                    fromPartial(object: Partial<_96.Params>): _96.Params;
                    fromAmino(object: _96.ParamsAmino): _96.Params;
                    toAmino(message: _96.Params): _96.ParamsAmino;
                    fromAminoMsg(object: _96.ParamsAminoMsg): _96.Params;
                    toAminoMsg(message: _96.Params): _96.ParamsAminoMsg;
                    fromProtoMsg(message: _96.ParamsProtoMsg): _96.Params;
                    toProto(message: _96.Params): Uint8Array;
                    toProtoMsg(message: _96.Params): _96.ParamsProtoMsg;
                };
            };
        }
        namespace client {
            const v1: {
                MsgClientImpl: typeof _322.MsgClientImpl;
                createClientImpl: (rpc: import("../helpers").Rpc) => _322.MsgClientImpl;
                QueryClientImpl: typeof _314.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    clientState(request: _103.QueryClientStateRequest): Promise<_103.QueryClientStateResponse>;
                    clientStates(request?: _103.QueryClientStatesRequest): Promise<_103.QueryClientStatesResponse>;
                    consensusState(request: _103.QueryConsensusStateRequest): Promise<_103.QueryConsensusStateResponse>;
                    consensusStates(request: _103.QueryConsensusStatesRequest): Promise<_103.QueryConsensusStatesResponse>;
                    consensusStateHeights(request: _103.QueryConsensusStateHeightsRequest): Promise<_103.QueryConsensusStateHeightsResponse>;
                    clientStatus(request: _103.QueryClientStatusRequest): Promise<_103.QueryClientStatusResponse>;
                    clientParams(request?: _103.QueryClientParamsRequest): Promise<_103.QueryClientParamsResponse>;
                    upgradedClientState(request?: _103.QueryUpgradedClientStateRequest): Promise<_103.QueryUpgradedClientStateResponse>;
                    upgradedConsensusState(request?: _103.QueryUpgradedConsensusStateRequest): Promise<_103.QueryUpgradedConsensusStateResponse>;
                    verifyMembership(request: _103.QueryVerifyMembershipRequest): Promise<_103.QueryVerifyMembershipResponse>;
                };
                LCDQueryClient: typeof _306.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        createClient(value: _104.MsgCreateClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateClient(value: _104.MsgUpdateClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        upgradeClient(value: _104.MsgUpgradeClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        submitMisbehaviour(value: _104.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        recoverClient(value: _104.MsgRecoverClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        iBCSoftwareUpgrade(value: _104.MsgIBCSoftwareUpgrade): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateClientParams(value: _104.MsgUpdateParams): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        createClient(value: _104.MsgCreateClient): {
                            typeUrl: string;
                            value: _104.MsgCreateClient;
                        };
                        updateClient(value: _104.MsgUpdateClient): {
                            typeUrl: string;
                            value: _104.MsgUpdateClient;
                        };
                        upgradeClient(value: _104.MsgUpgradeClient): {
                            typeUrl: string;
                            value: _104.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: _104.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: _104.MsgSubmitMisbehaviour;
                        };
                        recoverClient(value: _104.MsgRecoverClient): {
                            typeUrl: string;
                            value: _104.MsgRecoverClient;
                        };
                        iBCSoftwareUpgrade(value: _104.MsgIBCSoftwareUpgrade): {
                            typeUrl: string;
                            value: _104.MsgIBCSoftwareUpgrade;
                        };
                        updateClientParams(value: _104.MsgUpdateParams): {
                            typeUrl: string;
                            value: _104.MsgUpdateParams;
                        };
                    };
                    fromPartial: {
                        createClient(value: _104.MsgCreateClient): {
                            typeUrl: string;
                            value: _104.MsgCreateClient;
                        };
                        updateClient(value: _104.MsgUpdateClient): {
                            typeUrl: string;
                            value: _104.MsgUpdateClient;
                        };
                        upgradeClient(value: _104.MsgUpgradeClient): {
                            typeUrl: string;
                            value: _104.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: _104.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: _104.MsgSubmitMisbehaviour;
                        };
                        recoverClient(value: _104.MsgRecoverClient): {
                            typeUrl: string;
                            value: _104.MsgRecoverClient;
                        };
                        iBCSoftwareUpgrade(value: _104.MsgIBCSoftwareUpgrade): {
                            typeUrl: string;
                            value: _104.MsgIBCSoftwareUpgrade;
                        };
                        updateClientParams(value: _104.MsgUpdateParams): {
                            typeUrl: string;
                            value: _104.MsgUpdateParams;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.client.v1.MsgCreateClient": {
                        aminoType: string;
                        toAmino: (message: _104.MsgCreateClient) => _104.MsgCreateClientAmino;
                        fromAmino: (object: _104.MsgCreateClientAmino) => _104.MsgCreateClient;
                    };
                    "/ibc.core.client.v1.MsgUpdateClient": {
                        aminoType: string;
                        toAmino: (message: _104.MsgUpdateClient) => _104.MsgUpdateClientAmino;
                        fromAmino: (object: _104.MsgUpdateClientAmino) => _104.MsgUpdateClient;
                    };
                    "/ibc.core.client.v1.MsgUpgradeClient": {
                        aminoType: string;
                        toAmino: (message: _104.MsgUpgradeClient) => _104.MsgUpgradeClientAmino;
                        fromAmino: (object: _104.MsgUpgradeClientAmino) => _104.MsgUpgradeClient;
                    };
                    "/ibc.core.client.v1.MsgSubmitMisbehaviour": {
                        aminoType: string;
                        toAmino: (message: _104.MsgSubmitMisbehaviour) => _104.MsgSubmitMisbehaviourAmino;
                        fromAmino: (object: _104.MsgSubmitMisbehaviourAmino) => _104.MsgSubmitMisbehaviour;
                    };
                    "/ibc.core.client.v1.MsgRecoverClient": {
                        aminoType: string;
                        toAmino: (message: _104.MsgRecoverClient) => _104.MsgRecoverClientAmino;
                        fromAmino: (object: _104.MsgRecoverClientAmino) => _104.MsgRecoverClient;
                    };
                    "/ibc.core.client.v1.MsgIBCSoftwareUpgrade": {
                        aminoType: string;
                        toAmino: (message: _104.MsgIBCSoftwareUpgrade) => _104.MsgIBCSoftwareUpgradeAmino;
                        fromAmino: (object: _104.MsgIBCSoftwareUpgradeAmino) => _104.MsgIBCSoftwareUpgrade;
                    };
                    "/ibc.core.client.v1.MsgUpdateParams": {
                        aminoType: string;
                        toAmino: (message: _104.MsgUpdateParams) => _104.MsgUpdateParamsAmino;
                        fromAmino: (object: _104.MsgUpdateParamsAmino) => _104.MsgUpdateParams;
                    };
                };
                MsgCreateClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgCreateClient;
                    isSDK(o: any): o is _104.MsgCreateClientSDKType;
                    isAmino(o: any): o is _104.MsgCreateClientAmino;
                    encode(message: _104.MsgCreateClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgCreateClient;
                    fromPartial(object: Partial<_104.MsgCreateClient>): _104.MsgCreateClient;
                    fromAmino(object: _104.MsgCreateClientAmino): _104.MsgCreateClient;
                    toAmino(message: _104.MsgCreateClient): _104.MsgCreateClientAmino;
                    fromAminoMsg(object: _104.MsgCreateClientAminoMsg): _104.MsgCreateClient;
                    toAminoMsg(message: _104.MsgCreateClient): _104.MsgCreateClientAminoMsg;
                    fromProtoMsg(message: _104.MsgCreateClientProtoMsg): _104.MsgCreateClient;
                    toProto(message: _104.MsgCreateClient): Uint8Array;
                    toProtoMsg(message: _104.MsgCreateClient): _104.MsgCreateClientProtoMsg;
                };
                MsgCreateClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgCreateClientResponse;
                    isSDK(o: any): o is _104.MsgCreateClientResponseSDKType;
                    isAmino(o: any): o is _104.MsgCreateClientResponseAmino;
                    encode(_: _104.MsgCreateClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgCreateClientResponse;
                    fromPartial(_: Partial<_104.MsgCreateClientResponse>): _104.MsgCreateClientResponse;
                    fromAmino(_: _104.MsgCreateClientResponseAmino): _104.MsgCreateClientResponse;
                    toAmino(_: _104.MsgCreateClientResponse): _104.MsgCreateClientResponseAmino;
                    fromAminoMsg(object: _104.MsgCreateClientResponseAminoMsg): _104.MsgCreateClientResponse;
                    toAminoMsg(message: _104.MsgCreateClientResponse): _104.MsgCreateClientResponseAminoMsg;
                    fromProtoMsg(message: _104.MsgCreateClientResponseProtoMsg): _104.MsgCreateClientResponse;
                    toProto(message: _104.MsgCreateClientResponse): Uint8Array;
                    toProtoMsg(message: _104.MsgCreateClientResponse): _104.MsgCreateClientResponseProtoMsg;
                };
                MsgUpdateClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgUpdateClient;
                    isSDK(o: any): o is _104.MsgUpdateClientSDKType;
                    isAmino(o: any): o is _104.MsgUpdateClientAmino;
                    encode(message: _104.MsgUpdateClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgUpdateClient;
                    fromPartial(object: Partial<_104.MsgUpdateClient>): _104.MsgUpdateClient;
                    fromAmino(object: _104.MsgUpdateClientAmino): _104.MsgUpdateClient;
                    toAmino(message: _104.MsgUpdateClient): _104.MsgUpdateClientAmino;
                    fromAminoMsg(object: _104.MsgUpdateClientAminoMsg): _104.MsgUpdateClient;
                    toAminoMsg(message: _104.MsgUpdateClient): _104.MsgUpdateClientAminoMsg;
                    fromProtoMsg(message: _104.MsgUpdateClientProtoMsg): _104.MsgUpdateClient;
                    toProto(message: _104.MsgUpdateClient): Uint8Array;
                    toProtoMsg(message: _104.MsgUpdateClient): _104.MsgUpdateClientProtoMsg;
                };
                MsgUpdateClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgUpdateClientResponse;
                    isSDK(o: any): o is _104.MsgUpdateClientResponseSDKType;
                    isAmino(o: any): o is _104.MsgUpdateClientResponseAmino;
                    encode(_: _104.MsgUpdateClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgUpdateClientResponse;
                    fromPartial(_: Partial<_104.MsgUpdateClientResponse>): _104.MsgUpdateClientResponse;
                    fromAmino(_: _104.MsgUpdateClientResponseAmino): _104.MsgUpdateClientResponse;
                    toAmino(_: _104.MsgUpdateClientResponse): _104.MsgUpdateClientResponseAmino;
                    fromAminoMsg(object: _104.MsgUpdateClientResponseAminoMsg): _104.MsgUpdateClientResponse;
                    toAminoMsg(message: _104.MsgUpdateClientResponse): _104.MsgUpdateClientResponseAminoMsg;
                    fromProtoMsg(message: _104.MsgUpdateClientResponseProtoMsg): _104.MsgUpdateClientResponse;
                    toProto(message: _104.MsgUpdateClientResponse): Uint8Array;
                    toProtoMsg(message: _104.MsgUpdateClientResponse): _104.MsgUpdateClientResponseProtoMsg;
                };
                MsgUpgradeClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgUpgradeClient;
                    isSDK(o: any): o is _104.MsgUpgradeClientSDKType;
                    isAmino(o: any): o is _104.MsgUpgradeClientAmino;
                    encode(message: _104.MsgUpgradeClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgUpgradeClient;
                    fromPartial(object: Partial<_104.MsgUpgradeClient>): _104.MsgUpgradeClient;
                    fromAmino(object: _104.MsgUpgradeClientAmino): _104.MsgUpgradeClient;
                    toAmino(message: _104.MsgUpgradeClient): _104.MsgUpgradeClientAmino;
                    fromAminoMsg(object: _104.MsgUpgradeClientAminoMsg): _104.MsgUpgradeClient;
                    toAminoMsg(message: _104.MsgUpgradeClient): _104.MsgUpgradeClientAminoMsg;
                    fromProtoMsg(message: _104.MsgUpgradeClientProtoMsg): _104.MsgUpgradeClient;
                    toProto(message: _104.MsgUpgradeClient): Uint8Array;
                    toProtoMsg(message: _104.MsgUpgradeClient): _104.MsgUpgradeClientProtoMsg;
                };
                MsgUpgradeClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgUpgradeClientResponse;
                    isSDK(o: any): o is _104.MsgUpgradeClientResponseSDKType;
                    isAmino(o: any): o is _104.MsgUpgradeClientResponseAmino;
                    encode(_: _104.MsgUpgradeClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgUpgradeClientResponse;
                    fromPartial(_: Partial<_104.MsgUpgradeClientResponse>): _104.MsgUpgradeClientResponse;
                    fromAmino(_: _104.MsgUpgradeClientResponseAmino): _104.MsgUpgradeClientResponse;
                    toAmino(_: _104.MsgUpgradeClientResponse): _104.MsgUpgradeClientResponseAmino;
                    fromAminoMsg(object: _104.MsgUpgradeClientResponseAminoMsg): _104.MsgUpgradeClientResponse;
                    toAminoMsg(message: _104.MsgUpgradeClientResponse): _104.MsgUpgradeClientResponseAminoMsg;
                    fromProtoMsg(message: _104.MsgUpgradeClientResponseProtoMsg): _104.MsgUpgradeClientResponse;
                    toProto(message: _104.MsgUpgradeClientResponse): Uint8Array;
                    toProtoMsg(message: _104.MsgUpgradeClientResponse): _104.MsgUpgradeClientResponseProtoMsg;
                };
                MsgSubmitMisbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgSubmitMisbehaviour;
                    isSDK(o: any): o is _104.MsgSubmitMisbehaviourSDKType;
                    isAmino(o: any): o is _104.MsgSubmitMisbehaviourAmino;
                    encode(message: _104.MsgSubmitMisbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgSubmitMisbehaviour;
                    fromPartial(object: Partial<_104.MsgSubmitMisbehaviour>): _104.MsgSubmitMisbehaviour;
                    fromAmino(object: _104.MsgSubmitMisbehaviourAmino): _104.MsgSubmitMisbehaviour;
                    toAmino(message: _104.MsgSubmitMisbehaviour): _104.MsgSubmitMisbehaviourAmino;
                    fromAminoMsg(object: _104.MsgSubmitMisbehaviourAminoMsg): _104.MsgSubmitMisbehaviour;
                    toAminoMsg(message: _104.MsgSubmitMisbehaviour): _104.MsgSubmitMisbehaviourAminoMsg;
                    fromProtoMsg(message: _104.MsgSubmitMisbehaviourProtoMsg): _104.MsgSubmitMisbehaviour;
                    toProto(message: _104.MsgSubmitMisbehaviour): Uint8Array;
                    toProtoMsg(message: _104.MsgSubmitMisbehaviour): _104.MsgSubmitMisbehaviourProtoMsg;
                };
                MsgSubmitMisbehaviourResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgSubmitMisbehaviourResponse;
                    isSDK(o: any): o is _104.MsgSubmitMisbehaviourResponseSDKType;
                    isAmino(o: any): o is _104.MsgSubmitMisbehaviourResponseAmino;
                    encode(_: _104.MsgSubmitMisbehaviourResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgSubmitMisbehaviourResponse;
                    fromPartial(_: Partial<_104.MsgSubmitMisbehaviourResponse>): _104.MsgSubmitMisbehaviourResponse;
                    fromAmino(_: _104.MsgSubmitMisbehaviourResponseAmino): _104.MsgSubmitMisbehaviourResponse;
                    toAmino(_: _104.MsgSubmitMisbehaviourResponse): _104.MsgSubmitMisbehaviourResponseAmino;
                    fromAminoMsg(object: _104.MsgSubmitMisbehaviourResponseAminoMsg): _104.MsgSubmitMisbehaviourResponse;
                    toAminoMsg(message: _104.MsgSubmitMisbehaviourResponse): _104.MsgSubmitMisbehaviourResponseAminoMsg;
                    fromProtoMsg(message: _104.MsgSubmitMisbehaviourResponseProtoMsg): _104.MsgSubmitMisbehaviourResponse;
                    toProto(message: _104.MsgSubmitMisbehaviourResponse): Uint8Array;
                    toProtoMsg(message: _104.MsgSubmitMisbehaviourResponse): _104.MsgSubmitMisbehaviourResponseProtoMsg;
                };
                MsgRecoverClient: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgRecoverClient;
                    isSDK(o: any): o is _104.MsgRecoverClientSDKType;
                    isAmino(o: any): o is _104.MsgRecoverClientAmino;
                    encode(message: _104.MsgRecoverClient, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgRecoverClient;
                    fromPartial(object: Partial<_104.MsgRecoverClient>): _104.MsgRecoverClient;
                    fromAmino(object: _104.MsgRecoverClientAmino): _104.MsgRecoverClient;
                    toAmino(message: _104.MsgRecoverClient): _104.MsgRecoverClientAmino;
                    fromAminoMsg(object: _104.MsgRecoverClientAminoMsg): _104.MsgRecoverClient;
                    toAminoMsg(message: _104.MsgRecoverClient): _104.MsgRecoverClientAminoMsg;
                    fromProtoMsg(message: _104.MsgRecoverClientProtoMsg): _104.MsgRecoverClient;
                    toProto(message: _104.MsgRecoverClient): Uint8Array;
                    toProtoMsg(message: _104.MsgRecoverClient): _104.MsgRecoverClientProtoMsg;
                };
                MsgRecoverClientResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgRecoverClientResponse;
                    isSDK(o: any): o is _104.MsgRecoverClientResponseSDKType;
                    isAmino(o: any): o is _104.MsgRecoverClientResponseAmino;
                    encode(_: _104.MsgRecoverClientResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgRecoverClientResponse;
                    fromPartial(_: Partial<_104.MsgRecoverClientResponse>): _104.MsgRecoverClientResponse;
                    fromAmino(_: _104.MsgRecoverClientResponseAmino): _104.MsgRecoverClientResponse;
                    toAmino(_: _104.MsgRecoverClientResponse): _104.MsgRecoverClientResponseAmino;
                    fromAminoMsg(object: _104.MsgRecoverClientResponseAminoMsg): _104.MsgRecoverClientResponse;
                    toAminoMsg(message: _104.MsgRecoverClientResponse): _104.MsgRecoverClientResponseAminoMsg;
                    fromProtoMsg(message: _104.MsgRecoverClientResponseProtoMsg): _104.MsgRecoverClientResponse;
                    toProto(message: _104.MsgRecoverClientResponse): Uint8Array;
                    toProtoMsg(message: _104.MsgRecoverClientResponse): _104.MsgRecoverClientResponseProtoMsg;
                };
                MsgIBCSoftwareUpgrade: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgIBCSoftwareUpgrade;
                    isSDK(o: any): o is _104.MsgIBCSoftwareUpgradeSDKType;
                    isAmino(o: any): o is _104.MsgIBCSoftwareUpgradeAmino;
                    encode(message: _104.MsgIBCSoftwareUpgrade, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgIBCSoftwareUpgrade;
                    fromPartial(object: Partial<_104.MsgIBCSoftwareUpgrade>): _104.MsgIBCSoftwareUpgrade;
                    fromAmino(object: _104.MsgIBCSoftwareUpgradeAmino): _104.MsgIBCSoftwareUpgrade;
                    toAmino(message: _104.MsgIBCSoftwareUpgrade): _104.MsgIBCSoftwareUpgradeAmino;
                    fromAminoMsg(object: _104.MsgIBCSoftwareUpgradeAminoMsg): _104.MsgIBCSoftwareUpgrade;
                    toAminoMsg(message: _104.MsgIBCSoftwareUpgrade): _104.MsgIBCSoftwareUpgradeAminoMsg;
                    fromProtoMsg(message: _104.MsgIBCSoftwareUpgradeProtoMsg): _104.MsgIBCSoftwareUpgrade;
                    toProto(message: _104.MsgIBCSoftwareUpgrade): Uint8Array;
                    toProtoMsg(message: _104.MsgIBCSoftwareUpgrade): _104.MsgIBCSoftwareUpgradeProtoMsg;
                };
                MsgIBCSoftwareUpgradeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgIBCSoftwareUpgradeResponse;
                    isSDK(o: any): o is _104.MsgIBCSoftwareUpgradeResponseSDKType;
                    isAmino(o: any): o is _104.MsgIBCSoftwareUpgradeResponseAmino;
                    encode(_: _104.MsgIBCSoftwareUpgradeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgIBCSoftwareUpgradeResponse;
                    fromPartial(_: Partial<_104.MsgIBCSoftwareUpgradeResponse>): _104.MsgIBCSoftwareUpgradeResponse;
                    fromAmino(_: _104.MsgIBCSoftwareUpgradeResponseAmino): _104.MsgIBCSoftwareUpgradeResponse;
                    toAmino(_: _104.MsgIBCSoftwareUpgradeResponse): _104.MsgIBCSoftwareUpgradeResponseAmino;
                    fromAminoMsg(object: _104.MsgIBCSoftwareUpgradeResponseAminoMsg): _104.MsgIBCSoftwareUpgradeResponse;
                    toAminoMsg(message: _104.MsgIBCSoftwareUpgradeResponse): _104.MsgIBCSoftwareUpgradeResponseAminoMsg;
                    fromProtoMsg(message: _104.MsgIBCSoftwareUpgradeResponseProtoMsg): _104.MsgIBCSoftwareUpgradeResponse;
                    toProto(message: _104.MsgIBCSoftwareUpgradeResponse): Uint8Array;
                    toProtoMsg(message: _104.MsgIBCSoftwareUpgradeResponse): _104.MsgIBCSoftwareUpgradeResponseProtoMsg;
                };
                MsgUpdateParams: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgUpdateParams;
                    isSDK(o: any): o is _104.MsgUpdateParamsSDKType;
                    isAmino(o: any): o is _104.MsgUpdateParamsAmino;
                    encode(message: _104.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgUpdateParams;
                    fromPartial(object: Partial<_104.MsgUpdateParams>): _104.MsgUpdateParams;
                    fromAmino(object: _104.MsgUpdateParamsAmino): _104.MsgUpdateParams;
                    toAmino(message: _104.MsgUpdateParams): _104.MsgUpdateParamsAmino;
                    fromAminoMsg(object: _104.MsgUpdateParamsAminoMsg): _104.MsgUpdateParams;
                    toAminoMsg(message: _104.MsgUpdateParams): _104.MsgUpdateParamsAminoMsg;
                    fromProtoMsg(message: _104.MsgUpdateParamsProtoMsg): _104.MsgUpdateParams;
                    toProto(message: _104.MsgUpdateParams): Uint8Array;
                    toProtoMsg(message: _104.MsgUpdateParams): _104.MsgUpdateParamsProtoMsg;
                };
                MsgUpdateParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _104.MsgUpdateParamsResponse;
                    isSDK(o: any): o is _104.MsgUpdateParamsResponseSDKType;
                    isAmino(o: any): o is _104.MsgUpdateParamsResponseAmino;
                    encode(_: _104.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.MsgUpdateParamsResponse;
                    fromPartial(_: Partial<_104.MsgUpdateParamsResponse>): _104.MsgUpdateParamsResponse;
                    fromAmino(_: _104.MsgUpdateParamsResponseAmino): _104.MsgUpdateParamsResponse;
                    toAmino(_: _104.MsgUpdateParamsResponse): _104.MsgUpdateParamsResponseAmino;
                    fromAminoMsg(object: _104.MsgUpdateParamsResponseAminoMsg): _104.MsgUpdateParamsResponse;
                    toAminoMsg(message: _104.MsgUpdateParamsResponse): _104.MsgUpdateParamsResponseAminoMsg;
                    fromProtoMsg(message: _104.MsgUpdateParamsResponseProtoMsg): _104.MsgUpdateParamsResponse;
                    toProto(message: _104.MsgUpdateParamsResponse): Uint8Array;
                    toProtoMsg(message: _104.MsgUpdateParamsResponse): _104.MsgUpdateParamsResponseProtoMsg;
                };
                QueryClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryClientStateRequest;
                    isSDK(o: any): o is _103.QueryClientStateRequestSDKType;
                    isAmino(o: any): o is _103.QueryClientStateRequestAmino;
                    encode(message: _103.QueryClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryClientStateRequest;
                    fromPartial(object: Partial<_103.QueryClientStateRequest>): _103.QueryClientStateRequest;
                    fromAmino(object: _103.QueryClientStateRequestAmino): _103.QueryClientStateRequest;
                    toAmino(message: _103.QueryClientStateRequest): _103.QueryClientStateRequestAmino;
                    fromAminoMsg(object: _103.QueryClientStateRequestAminoMsg): _103.QueryClientStateRequest;
                    toAminoMsg(message: _103.QueryClientStateRequest): _103.QueryClientStateRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryClientStateRequestProtoMsg): _103.QueryClientStateRequest;
                    toProto(message: _103.QueryClientStateRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryClientStateRequest): _103.QueryClientStateRequestProtoMsg;
                };
                QueryClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryClientStateResponse;
                    isSDK(o: any): o is _103.QueryClientStateResponseSDKType;
                    isAmino(o: any): o is _103.QueryClientStateResponseAmino;
                    encode(message: _103.QueryClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryClientStateResponse;
                    fromPartial(object: Partial<_103.QueryClientStateResponse>): _103.QueryClientStateResponse;
                    fromAmino(object: _103.QueryClientStateResponseAmino): _103.QueryClientStateResponse;
                    toAmino(message: _103.QueryClientStateResponse): _103.QueryClientStateResponseAmino;
                    fromAminoMsg(object: _103.QueryClientStateResponseAminoMsg): _103.QueryClientStateResponse;
                    toAminoMsg(message: _103.QueryClientStateResponse): _103.QueryClientStateResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryClientStateResponseProtoMsg): _103.QueryClientStateResponse;
                    toProto(message: _103.QueryClientStateResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryClientStateResponse): _103.QueryClientStateResponseProtoMsg;
                };
                QueryClientStatesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryClientStatesRequest;
                    isSDK(o: any): o is _103.QueryClientStatesRequestSDKType;
                    isAmino(o: any): o is _103.QueryClientStatesRequestAmino;
                    encode(message: _103.QueryClientStatesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryClientStatesRequest;
                    fromPartial(object: Partial<_103.QueryClientStatesRequest>): _103.QueryClientStatesRequest;
                    fromAmino(object: _103.QueryClientStatesRequestAmino): _103.QueryClientStatesRequest;
                    toAmino(message: _103.QueryClientStatesRequest): _103.QueryClientStatesRequestAmino;
                    fromAminoMsg(object: _103.QueryClientStatesRequestAminoMsg): _103.QueryClientStatesRequest;
                    toAminoMsg(message: _103.QueryClientStatesRequest): _103.QueryClientStatesRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryClientStatesRequestProtoMsg): _103.QueryClientStatesRequest;
                    toProto(message: _103.QueryClientStatesRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryClientStatesRequest): _103.QueryClientStatesRequestProtoMsg;
                };
                QueryClientStatesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryClientStatesResponse;
                    isSDK(o: any): o is _103.QueryClientStatesResponseSDKType;
                    isAmino(o: any): o is _103.QueryClientStatesResponseAmino;
                    encode(message: _103.QueryClientStatesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryClientStatesResponse;
                    fromPartial(object: Partial<_103.QueryClientStatesResponse>): _103.QueryClientStatesResponse;
                    fromAmino(object: _103.QueryClientStatesResponseAmino): _103.QueryClientStatesResponse;
                    toAmino(message: _103.QueryClientStatesResponse): _103.QueryClientStatesResponseAmino;
                    fromAminoMsg(object: _103.QueryClientStatesResponseAminoMsg): _103.QueryClientStatesResponse;
                    toAminoMsg(message: _103.QueryClientStatesResponse): _103.QueryClientStatesResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryClientStatesResponseProtoMsg): _103.QueryClientStatesResponse;
                    toProto(message: _103.QueryClientStatesResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryClientStatesResponse): _103.QueryClientStatesResponseProtoMsg;
                };
                QueryConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryConsensusStateRequest;
                    isSDK(o: any): o is _103.QueryConsensusStateRequestSDKType;
                    isAmino(o: any): o is _103.QueryConsensusStateRequestAmino;
                    encode(message: _103.QueryConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryConsensusStateRequest;
                    fromPartial(object: Partial<_103.QueryConsensusStateRequest>): _103.QueryConsensusStateRequest;
                    fromAmino(object: _103.QueryConsensusStateRequestAmino): _103.QueryConsensusStateRequest;
                    toAmino(message: _103.QueryConsensusStateRequest): _103.QueryConsensusStateRequestAmino;
                    fromAminoMsg(object: _103.QueryConsensusStateRequestAminoMsg): _103.QueryConsensusStateRequest;
                    toAminoMsg(message: _103.QueryConsensusStateRequest): _103.QueryConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryConsensusStateRequestProtoMsg): _103.QueryConsensusStateRequest;
                    toProto(message: _103.QueryConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryConsensusStateRequest): _103.QueryConsensusStateRequestProtoMsg;
                };
                QueryConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryConsensusStateResponse;
                    isSDK(o: any): o is _103.QueryConsensusStateResponseSDKType;
                    isAmino(o: any): o is _103.QueryConsensusStateResponseAmino;
                    encode(message: _103.QueryConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryConsensusStateResponse;
                    fromPartial(object: Partial<_103.QueryConsensusStateResponse>): _103.QueryConsensusStateResponse;
                    fromAmino(object: _103.QueryConsensusStateResponseAmino): _103.QueryConsensusStateResponse;
                    toAmino(message: _103.QueryConsensusStateResponse): _103.QueryConsensusStateResponseAmino;
                    fromAminoMsg(object: _103.QueryConsensusStateResponseAminoMsg): _103.QueryConsensusStateResponse;
                    toAminoMsg(message: _103.QueryConsensusStateResponse): _103.QueryConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryConsensusStateResponseProtoMsg): _103.QueryConsensusStateResponse;
                    toProto(message: _103.QueryConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryConsensusStateResponse): _103.QueryConsensusStateResponseProtoMsg;
                };
                QueryConsensusStatesRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryConsensusStatesRequest;
                    isSDK(o: any): o is _103.QueryConsensusStatesRequestSDKType;
                    isAmino(o: any): o is _103.QueryConsensusStatesRequestAmino;
                    encode(message: _103.QueryConsensusStatesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryConsensusStatesRequest;
                    fromPartial(object: Partial<_103.QueryConsensusStatesRequest>): _103.QueryConsensusStatesRequest;
                    fromAmino(object: _103.QueryConsensusStatesRequestAmino): _103.QueryConsensusStatesRequest;
                    toAmino(message: _103.QueryConsensusStatesRequest): _103.QueryConsensusStatesRequestAmino;
                    fromAminoMsg(object: _103.QueryConsensusStatesRequestAminoMsg): _103.QueryConsensusStatesRequest;
                    toAminoMsg(message: _103.QueryConsensusStatesRequest): _103.QueryConsensusStatesRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryConsensusStatesRequestProtoMsg): _103.QueryConsensusStatesRequest;
                    toProto(message: _103.QueryConsensusStatesRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryConsensusStatesRequest): _103.QueryConsensusStatesRequestProtoMsg;
                };
                QueryConsensusStatesResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryConsensusStatesResponse;
                    isSDK(o: any): o is _103.QueryConsensusStatesResponseSDKType;
                    isAmino(o: any): o is _103.QueryConsensusStatesResponseAmino;
                    encode(message: _103.QueryConsensusStatesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryConsensusStatesResponse;
                    fromPartial(object: Partial<_103.QueryConsensusStatesResponse>): _103.QueryConsensusStatesResponse;
                    fromAmino(object: _103.QueryConsensusStatesResponseAmino): _103.QueryConsensusStatesResponse;
                    toAmino(message: _103.QueryConsensusStatesResponse): _103.QueryConsensusStatesResponseAmino;
                    fromAminoMsg(object: _103.QueryConsensusStatesResponseAminoMsg): _103.QueryConsensusStatesResponse;
                    toAminoMsg(message: _103.QueryConsensusStatesResponse): _103.QueryConsensusStatesResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryConsensusStatesResponseProtoMsg): _103.QueryConsensusStatesResponse;
                    toProto(message: _103.QueryConsensusStatesResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryConsensusStatesResponse): _103.QueryConsensusStatesResponseProtoMsg;
                };
                QueryConsensusStateHeightsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryConsensusStateHeightsRequest;
                    isSDK(o: any): o is _103.QueryConsensusStateHeightsRequestSDKType;
                    isAmino(o: any): o is _103.QueryConsensusStateHeightsRequestAmino;
                    encode(message: _103.QueryConsensusStateHeightsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryConsensusStateHeightsRequest;
                    fromPartial(object: Partial<_103.QueryConsensusStateHeightsRequest>): _103.QueryConsensusStateHeightsRequest;
                    fromAmino(object: _103.QueryConsensusStateHeightsRequestAmino): _103.QueryConsensusStateHeightsRequest;
                    toAmino(message: _103.QueryConsensusStateHeightsRequest): _103.QueryConsensusStateHeightsRequestAmino;
                    fromAminoMsg(object: _103.QueryConsensusStateHeightsRequestAminoMsg): _103.QueryConsensusStateHeightsRequest;
                    toAminoMsg(message: _103.QueryConsensusStateHeightsRequest): _103.QueryConsensusStateHeightsRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryConsensusStateHeightsRequestProtoMsg): _103.QueryConsensusStateHeightsRequest;
                    toProto(message: _103.QueryConsensusStateHeightsRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryConsensusStateHeightsRequest): _103.QueryConsensusStateHeightsRequestProtoMsg;
                };
                QueryConsensusStateHeightsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryConsensusStateHeightsResponse;
                    isSDK(o: any): o is _103.QueryConsensusStateHeightsResponseSDKType;
                    isAmino(o: any): o is _103.QueryConsensusStateHeightsResponseAmino;
                    encode(message: _103.QueryConsensusStateHeightsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryConsensusStateHeightsResponse;
                    fromPartial(object: Partial<_103.QueryConsensusStateHeightsResponse>): _103.QueryConsensusStateHeightsResponse;
                    fromAmino(object: _103.QueryConsensusStateHeightsResponseAmino): _103.QueryConsensusStateHeightsResponse;
                    toAmino(message: _103.QueryConsensusStateHeightsResponse): _103.QueryConsensusStateHeightsResponseAmino;
                    fromAminoMsg(object: _103.QueryConsensusStateHeightsResponseAminoMsg): _103.QueryConsensusStateHeightsResponse;
                    toAminoMsg(message: _103.QueryConsensusStateHeightsResponse): _103.QueryConsensusStateHeightsResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryConsensusStateHeightsResponseProtoMsg): _103.QueryConsensusStateHeightsResponse;
                    toProto(message: _103.QueryConsensusStateHeightsResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryConsensusStateHeightsResponse): _103.QueryConsensusStateHeightsResponseProtoMsg;
                };
                QueryClientStatusRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryClientStatusRequest;
                    isSDK(o: any): o is _103.QueryClientStatusRequestSDKType;
                    isAmino(o: any): o is _103.QueryClientStatusRequestAmino;
                    encode(message: _103.QueryClientStatusRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryClientStatusRequest;
                    fromPartial(object: Partial<_103.QueryClientStatusRequest>): _103.QueryClientStatusRequest;
                    fromAmino(object: _103.QueryClientStatusRequestAmino): _103.QueryClientStatusRequest;
                    toAmino(message: _103.QueryClientStatusRequest): _103.QueryClientStatusRequestAmino;
                    fromAminoMsg(object: _103.QueryClientStatusRequestAminoMsg): _103.QueryClientStatusRequest;
                    toAminoMsg(message: _103.QueryClientStatusRequest): _103.QueryClientStatusRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryClientStatusRequestProtoMsg): _103.QueryClientStatusRequest;
                    toProto(message: _103.QueryClientStatusRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryClientStatusRequest): _103.QueryClientStatusRequestProtoMsg;
                };
                QueryClientStatusResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryClientStatusResponse;
                    isSDK(o: any): o is _103.QueryClientStatusResponseSDKType;
                    isAmino(o: any): o is _103.QueryClientStatusResponseAmino;
                    encode(message: _103.QueryClientStatusResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryClientStatusResponse;
                    fromPartial(object: Partial<_103.QueryClientStatusResponse>): _103.QueryClientStatusResponse;
                    fromAmino(object: _103.QueryClientStatusResponseAmino): _103.QueryClientStatusResponse;
                    toAmino(message: _103.QueryClientStatusResponse): _103.QueryClientStatusResponseAmino;
                    fromAminoMsg(object: _103.QueryClientStatusResponseAminoMsg): _103.QueryClientStatusResponse;
                    toAminoMsg(message: _103.QueryClientStatusResponse): _103.QueryClientStatusResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryClientStatusResponseProtoMsg): _103.QueryClientStatusResponse;
                    toProto(message: _103.QueryClientStatusResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryClientStatusResponse): _103.QueryClientStatusResponseProtoMsg;
                };
                QueryClientParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryClientParamsRequest;
                    isSDK(o: any): o is _103.QueryClientParamsRequestSDKType;
                    isAmino(o: any): o is _103.QueryClientParamsRequestAmino;
                    encode(_: _103.QueryClientParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryClientParamsRequest;
                    fromPartial(_: Partial<_103.QueryClientParamsRequest>): _103.QueryClientParamsRequest;
                    fromAmino(_: _103.QueryClientParamsRequestAmino): _103.QueryClientParamsRequest;
                    toAmino(_: _103.QueryClientParamsRequest): _103.QueryClientParamsRequestAmino;
                    fromAminoMsg(object: _103.QueryClientParamsRequestAminoMsg): _103.QueryClientParamsRequest;
                    toAminoMsg(message: _103.QueryClientParamsRequest): _103.QueryClientParamsRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryClientParamsRequestProtoMsg): _103.QueryClientParamsRequest;
                    toProto(message: _103.QueryClientParamsRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryClientParamsRequest): _103.QueryClientParamsRequestProtoMsg;
                };
                QueryClientParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryClientParamsResponse;
                    isSDK(o: any): o is _103.QueryClientParamsResponseSDKType;
                    isAmino(o: any): o is _103.QueryClientParamsResponseAmino;
                    encode(message: _103.QueryClientParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryClientParamsResponse;
                    fromPartial(object: Partial<_103.QueryClientParamsResponse>): _103.QueryClientParamsResponse;
                    fromAmino(object: _103.QueryClientParamsResponseAmino): _103.QueryClientParamsResponse;
                    toAmino(message: _103.QueryClientParamsResponse): _103.QueryClientParamsResponseAmino;
                    fromAminoMsg(object: _103.QueryClientParamsResponseAminoMsg): _103.QueryClientParamsResponse;
                    toAminoMsg(message: _103.QueryClientParamsResponse): _103.QueryClientParamsResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryClientParamsResponseProtoMsg): _103.QueryClientParamsResponse;
                    toProto(message: _103.QueryClientParamsResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryClientParamsResponse): _103.QueryClientParamsResponseProtoMsg;
                };
                QueryUpgradedClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryUpgradedClientStateRequest;
                    isSDK(o: any): o is _103.QueryUpgradedClientStateRequestSDKType;
                    isAmino(o: any): o is _103.QueryUpgradedClientStateRequestAmino;
                    encode(_: _103.QueryUpgradedClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryUpgradedClientStateRequest;
                    fromPartial(_: Partial<_103.QueryUpgradedClientStateRequest>): _103.QueryUpgradedClientStateRequest;
                    fromAmino(_: _103.QueryUpgradedClientStateRequestAmino): _103.QueryUpgradedClientStateRequest;
                    toAmino(_: _103.QueryUpgradedClientStateRequest): _103.QueryUpgradedClientStateRequestAmino;
                    fromAminoMsg(object: _103.QueryUpgradedClientStateRequestAminoMsg): _103.QueryUpgradedClientStateRequest;
                    toAminoMsg(message: _103.QueryUpgradedClientStateRequest): _103.QueryUpgradedClientStateRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryUpgradedClientStateRequestProtoMsg): _103.QueryUpgradedClientStateRequest;
                    toProto(message: _103.QueryUpgradedClientStateRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryUpgradedClientStateRequest): _103.QueryUpgradedClientStateRequestProtoMsg;
                };
                QueryUpgradedClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryUpgradedClientStateResponse;
                    isSDK(o: any): o is _103.QueryUpgradedClientStateResponseSDKType;
                    isAmino(o: any): o is _103.QueryUpgradedClientStateResponseAmino;
                    encode(message: _103.QueryUpgradedClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryUpgradedClientStateResponse;
                    fromPartial(object: Partial<_103.QueryUpgradedClientStateResponse>): _103.QueryUpgradedClientStateResponse;
                    fromAmino(object: _103.QueryUpgradedClientStateResponseAmino): _103.QueryUpgradedClientStateResponse;
                    toAmino(message: _103.QueryUpgradedClientStateResponse): _103.QueryUpgradedClientStateResponseAmino;
                    fromAminoMsg(object: _103.QueryUpgradedClientStateResponseAminoMsg): _103.QueryUpgradedClientStateResponse;
                    toAminoMsg(message: _103.QueryUpgradedClientStateResponse): _103.QueryUpgradedClientStateResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryUpgradedClientStateResponseProtoMsg): _103.QueryUpgradedClientStateResponse;
                    toProto(message: _103.QueryUpgradedClientStateResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryUpgradedClientStateResponse): _103.QueryUpgradedClientStateResponseProtoMsg;
                };
                QueryUpgradedConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryUpgradedConsensusStateRequest;
                    isSDK(o: any): o is _103.QueryUpgradedConsensusStateRequestSDKType;
                    isAmino(o: any): o is _103.QueryUpgradedConsensusStateRequestAmino;
                    encode(_: _103.QueryUpgradedConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryUpgradedConsensusStateRequest;
                    fromPartial(_: Partial<_103.QueryUpgradedConsensusStateRequest>): _103.QueryUpgradedConsensusStateRequest;
                    fromAmino(_: _103.QueryUpgradedConsensusStateRequestAmino): _103.QueryUpgradedConsensusStateRequest;
                    toAmino(_: _103.QueryUpgradedConsensusStateRequest): _103.QueryUpgradedConsensusStateRequestAmino;
                    fromAminoMsg(object: _103.QueryUpgradedConsensusStateRequestAminoMsg): _103.QueryUpgradedConsensusStateRequest;
                    toAminoMsg(message: _103.QueryUpgradedConsensusStateRequest): _103.QueryUpgradedConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryUpgradedConsensusStateRequestProtoMsg): _103.QueryUpgradedConsensusStateRequest;
                    toProto(message: _103.QueryUpgradedConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryUpgradedConsensusStateRequest): _103.QueryUpgradedConsensusStateRequestProtoMsg;
                };
                QueryUpgradedConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryUpgradedConsensusStateResponse;
                    isSDK(o: any): o is _103.QueryUpgradedConsensusStateResponseSDKType;
                    isAmino(o: any): o is _103.QueryUpgradedConsensusStateResponseAmino;
                    encode(message: _103.QueryUpgradedConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryUpgradedConsensusStateResponse;
                    fromPartial(object: Partial<_103.QueryUpgradedConsensusStateResponse>): _103.QueryUpgradedConsensusStateResponse;
                    fromAmino(object: _103.QueryUpgradedConsensusStateResponseAmino): _103.QueryUpgradedConsensusStateResponse;
                    toAmino(message: _103.QueryUpgradedConsensusStateResponse): _103.QueryUpgradedConsensusStateResponseAmino;
                    fromAminoMsg(object: _103.QueryUpgradedConsensusStateResponseAminoMsg): _103.QueryUpgradedConsensusStateResponse;
                    toAminoMsg(message: _103.QueryUpgradedConsensusStateResponse): _103.QueryUpgradedConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryUpgradedConsensusStateResponseProtoMsg): _103.QueryUpgradedConsensusStateResponse;
                    toProto(message: _103.QueryUpgradedConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryUpgradedConsensusStateResponse): _103.QueryUpgradedConsensusStateResponseProtoMsg;
                };
                QueryVerifyMembershipRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryVerifyMembershipRequest;
                    isSDK(o: any): o is _103.QueryVerifyMembershipRequestSDKType;
                    isAmino(o: any): o is _103.QueryVerifyMembershipRequestAmino;
                    encode(message: _103.QueryVerifyMembershipRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryVerifyMembershipRequest;
                    fromPartial(object: Partial<_103.QueryVerifyMembershipRequest>): _103.QueryVerifyMembershipRequest;
                    fromAmino(object: _103.QueryVerifyMembershipRequestAmino): _103.QueryVerifyMembershipRequest;
                    toAmino(message: _103.QueryVerifyMembershipRequest): _103.QueryVerifyMembershipRequestAmino;
                    fromAminoMsg(object: _103.QueryVerifyMembershipRequestAminoMsg): _103.QueryVerifyMembershipRequest;
                    toAminoMsg(message: _103.QueryVerifyMembershipRequest): _103.QueryVerifyMembershipRequestAminoMsg;
                    fromProtoMsg(message: _103.QueryVerifyMembershipRequestProtoMsg): _103.QueryVerifyMembershipRequest;
                    toProto(message: _103.QueryVerifyMembershipRequest): Uint8Array;
                    toProtoMsg(message: _103.QueryVerifyMembershipRequest): _103.QueryVerifyMembershipRequestProtoMsg;
                };
                QueryVerifyMembershipResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _103.QueryVerifyMembershipResponse;
                    isSDK(o: any): o is _103.QueryVerifyMembershipResponseSDKType;
                    isAmino(o: any): o is _103.QueryVerifyMembershipResponseAmino;
                    encode(message: _103.QueryVerifyMembershipResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.QueryVerifyMembershipResponse;
                    fromPartial(object: Partial<_103.QueryVerifyMembershipResponse>): _103.QueryVerifyMembershipResponse;
                    fromAmino(object: _103.QueryVerifyMembershipResponseAmino): _103.QueryVerifyMembershipResponse;
                    toAmino(message: _103.QueryVerifyMembershipResponse): _103.QueryVerifyMembershipResponseAmino;
                    fromAminoMsg(object: _103.QueryVerifyMembershipResponseAminoMsg): _103.QueryVerifyMembershipResponse;
                    toAminoMsg(message: _103.QueryVerifyMembershipResponse): _103.QueryVerifyMembershipResponseAminoMsg;
                    fromProtoMsg(message: _103.QueryVerifyMembershipResponseProtoMsg): _103.QueryVerifyMembershipResponse;
                    toProto(message: _103.QueryVerifyMembershipResponse): Uint8Array;
                    toProtoMsg(message: _103.QueryVerifyMembershipResponse): _103.QueryVerifyMembershipResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _102.GenesisState;
                    isSDK(o: any): o is _102.GenesisStateSDKType;
                    isAmino(o: any): o is _102.GenesisStateAmino;
                    encode(message: _102.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.GenesisState;
                    fromPartial(object: Partial<_102.GenesisState>): _102.GenesisState;
                    fromAmino(object: _102.GenesisStateAmino): _102.GenesisState;
                    toAmino(message: _102.GenesisState): _102.GenesisStateAmino;
                    fromAminoMsg(object: _102.GenesisStateAminoMsg): _102.GenesisState;
                    toAminoMsg(message: _102.GenesisState): _102.GenesisStateAminoMsg;
                    fromProtoMsg(message: _102.GenesisStateProtoMsg): _102.GenesisState;
                    toProto(message: _102.GenesisState): Uint8Array;
                    toProtoMsg(message: _102.GenesisState): _102.GenesisStateProtoMsg;
                };
                GenesisMetadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _102.GenesisMetadata;
                    isSDK(o: any): o is _102.GenesisMetadataSDKType;
                    isAmino(o: any): o is _102.GenesisMetadataAmino;
                    encode(message: _102.GenesisMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.GenesisMetadata;
                    fromPartial(object: Partial<_102.GenesisMetadata>): _102.GenesisMetadata;
                    fromAmino(object: _102.GenesisMetadataAmino): _102.GenesisMetadata;
                    toAmino(message: _102.GenesisMetadata): _102.GenesisMetadataAmino;
                    fromAminoMsg(object: _102.GenesisMetadataAminoMsg): _102.GenesisMetadata;
                    toAminoMsg(message: _102.GenesisMetadata): _102.GenesisMetadataAminoMsg;
                    fromProtoMsg(message: _102.GenesisMetadataProtoMsg): _102.GenesisMetadata;
                    toProto(message: _102.GenesisMetadata): Uint8Array;
                    toProtoMsg(message: _102.GenesisMetadata): _102.GenesisMetadataProtoMsg;
                };
                IdentifiedGenesisMetadata: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _102.IdentifiedGenesisMetadata;
                    isSDK(o: any): o is _102.IdentifiedGenesisMetadataSDKType;
                    isAmino(o: any): o is _102.IdentifiedGenesisMetadataAmino;
                    encode(message: _102.IdentifiedGenesisMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.IdentifiedGenesisMetadata;
                    fromPartial(object: Partial<_102.IdentifiedGenesisMetadata>): _102.IdentifiedGenesisMetadata;
                    fromAmino(object: _102.IdentifiedGenesisMetadataAmino): _102.IdentifiedGenesisMetadata;
                    toAmino(message: _102.IdentifiedGenesisMetadata): _102.IdentifiedGenesisMetadataAmino;
                    fromAminoMsg(object: _102.IdentifiedGenesisMetadataAminoMsg): _102.IdentifiedGenesisMetadata;
                    toAminoMsg(message: _102.IdentifiedGenesisMetadata): _102.IdentifiedGenesisMetadataAminoMsg;
                    fromProtoMsg(message: _102.IdentifiedGenesisMetadataProtoMsg): _102.IdentifiedGenesisMetadata;
                    toProto(message: _102.IdentifiedGenesisMetadata): Uint8Array;
                    toProtoMsg(message: _102.IdentifiedGenesisMetadata): _102.IdentifiedGenesisMetadataProtoMsg;
                };
                IdentifiedClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _101.IdentifiedClientState;
                    isSDK(o: any): o is _101.IdentifiedClientStateSDKType;
                    isAmino(o: any): o is _101.IdentifiedClientStateAmino;
                    encode(message: _101.IdentifiedClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.IdentifiedClientState;
                    fromPartial(object: Partial<_101.IdentifiedClientState>): _101.IdentifiedClientState;
                    fromAmino(object: _101.IdentifiedClientStateAmino): _101.IdentifiedClientState;
                    toAmino(message: _101.IdentifiedClientState): _101.IdentifiedClientStateAmino;
                    fromAminoMsg(object: _101.IdentifiedClientStateAminoMsg): _101.IdentifiedClientState;
                    toAminoMsg(message: _101.IdentifiedClientState): _101.IdentifiedClientStateAminoMsg;
                    fromProtoMsg(message: _101.IdentifiedClientStateProtoMsg): _101.IdentifiedClientState;
                    toProto(message: _101.IdentifiedClientState): Uint8Array;
                    toProtoMsg(message: _101.IdentifiedClientState): _101.IdentifiedClientStateProtoMsg;
                };
                ConsensusStateWithHeight: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _101.ConsensusStateWithHeight;
                    isSDK(o: any): o is _101.ConsensusStateWithHeightSDKType;
                    isAmino(o: any): o is _101.ConsensusStateWithHeightAmino;
                    encode(message: _101.ConsensusStateWithHeight, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.ConsensusStateWithHeight;
                    fromPartial(object: Partial<_101.ConsensusStateWithHeight>): _101.ConsensusStateWithHeight;
                    fromAmino(object: _101.ConsensusStateWithHeightAmino): _101.ConsensusStateWithHeight;
                    toAmino(message: _101.ConsensusStateWithHeight): _101.ConsensusStateWithHeightAmino;
                    fromAminoMsg(object: _101.ConsensusStateWithHeightAminoMsg): _101.ConsensusStateWithHeight;
                    toAminoMsg(message: _101.ConsensusStateWithHeight): _101.ConsensusStateWithHeightAminoMsg;
                    fromProtoMsg(message: _101.ConsensusStateWithHeightProtoMsg): _101.ConsensusStateWithHeight;
                    toProto(message: _101.ConsensusStateWithHeight): Uint8Array;
                    toProtoMsg(message: _101.ConsensusStateWithHeight): _101.ConsensusStateWithHeightProtoMsg;
                };
                ClientConsensusStates: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _101.ClientConsensusStates;
                    isSDK(o: any): o is _101.ClientConsensusStatesSDKType;
                    isAmino(o: any): o is _101.ClientConsensusStatesAmino;
                    encode(message: _101.ClientConsensusStates, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.ClientConsensusStates;
                    fromPartial(object: Partial<_101.ClientConsensusStates>): _101.ClientConsensusStates;
                    fromAmino(object: _101.ClientConsensusStatesAmino): _101.ClientConsensusStates;
                    toAmino(message: _101.ClientConsensusStates): _101.ClientConsensusStatesAmino;
                    fromAminoMsg(object: _101.ClientConsensusStatesAminoMsg): _101.ClientConsensusStates;
                    toAminoMsg(message: _101.ClientConsensusStates): _101.ClientConsensusStatesAminoMsg;
                    fromProtoMsg(message: _101.ClientConsensusStatesProtoMsg): _101.ClientConsensusStates;
                    toProto(message: _101.ClientConsensusStates): Uint8Array;
                    toProtoMsg(message: _101.ClientConsensusStates): _101.ClientConsensusStatesProtoMsg;
                };
                Height: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _101.Height;
                    isSDK(o: any): o is _101.HeightSDKType;
                    isAmino(o: any): o is _101.HeightAmino;
                    encode(message: _101.Height, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.Height;
                    fromPartial(object: Partial<_101.Height>): _101.Height;
                    fromAmino(object: _101.HeightAmino): _101.Height;
                    toAmino(message: _101.Height): _101.HeightAmino;
                    fromAminoMsg(object: _101.HeightAminoMsg): _101.Height;
                    toAminoMsg(message: _101.Height): _101.HeightAminoMsg;
                    fromProtoMsg(message: _101.HeightProtoMsg): _101.Height;
                    toProto(message: _101.Height): Uint8Array;
                    toProtoMsg(message: _101.Height): _101.HeightProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _101.Params;
                    isSDK(o: any): o is _101.ParamsSDKType;
                    isAmino(o: any): o is _101.ParamsAmino;
                    encode(message: _101.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.Params;
                    fromPartial(object: Partial<_101.Params>): _101.Params;
                    fromAmino(object: _101.ParamsAmino): _101.Params;
                    toAmino(message: _101.Params): _101.ParamsAmino;
                    fromAminoMsg(object: _101.ParamsAminoMsg): _101.Params;
                    toAminoMsg(message: _101.Params): _101.ParamsAminoMsg;
                    fromProtoMsg(message: _101.ParamsProtoMsg): _101.Params;
                    toProto(message: _101.Params): Uint8Array;
                    toProtoMsg(message: _101.Params): _101.ParamsProtoMsg;
                };
                ClientUpdateProposal: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _101.ClientUpdateProposal;
                    isSDK(o: any): o is _101.ClientUpdateProposalSDKType;
                    isAmino(o: any): o is _101.ClientUpdateProposalAmino;
                    encode(message: _101.ClientUpdateProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.ClientUpdateProposal;
                    fromPartial(object: Partial<_101.ClientUpdateProposal>): _101.ClientUpdateProposal;
                    fromAmino(object: _101.ClientUpdateProposalAmino): _101.ClientUpdateProposal;
                    toAmino(message: _101.ClientUpdateProposal): _101.ClientUpdateProposalAmino;
                    fromAminoMsg(object: _101.ClientUpdateProposalAminoMsg): _101.ClientUpdateProposal;
                    toAminoMsg(message: _101.ClientUpdateProposal): _101.ClientUpdateProposalAminoMsg;
                    fromProtoMsg(message: _101.ClientUpdateProposalProtoMsg): _101.ClientUpdateProposal;
                    toProto(message: _101.ClientUpdateProposal): Uint8Array;
                    toProtoMsg(message: _101.ClientUpdateProposal): _101.ClientUpdateProposalProtoMsg;
                };
                UpgradeProposal: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _101.UpgradeProposal;
                    isSDK(o: any): o is _101.UpgradeProposalSDKType;
                    isAmino(o: any): o is _101.UpgradeProposalAmino;
                    encode(message: _101.UpgradeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.UpgradeProposal;
                    fromPartial(object: Partial<_101.UpgradeProposal>): _101.UpgradeProposal;
                    fromAmino(object: _101.UpgradeProposalAmino): _101.UpgradeProposal;
                    toAmino(message: _101.UpgradeProposal): _101.UpgradeProposalAmino;
                    fromAminoMsg(object: _101.UpgradeProposalAminoMsg): _101.UpgradeProposal;
                    toAminoMsg(message: _101.UpgradeProposal): _101.UpgradeProposalAminoMsg;
                    fromProtoMsg(message: _101.UpgradeProposalProtoMsg): _101.UpgradeProposal;
                    toProto(message: _101.UpgradeProposal): Uint8Array;
                    toProtoMsg(message: _101.UpgradeProposal): _101.UpgradeProposalProtoMsg;
                };
            };
        }
        namespace commitment {
            const v1: {
                MerkleRoot: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _105.MerkleRoot;
                    isSDK(o: any): o is _105.MerkleRootSDKType;
                    isAmino(o: any): o is _105.MerkleRootAmino;
                    encode(message: _105.MerkleRoot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.MerkleRoot;
                    fromPartial(object: Partial<_105.MerkleRoot>): _105.MerkleRoot;
                    fromAmino(object: _105.MerkleRootAmino): _105.MerkleRoot;
                    toAmino(message: _105.MerkleRoot): _105.MerkleRootAmino;
                    fromAminoMsg(object: _105.MerkleRootAminoMsg): _105.MerkleRoot;
                    toAminoMsg(message: _105.MerkleRoot): _105.MerkleRootAminoMsg;
                    fromProtoMsg(message: _105.MerkleRootProtoMsg): _105.MerkleRoot;
                    toProto(message: _105.MerkleRoot): Uint8Array;
                    toProtoMsg(message: _105.MerkleRoot): _105.MerkleRootProtoMsg;
                };
                MerklePrefix: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _105.MerklePrefix;
                    isSDK(o: any): o is _105.MerklePrefixSDKType;
                    isAmino(o: any): o is _105.MerklePrefixAmino;
                    encode(message: _105.MerklePrefix, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.MerklePrefix;
                    fromPartial(object: Partial<_105.MerklePrefix>): _105.MerklePrefix;
                    fromAmino(object: _105.MerklePrefixAmino): _105.MerklePrefix;
                    toAmino(message: _105.MerklePrefix): _105.MerklePrefixAmino;
                    fromAminoMsg(object: _105.MerklePrefixAminoMsg): _105.MerklePrefix;
                    toAminoMsg(message: _105.MerklePrefix): _105.MerklePrefixAminoMsg;
                    fromProtoMsg(message: _105.MerklePrefixProtoMsg): _105.MerklePrefix;
                    toProto(message: _105.MerklePrefix): Uint8Array;
                    toProtoMsg(message: _105.MerklePrefix): _105.MerklePrefixProtoMsg;
                };
                MerklePath: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _105.MerklePath;
                    isSDK(o: any): o is _105.MerklePathSDKType;
                    isAmino(o: any): o is _105.MerklePathAmino;
                    encode(message: _105.MerklePath, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.MerklePath;
                    fromPartial(object: Partial<_105.MerklePath>): _105.MerklePath;
                    fromAmino(object: _105.MerklePathAmino): _105.MerklePath;
                    toAmino(message: _105.MerklePath): _105.MerklePathAmino;
                    fromAminoMsg(object: _105.MerklePathAminoMsg): _105.MerklePath;
                    toAminoMsg(message: _105.MerklePath): _105.MerklePathAminoMsg;
                    fromProtoMsg(message: _105.MerklePathProtoMsg): _105.MerklePath;
                    toProto(message: _105.MerklePath): Uint8Array;
                    toProtoMsg(message: _105.MerklePath): _105.MerklePathProtoMsg;
                };
                MerkleProof: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _105.MerkleProof;
                    isSDK(o: any): o is _105.MerkleProofSDKType;
                    isAmino(o: any): o is _105.MerkleProofAmino;
                    encode(message: _105.MerkleProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.MerkleProof;
                    fromPartial(object: Partial<_105.MerkleProof>): _105.MerkleProof;
                    fromAmino(object: _105.MerkleProofAmino): _105.MerkleProof;
                    toAmino(message: _105.MerkleProof): _105.MerkleProofAmino;
                    fromAminoMsg(object: _105.MerkleProofAminoMsg): _105.MerkleProof;
                    toAminoMsg(message: _105.MerkleProof): _105.MerkleProofAminoMsg;
                    fromProtoMsg(message: _105.MerkleProofProtoMsg): _105.MerkleProof;
                    toProto(message: _105.MerkleProof): Uint8Array;
                    toProtoMsg(message: _105.MerkleProof): _105.MerkleProofProtoMsg;
                };
            };
        }
        namespace connection {
            const v1: {
                MsgClientImpl: typeof _323.MsgClientImpl;
                createClientImpl: (rpc: import("../helpers").Rpc) => _323.MsgClientImpl;
                QueryClientImpl: typeof _315.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    connection(request: _108.QueryConnectionRequest): Promise<_108.QueryConnectionResponse>;
                    connections(request?: _108.QueryConnectionsRequest): Promise<_108.QueryConnectionsResponse>;
                    clientConnections(request: _108.QueryClientConnectionsRequest): Promise<_108.QueryClientConnectionsResponse>;
                    connectionClientState(request: _108.QueryConnectionClientStateRequest): Promise<_108.QueryConnectionClientStateResponse>;
                    connectionConsensusState(request: _108.QueryConnectionConsensusStateRequest): Promise<_108.QueryConnectionConsensusStateResponse>;
                    connectionParams(request?: _108.QueryConnectionParamsRequest): Promise<_108.QueryConnectionParamsResponse>;
                };
                LCDQueryClient: typeof _307.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        connectionOpenInit(value: _109.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenTry(value: _109.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenAck(value: _109.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenConfirm(value: _109.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateConnectionParams(value: _109.MsgUpdateParams): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        connectionOpenInit(value: _109.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: _109.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: _109.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: _109.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: _109.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: _109.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: _109.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: _109.MsgConnectionOpenConfirm;
                        };
                        updateConnectionParams(value: _109.MsgUpdateParams): {
                            typeUrl: string;
                            value: _109.MsgUpdateParams;
                        };
                    };
                    fromPartial: {
                        connectionOpenInit(value: _109.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: _109.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: _109.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: _109.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: _109.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: _109.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: _109.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: _109.MsgConnectionOpenConfirm;
                        };
                        updateConnectionParams(value: _109.MsgUpdateParams): {
                            typeUrl: string;
                            value: _109.MsgUpdateParams;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.connection.v1.MsgConnectionOpenInit": {
                        aminoType: string;
                        toAmino: (message: _109.MsgConnectionOpenInit) => _109.MsgConnectionOpenInitAmino;
                        fromAmino: (object: _109.MsgConnectionOpenInitAmino) => _109.MsgConnectionOpenInit;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenTry": {
                        aminoType: string;
                        toAmino: (message: _109.MsgConnectionOpenTry) => _109.MsgConnectionOpenTryAmino;
                        fromAmino: (object: _109.MsgConnectionOpenTryAmino) => _109.MsgConnectionOpenTry;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenAck": {
                        aminoType: string;
                        toAmino: (message: _109.MsgConnectionOpenAck) => _109.MsgConnectionOpenAckAmino;
                        fromAmino: (object: _109.MsgConnectionOpenAckAmino) => _109.MsgConnectionOpenAck;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenConfirm": {
                        aminoType: string;
                        toAmino: (message: _109.MsgConnectionOpenConfirm) => _109.MsgConnectionOpenConfirmAmino;
                        fromAmino: (object: _109.MsgConnectionOpenConfirmAmino) => _109.MsgConnectionOpenConfirm;
                    };
                    "/ibc.core.connection.v1.MsgUpdateParams": {
                        aminoType: string;
                        toAmino: (message: _109.MsgUpdateParams) => _109.MsgUpdateParamsAmino;
                        fromAmino: (object: _109.MsgUpdateParamsAmino) => _109.MsgUpdateParams;
                    };
                };
                MsgConnectionOpenInit: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgConnectionOpenInit;
                    isSDK(o: any): o is _109.MsgConnectionOpenInitSDKType;
                    isAmino(o: any): o is _109.MsgConnectionOpenInitAmino;
                    encode(message: _109.MsgConnectionOpenInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgConnectionOpenInit;
                    fromPartial(object: Partial<_109.MsgConnectionOpenInit>): _109.MsgConnectionOpenInit;
                    fromAmino(object: _109.MsgConnectionOpenInitAmino): _109.MsgConnectionOpenInit;
                    toAmino(message: _109.MsgConnectionOpenInit): _109.MsgConnectionOpenInitAmino;
                    fromAminoMsg(object: _109.MsgConnectionOpenInitAminoMsg): _109.MsgConnectionOpenInit;
                    toAminoMsg(message: _109.MsgConnectionOpenInit): _109.MsgConnectionOpenInitAminoMsg;
                    fromProtoMsg(message: _109.MsgConnectionOpenInitProtoMsg): _109.MsgConnectionOpenInit;
                    toProto(message: _109.MsgConnectionOpenInit): Uint8Array;
                    toProtoMsg(message: _109.MsgConnectionOpenInit): _109.MsgConnectionOpenInitProtoMsg;
                };
                MsgConnectionOpenInitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgConnectionOpenInitResponse;
                    isSDK(o: any): o is _109.MsgConnectionOpenInitResponseSDKType;
                    isAmino(o: any): o is _109.MsgConnectionOpenInitResponseAmino;
                    encode(_: _109.MsgConnectionOpenInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgConnectionOpenInitResponse;
                    fromPartial(_: Partial<_109.MsgConnectionOpenInitResponse>): _109.MsgConnectionOpenInitResponse;
                    fromAmino(_: _109.MsgConnectionOpenInitResponseAmino): _109.MsgConnectionOpenInitResponse;
                    toAmino(_: _109.MsgConnectionOpenInitResponse): _109.MsgConnectionOpenInitResponseAmino;
                    fromAminoMsg(object: _109.MsgConnectionOpenInitResponseAminoMsg): _109.MsgConnectionOpenInitResponse;
                    toAminoMsg(message: _109.MsgConnectionOpenInitResponse): _109.MsgConnectionOpenInitResponseAminoMsg;
                    fromProtoMsg(message: _109.MsgConnectionOpenInitResponseProtoMsg): _109.MsgConnectionOpenInitResponse;
                    toProto(message: _109.MsgConnectionOpenInitResponse): Uint8Array;
                    toProtoMsg(message: _109.MsgConnectionOpenInitResponse): _109.MsgConnectionOpenInitResponseProtoMsg;
                };
                MsgConnectionOpenTry: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgConnectionOpenTry;
                    isSDK(o: any): o is _109.MsgConnectionOpenTrySDKType;
                    isAmino(o: any): o is _109.MsgConnectionOpenTryAmino;
                    encode(message: _109.MsgConnectionOpenTry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgConnectionOpenTry;
                    fromPartial(object: Partial<_109.MsgConnectionOpenTry>): _109.MsgConnectionOpenTry;
                    fromAmino(object: _109.MsgConnectionOpenTryAmino): _109.MsgConnectionOpenTry;
                    toAmino(message: _109.MsgConnectionOpenTry): _109.MsgConnectionOpenTryAmino;
                    fromAminoMsg(object: _109.MsgConnectionOpenTryAminoMsg): _109.MsgConnectionOpenTry;
                    toAminoMsg(message: _109.MsgConnectionOpenTry): _109.MsgConnectionOpenTryAminoMsg;
                    fromProtoMsg(message: _109.MsgConnectionOpenTryProtoMsg): _109.MsgConnectionOpenTry;
                    toProto(message: _109.MsgConnectionOpenTry): Uint8Array;
                    toProtoMsg(message: _109.MsgConnectionOpenTry): _109.MsgConnectionOpenTryProtoMsg;
                };
                MsgConnectionOpenTryResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgConnectionOpenTryResponse;
                    isSDK(o: any): o is _109.MsgConnectionOpenTryResponseSDKType;
                    isAmino(o: any): o is _109.MsgConnectionOpenTryResponseAmino;
                    encode(_: _109.MsgConnectionOpenTryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgConnectionOpenTryResponse;
                    fromPartial(_: Partial<_109.MsgConnectionOpenTryResponse>): _109.MsgConnectionOpenTryResponse;
                    fromAmino(_: _109.MsgConnectionOpenTryResponseAmino): _109.MsgConnectionOpenTryResponse;
                    toAmino(_: _109.MsgConnectionOpenTryResponse): _109.MsgConnectionOpenTryResponseAmino;
                    fromAminoMsg(object: _109.MsgConnectionOpenTryResponseAminoMsg): _109.MsgConnectionOpenTryResponse;
                    toAminoMsg(message: _109.MsgConnectionOpenTryResponse): _109.MsgConnectionOpenTryResponseAminoMsg;
                    fromProtoMsg(message: _109.MsgConnectionOpenTryResponseProtoMsg): _109.MsgConnectionOpenTryResponse;
                    toProto(message: _109.MsgConnectionOpenTryResponse): Uint8Array;
                    toProtoMsg(message: _109.MsgConnectionOpenTryResponse): _109.MsgConnectionOpenTryResponseProtoMsg;
                };
                MsgConnectionOpenAck: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgConnectionOpenAck;
                    isSDK(o: any): o is _109.MsgConnectionOpenAckSDKType;
                    isAmino(o: any): o is _109.MsgConnectionOpenAckAmino;
                    encode(message: _109.MsgConnectionOpenAck, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgConnectionOpenAck;
                    fromPartial(object: Partial<_109.MsgConnectionOpenAck>): _109.MsgConnectionOpenAck;
                    fromAmino(object: _109.MsgConnectionOpenAckAmino): _109.MsgConnectionOpenAck;
                    toAmino(message: _109.MsgConnectionOpenAck): _109.MsgConnectionOpenAckAmino;
                    fromAminoMsg(object: _109.MsgConnectionOpenAckAminoMsg): _109.MsgConnectionOpenAck;
                    toAminoMsg(message: _109.MsgConnectionOpenAck): _109.MsgConnectionOpenAckAminoMsg;
                    fromProtoMsg(message: _109.MsgConnectionOpenAckProtoMsg): _109.MsgConnectionOpenAck;
                    toProto(message: _109.MsgConnectionOpenAck): Uint8Array;
                    toProtoMsg(message: _109.MsgConnectionOpenAck): _109.MsgConnectionOpenAckProtoMsg;
                };
                MsgConnectionOpenAckResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgConnectionOpenAckResponse;
                    isSDK(o: any): o is _109.MsgConnectionOpenAckResponseSDKType;
                    isAmino(o: any): o is _109.MsgConnectionOpenAckResponseAmino;
                    encode(_: _109.MsgConnectionOpenAckResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgConnectionOpenAckResponse;
                    fromPartial(_: Partial<_109.MsgConnectionOpenAckResponse>): _109.MsgConnectionOpenAckResponse;
                    fromAmino(_: _109.MsgConnectionOpenAckResponseAmino): _109.MsgConnectionOpenAckResponse;
                    toAmino(_: _109.MsgConnectionOpenAckResponse): _109.MsgConnectionOpenAckResponseAmino;
                    fromAminoMsg(object: _109.MsgConnectionOpenAckResponseAminoMsg): _109.MsgConnectionOpenAckResponse;
                    toAminoMsg(message: _109.MsgConnectionOpenAckResponse): _109.MsgConnectionOpenAckResponseAminoMsg;
                    fromProtoMsg(message: _109.MsgConnectionOpenAckResponseProtoMsg): _109.MsgConnectionOpenAckResponse;
                    toProto(message: _109.MsgConnectionOpenAckResponse): Uint8Array;
                    toProtoMsg(message: _109.MsgConnectionOpenAckResponse): _109.MsgConnectionOpenAckResponseProtoMsg;
                };
                MsgConnectionOpenConfirm: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgConnectionOpenConfirm;
                    isSDK(o: any): o is _109.MsgConnectionOpenConfirmSDKType;
                    isAmino(o: any): o is _109.MsgConnectionOpenConfirmAmino;
                    encode(message: _109.MsgConnectionOpenConfirm, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgConnectionOpenConfirm;
                    fromPartial(object: Partial<_109.MsgConnectionOpenConfirm>): _109.MsgConnectionOpenConfirm;
                    fromAmino(object: _109.MsgConnectionOpenConfirmAmino): _109.MsgConnectionOpenConfirm;
                    toAmino(message: _109.MsgConnectionOpenConfirm): _109.MsgConnectionOpenConfirmAmino;
                    fromAminoMsg(object: _109.MsgConnectionOpenConfirmAminoMsg): _109.MsgConnectionOpenConfirm;
                    toAminoMsg(message: _109.MsgConnectionOpenConfirm): _109.MsgConnectionOpenConfirmAminoMsg;
                    fromProtoMsg(message: _109.MsgConnectionOpenConfirmProtoMsg): _109.MsgConnectionOpenConfirm;
                    toProto(message: _109.MsgConnectionOpenConfirm): Uint8Array;
                    toProtoMsg(message: _109.MsgConnectionOpenConfirm): _109.MsgConnectionOpenConfirmProtoMsg;
                };
                MsgConnectionOpenConfirmResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgConnectionOpenConfirmResponse;
                    isSDK(o: any): o is _109.MsgConnectionOpenConfirmResponseSDKType;
                    isAmino(o: any): o is _109.MsgConnectionOpenConfirmResponseAmino;
                    encode(_: _109.MsgConnectionOpenConfirmResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgConnectionOpenConfirmResponse;
                    fromPartial(_: Partial<_109.MsgConnectionOpenConfirmResponse>): _109.MsgConnectionOpenConfirmResponse;
                    fromAmino(_: _109.MsgConnectionOpenConfirmResponseAmino): _109.MsgConnectionOpenConfirmResponse;
                    toAmino(_: _109.MsgConnectionOpenConfirmResponse): _109.MsgConnectionOpenConfirmResponseAmino;
                    fromAminoMsg(object: _109.MsgConnectionOpenConfirmResponseAminoMsg): _109.MsgConnectionOpenConfirmResponse;
                    toAminoMsg(message: _109.MsgConnectionOpenConfirmResponse): _109.MsgConnectionOpenConfirmResponseAminoMsg;
                    fromProtoMsg(message: _109.MsgConnectionOpenConfirmResponseProtoMsg): _109.MsgConnectionOpenConfirmResponse;
                    toProto(message: _109.MsgConnectionOpenConfirmResponse): Uint8Array;
                    toProtoMsg(message: _109.MsgConnectionOpenConfirmResponse): _109.MsgConnectionOpenConfirmResponseProtoMsg;
                };
                MsgUpdateParams: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgUpdateParams;
                    isSDK(o: any): o is _109.MsgUpdateParamsSDKType;
                    isAmino(o: any): o is _109.MsgUpdateParamsAmino;
                    encode(message: _109.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgUpdateParams;
                    fromPartial(object: Partial<_109.MsgUpdateParams>): _109.MsgUpdateParams;
                    fromAmino(object: _109.MsgUpdateParamsAmino): _109.MsgUpdateParams;
                    toAmino(message: _109.MsgUpdateParams): _109.MsgUpdateParamsAmino;
                    fromAminoMsg(object: _109.MsgUpdateParamsAminoMsg): _109.MsgUpdateParams;
                    toAminoMsg(message: _109.MsgUpdateParams): _109.MsgUpdateParamsAminoMsg;
                    fromProtoMsg(message: _109.MsgUpdateParamsProtoMsg): _109.MsgUpdateParams;
                    toProto(message: _109.MsgUpdateParams): Uint8Array;
                    toProtoMsg(message: _109.MsgUpdateParams): _109.MsgUpdateParamsProtoMsg;
                };
                MsgUpdateParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _109.MsgUpdateParamsResponse;
                    isSDK(o: any): o is _109.MsgUpdateParamsResponseSDKType;
                    isAmino(o: any): o is _109.MsgUpdateParamsResponseAmino;
                    encode(_: _109.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _109.MsgUpdateParamsResponse;
                    fromPartial(_: Partial<_109.MsgUpdateParamsResponse>): _109.MsgUpdateParamsResponse;
                    fromAmino(_: _109.MsgUpdateParamsResponseAmino): _109.MsgUpdateParamsResponse;
                    toAmino(_: _109.MsgUpdateParamsResponse): _109.MsgUpdateParamsResponseAmino;
                    fromAminoMsg(object: _109.MsgUpdateParamsResponseAminoMsg): _109.MsgUpdateParamsResponse;
                    toAminoMsg(message: _109.MsgUpdateParamsResponse): _109.MsgUpdateParamsResponseAminoMsg;
                    fromProtoMsg(message: _109.MsgUpdateParamsResponseProtoMsg): _109.MsgUpdateParamsResponse;
                    toProto(message: _109.MsgUpdateParamsResponse): Uint8Array;
                    toProtoMsg(message: _109.MsgUpdateParamsResponse): _109.MsgUpdateParamsResponseProtoMsg;
                };
                QueryConnectionRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionRequest;
                    isSDK(o: any): o is _108.QueryConnectionRequestSDKType;
                    isAmino(o: any): o is _108.QueryConnectionRequestAmino;
                    encode(message: _108.QueryConnectionRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionRequest;
                    fromPartial(object: Partial<_108.QueryConnectionRequest>): _108.QueryConnectionRequest;
                    fromAmino(object: _108.QueryConnectionRequestAmino): _108.QueryConnectionRequest;
                    toAmino(message: _108.QueryConnectionRequest): _108.QueryConnectionRequestAmino;
                    fromAminoMsg(object: _108.QueryConnectionRequestAminoMsg): _108.QueryConnectionRequest;
                    toAminoMsg(message: _108.QueryConnectionRequest): _108.QueryConnectionRequestAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionRequestProtoMsg): _108.QueryConnectionRequest;
                    toProto(message: _108.QueryConnectionRequest): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionRequest): _108.QueryConnectionRequestProtoMsg;
                };
                QueryConnectionResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionResponse;
                    isSDK(o: any): o is _108.QueryConnectionResponseSDKType;
                    isAmino(o: any): o is _108.QueryConnectionResponseAmino;
                    encode(message: _108.QueryConnectionResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionResponse;
                    fromPartial(object: Partial<_108.QueryConnectionResponse>): _108.QueryConnectionResponse;
                    fromAmino(object: _108.QueryConnectionResponseAmino): _108.QueryConnectionResponse;
                    toAmino(message: _108.QueryConnectionResponse): _108.QueryConnectionResponseAmino;
                    fromAminoMsg(object: _108.QueryConnectionResponseAminoMsg): _108.QueryConnectionResponse;
                    toAminoMsg(message: _108.QueryConnectionResponse): _108.QueryConnectionResponseAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionResponseProtoMsg): _108.QueryConnectionResponse;
                    toProto(message: _108.QueryConnectionResponse): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionResponse): _108.QueryConnectionResponseProtoMsg;
                };
                QueryConnectionsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionsRequest;
                    isSDK(o: any): o is _108.QueryConnectionsRequestSDKType;
                    isAmino(o: any): o is _108.QueryConnectionsRequestAmino;
                    encode(message: _108.QueryConnectionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionsRequest;
                    fromPartial(object: Partial<_108.QueryConnectionsRequest>): _108.QueryConnectionsRequest;
                    fromAmino(object: _108.QueryConnectionsRequestAmino): _108.QueryConnectionsRequest;
                    toAmino(message: _108.QueryConnectionsRequest): _108.QueryConnectionsRequestAmino;
                    fromAminoMsg(object: _108.QueryConnectionsRequestAminoMsg): _108.QueryConnectionsRequest;
                    toAminoMsg(message: _108.QueryConnectionsRequest): _108.QueryConnectionsRequestAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionsRequestProtoMsg): _108.QueryConnectionsRequest;
                    toProto(message: _108.QueryConnectionsRequest): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionsRequest): _108.QueryConnectionsRequestProtoMsg;
                };
                QueryConnectionsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionsResponse;
                    isSDK(o: any): o is _108.QueryConnectionsResponseSDKType;
                    isAmino(o: any): o is _108.QueryConnectionsResponseAmino;
                    encode(message: _108.QueryConnectionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionsResponse;
                    fromPartial(object: Partial<_108.QueryConnectionsResponse>): _108.QueryConnectionsResponse;
                    fromAmino(object: _108.QueryConnectionsResponseAmino): _108.QueryConnectionsResponse;
                    toAmino(message: _108.QueryConnectionsResponse): _108.QueryConnectionsResponseAmino;
                    fromAminoMsg(object: _108.QueryConnectionsResponseAminoMsg): _108.QueryConnectionsResponse;
                    toAminoMsg(message: _108.QueryConnectionsResponse): _108.QueryConnectionsResponseAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionsResponseProtoMsg): _108.QueryConnectionsResponse;
                    toProto(message: _108.QueryConnectionsResponse): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionsResponse): _108.QueryConnectionsResponseProtoMsg;
                };
                QueryClientConnectionsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryClientConnectionsRequest;
                    isSDK(o: any): o is _108.QueryClientConnectionsRequestSDKType;
                    isAmino(o: any): o is _108.QueryClientConnectionsRequestAmino;
                    encode(message: _108.QueryClientConnectionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryClientConnectionsRequest;
                    fromPartial(object: Partial<_108.QueryClientConnectionsRequest>): _108.QueryClientConnectionsRequest;
                    fromAmino(object: _108.QueryClientConnectionsRequestAmino): _108.QueryClientConnectionsRequest;
                    toAmino(message: _108.QueryClientConnectionsRequest): _108.QueryClientConnectionsRequestAmino;
                    fromAminoMsg(object: _108.QueryClientConnectionsRequestAminoMsg): _108.QueryClientConnectionsRequest;
                    toAminoMsg(message: _108.QueryClientConnectionsRequest): _108.QueryClientConnectionsRequestAminoMsg;
                    fromProtoMsg(message: _108.QueryClientConnectionsRequestProtoMsg): _108.QueryClientConnectionsRequest;
                    toProto(message: _108.QueryClientConnectionsRequest): Uint8Array;
                    toProtoMsg(message: _108.QueryClientConnectionsRequest): _108.QueryClientConnectionsRequestProtoMsg;
                };
                QueryClientConnectionsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryClientConnectionsResponse;
                    isSDK(o: any): o is _108.QueryClientConnectionsResponseSDKType;
                    isAmino(o: any): o is _108.QueryClientConnectionsResponseAmino;
                    encode(message: _108.QueryClientConnectionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryClientConnectionsResponse;
                    fromPartial(object: Partial<_108.QueryClientConnectionsResponse>): _108.QueryClientConnectionsResponse;
                    fromAmino(object: _108.QueryClientConnectionsResponseAmino): _108.QueryClientConnectionsResponse;
                    toAmino(message: _108.QueryClientConnectionsResponse): _108.QueryClientConnectionsResponseAmino;
                    fromAminoMsg(object: _108.QueryClientConnectionsResponseAminoMsg): _108.QueryClientConnectionsResponse;
                    toAminoMsg(message: _108.QueryClientConnectionsResponse): _108.QueryClientConnectionsResponseAminoMsg;
                    fromProtoMsg(message: _108.QueryClientConnectionsResponseProtoMsg): _108.QueryClientConnectionsResponse;
                    toProto(message: _108.QueryClientConnectionsResponse): Uint8Array;
                    toProtoMsg(message: _108.QueryClientConnectionsResponse): _108.QueryClientConnectionsResponseProtoMsg;
                };
                QueryConnectionClientStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionClientStateRequest;
                    isSDK(o: any): o is _108.QueryConnectionClientStateRequestSDKType;
                    isAmino(o: any): o is _108.QueryConnectionClientStateRequestAmino;
                    encode(message: _108.QueryConnectionClientStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionClientStateRequest;
                    fromPartial(object: Partial<_108.QueryConnectionClientStateRequest>): _108.QueryConnectionClientStateRequest;
                    fromAmino(object: _108.QueryConnectionClientStateRequestAmino): _108.QueryConnectionClientStateRequest;
                    toAmino(message: _108.QueryConnectionClientStateRequest): _108.QueryConnectionClientStateRequestAmino;
                    fromAminoMsg(object: _108.QueryConnectionClientStateRequestAminoMsg): _108.QueryConnectionClientStateRequest;
                    toAminoMsg(message: _108.QueryConnectionClientStateRequest): _108.QueryConnectionClientStateRequestAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionClientStateRequestProtoMsg): _108.QueryConnectionClientStateRequest;
                    toProto(message: _108.QueryConnectionClientStateRequest): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionClientStateRequest): _108.QueryConnectionClientStateRequestProtoMsg;
                };
                QueryConnectionClientStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionClientStateResponse;
                    isSDK(o: any): o is _108.QueryConnectionClientStateResponseSDKType;
                    isAmino(o: any): o is _108.QueryConnectionClientStateResponseAmino;
                    encode(message: _108.QueryConnectionClientStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionClientStateResponse;
                    fromPartial(object: Partial<_108.QueryConnectionClientStateResponse>): _108.QueryConnectionClientStateResponse;
                    fromAmino(object: _108.QueryConnectionClientStateResponseAmino): _108.QueryConnectionClientStateResponse;
                    toAmino(message: _108.QueryConnectionClientStateResponse): _108.QueryConnectionClientStateResponseAmino;
                    fromAminoMsg(object: _108.QueryConnectionClientStateResponseAminoMsg): _108.QueryConnectionClientStateResponse;
                    toAminoMsg(message: _108.QueryConnectionClientStateResponse): _108.QueryConnectionClientStateResponseAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionClientStateResponseProtoMsg): _108.QueryConnectionClientStateResponse;
                    toProto(message: _108.QueryConnectionClientStateResponse): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionClientStateResponse): _108.QueryConnectionClientStateResponseProtoMsg;
                };
                QueryConnectionConsensusStateRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionConsensusStateRequest;
                    isSDK(o: any): o is _108.QueryConnectionConsensusStateRequestSDKType;
                    isAmino(o: any): o is _108.QueryConnectionConsensusStateRequestAmino;
                    encode(message: _108.QueryConnectionConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionConsensusStateRequest;
                    fromPartial(object: Partial<_108.QueryConnectionConsensusStateRequest>): _108.QueryConnectionConsensusStateRequest;
                    fromAmino(object: _108.QueryConnectionConsensusStateRequestAmino): _108.QueryConnectionConsensusStateRequest;
                    toAmino(message: _108.QueryConnectionConsensusStateRequest): _108.QueryConnectionConsensusStateRequestAmino;
                    fromAminoMsg(object: _108.QueryConnectionConsensusStateRequestAminoMsg): _108.QueryConnectionConsensusStateRequest;
                    toAminoMsg(message: _108.QueryConnectionConsensusStateRequest): _108.QueryConnectionConsensusStateRequestAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionConsensusStateRequestProtoMsg): _108.QueryConnectionConsensusStateRequest;
                    toProto(message: _108.QueryConnectionConsensusStateRequest): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionConsensusStateRequest): _108.QueryConnectionConsensusStateRequestProtoMsg;
                };
                QueryConnectionConsensusStateResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionConsensusStateResponse;
                    isSDK(o: any): o is _108.QueryConnectionConsensusStateResponseSDKType;
                    isAmino(o: any): o is _108.QueryConnectionConsensusStateResponseAmino;
                    encode(message: _108.QueryConnectionConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionConsensusStateResponse;
                    fromPartial(object: Partial<_108.QueryConnectionConsensusStateResponse>): _108.QueryConnectionConsensusStateResponse;
                    fromAmino(object: _108.QueryConnectionConsensusStateResponseAmino): _108.QueryConnectionConsensusStateResponse;
                    toAmino(message: _108.QueryConnectionConsensusStateResponse): _108.QueryConnectionConsensusStateResponseAmino;
                    fromAminoMsg(object: _108.QueryConnectionConsensusStateResponseAminoMsg): _108.QueryConnectionConsensusStateResponse;
                    toAminoMsg(message: _108.QueryConnectionConsensusStateResponse): _108.QueryConnectionConsensusStateResponseAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionConsensusStateResponseProtoMsg): _108.QueryConnectionConsensusStateResponse;
                    toProto(message: _108.QueryConnectionConsensusStateResponse): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionConsensusStateResponse): _108.QueryConnectionConsensusStateResponseProtoMsg;
                };
                QueryConnectionParamsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionParamsRequest;
                    isSDK(o: any): o is _108.QueryConnectionParamsRequestSDKType;
                    isAmino(o: any): o is _108.QueryConnectionParamsRequestAmino;
                    encode(_: _108.QueryConnectionParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionParamsRequest;
                    fromPartial(_: Partial<_108.QueryConnectionParamsRequest>): _108.QueryConnectionParamsRequest;
                    fromAmino(_: _108.QueryConnectionParamsRequestAmino): _108.QueryConnectionParamsRequest;
                    toAmino(_: _108.QueryConnectionParamsRequest): _108.QueryConnectionParamsRequestAmino;
                    fromAminoMsg(object: _108.QueryConnectionParamsRequestAminoMsg): _108.QueryConnectionParamsRequest;
                    toAminoMsg(message: _108.QueryConnectionParamsRequest): _108.QueryConnectionParamsRequestAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionParamsRequestProtoMsg): _108.QueryConnectionParamsRequest;
                    toProto(message: _108.QueryConnectionParamsRequest): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionParamsRequest): _108.QueryConnectionParamsRequestProtoMsg;
                };
                QueryConnectionParamsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _108.QueryConnectionParamsResponse;
                    isSDK(o: any): o is _108.QueryConnectionParamsResponseSDKType;
                    isAmino(o: any): o is _108.QueryConnectionParamsResponseAmino;
                    encode(message: _108.QueryConnectionParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _108.QueryConnectionParamsResponse;
                    fromPartial(object: Partial<_108.QueryConnectionParamsResponse>): _108.QueryConnectionParamsResponse;
                    fromAmino(object: _108.QueryConnectionParamsResponseAmino): _108.QueryConnectionParamsResponse;
                    toAmino(message: _108.QueryConnectionParamsResponse): _108.QueryConnectionParamsResponseAmino;
                    fromAminoMsg(object: _108.QueryConnectionParamsResponseAminoMsg): _108.QueryConnectionParamsResponse;
                    toAminoMsg(message: _108.QueryConnectionParamsResponse): _108.QueryConnectionParamsResponseAminoMsg;
                    fromProtoMsg(message: _108.QueryConnectionParamsResponseProtoMsg): _108.QueryConnectionParamsResponse;
                    toProto(message: _108.QueryConnectionParamsResponse): Uint8Array;
                    toProtoMsg(message: _108.QueryConnectionParamsResponse): _108.QueryConnectionParamsResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _107.GenesisState;
                    isSDK(o: any): o is _107.GenesisStateSDKType;
                    isAmino(o: any): o is _107.GenesisStateAmino;
                    encode(message: _107.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _107.GenesisState;
                    fromPartial(object: Partial<_107.GenesisState>): _107.GenesisState;
                    fromAmino(object: _107.GenesisStateAmino): _107.GenesisState;
                    toAmino(message: _107.GenesisState): _107.GenesisStateAmino;
                    fromAminoMsg(object: _107.GenesisStateAminoMsg): _107.GenesisState;
                    toAminoMsg(message: _107.GenesisState): _107.GenesisStateAminoMsg;
                    fromProtoMsg(message: _107.GenesisStateProtoMsg): _107.GenesisState;
                    toProto(message: _107.GenesisState): Uint8Array;
                    toProtoMsg(message: _107.GenesisState): _107.GenesisStateProtoMsg;
                };
                stateFromJSON(object: any): _106.State;
                stateToJSON(object: _106.State): string;
                State: typeof _106.State;
                StateSDKType: typeof _106.State;
                StateAmino: typeof _106.State;
                ConnectionEnd: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _106.ConnectionEnd;
                    isSDK(o: any): o is _106.ConnectionEndSDKType;
                    isAmino(o: any): o is _106.ConnectionEndAmino;
                    encode(message: _106.ConnectionEnd, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.ConnectionEnd;
                    fromPartial(object: Partial<_106.ConnectionEnd>): _106.ConnectionEnd;
                    fromAmino(object: _106.ConnectionEndAmino): _106.ConnectionEnd;
                    toAmino(message: _106.ConnectionEnd): _106.ConnectionEndAmino;
                    fromAminoMsg(object: _106.ConnectionEndAminoMsg): _106.ConnectionEnd;
                    toAminoMsg(message: _106.ConnectionEnd): _106.ConnectionEndAminoMsg;
                    fromProtoMsg(message: _106.ConnectionEndProtoMsg): _106.ConnectionEnd;
                    toProto(message: _106.ConnectionEnd): Uint8Array;
                    toProtoMsg(message: _106.ConnectionEnd): _106.ConnectionEndProtoMsg;
                };
                IdentifiedConnection: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _106.IdentifiedConnection;
                    isSDK(o: any): o is _106.IdentifiedConnectionSDKType;
                    isAmino(o: any): o is _106.IdentifiedConnectionAmino;
                    encode(message: _106.IdentifiedConnection, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.IdentifiedConnection;
                    fromPartial(object: Partial<_106.IdentifiedConnection>): _106.IdentifiedConnection;
                    fromAmino(object: _106.IdentifiedConnectionAmino): _106.IdentifiedConnection;
                    toAmino(message: _106.IdentifiedConnection): _106.IdentifiedConnectionAmino;
                    fromAminoMsg(object: _106.IdentifiedConnectionAminoMsg): _106.IdentifiedConnection;
                    toAminoMsg(message: _106.IdentifiedConnection): _106.IdentifiedConnectionAminoMsg;
                    fromProtoMsg(message: _106.IdentifiedConnectionProtoMsg): _106.IdentifiedConnection;
                    toProto(message: _106.IdentifiedConnection): Uint8Array;
                    toProtoMsg(message: _106.IdentifiedConnection): _106.IdentifiedConnectionProtoMsg;
                };
                Counterparty: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _106.Counterparty;
                    isSDK(o: any): o is _106.CounterpartySDKType;
                    isAmino(o: any): o is _106.CounterpartyAmino;
                    encode(message: _106.Counterparty, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.Counterparty;
                    fromPartial(object: Partial<_106.Counterparty>): _106.Counterparty;
                    fromAmino(object: _106.CounterpartyAmino): _106.Counterparty;
                    toAmino(message: _106.Counterparty): _106.CounterpartyAmino;
                    fromAminoMsg(object: _106.CounterpartyAminoMsg): _106.Counterparty;
                    toAminoMsg(message: _106.Counterparty): _106.CounterpartyAminoMsg;
                    fromProtoMsg(message: _106.CounterpartyProtoMsg): _106.Counterparty;
                    toProto(message: _106.Counterparty): Uint8Array;
                    toProtoMsg(message: _106.Counterparty): _106.CounterpartyProtoMsg;
                };
                ClientPaths: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _106.ClientPaths;
                    isSDK(o: any): o is _106.ClientPathsSDKType;
                    isAmino(o: any): o is _106.ClientPathsAmino;
                    encode(message: _106.ClientPaths, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.ClientPaths;
                    fromPartial(object: Partial<_106.ClientPaths>): _106.ClientPaths;
                    fromAmino(object: _106.ClientPathsAmino): _106.ClientPaths;
                    toAmino(message: _106.ClientPaths): _106.ClientPathsAmino;
                    fromAminoMsg(object: _106.ClientPathsAminoMsg): _106.ClientPaths;
                    toAminoMsg(message: _106.ClientPaths): _106.ClientPathsAminoMsg;
                    fromProtoMsg(message: _106.ClientPathsProtoMsg): _106.ClientPaths;
                    toProto(message: _106.ClientPaths): Uint8Array;
                    toProtoMsg(message: _106.ClientPaths): _106.ClientPathsProtoMsg;
                };
                ConnectionPaths: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _106.ConnectionPaths;
                    isSDK(o: any): o is _106.ConnectionPathsSDKType;
                    isAmino(o: any): o is _106.ConnectionPathsAmino;
                    encode(message: _106.ConnectionPaths, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.ConnectionPaths;
                    fromPartial(object: Partial<_106.ConnectionPaths>): _106.ConnectionPaths;
                    fromAmino(object: _106.ConnectionPathsAmino): _106.ConnectionPaths;
                    toAmino(message: _106.ConnectionPaths): _106.ConnectionPathsAmino;
                    fromAminoMsg(object: _106.ConnectionPathsAminoMsg): _106.ConnectionPaths;
                    toAminoMsg(message: _106.ConnectionPaths): _106.ConnectionPathsAminoMsg;
                    fromProtoMsg(message: _106.ConnectionPathsProtoMsg): _106.ConnectionPaths;
                    toProto(message: _106.ConnectionPaths): Uint8Array;
                    toProtoMsg(message: _106.ConnectionPaths): _106.ConnectionPathsProtoMsg;
                };
                Version: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _106.Version;
                    isSDK(o: any): o is _106.VersionSDKType;
                    isAmino(o: any): o is _106.VersionAmino;
                    encode(message: _106.Version, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.Version;
                    fromPartial(object: Partial<_106.Version>): _106.Version;
                    fromAmino(object: _106.VersionAmino): _106.Version;
                    toAmino(message: _106.Version): _106.VersionAmino;
                    fromAminoMsg(object: _106.VersionAminoMsg): _106.Version;
                    toAminoMsg(message: _106.Version): _106.VersionAminoMsg;
                    fromProtoMsg(message: _106.VersionProtoMsg): _106.Version;
                    toProto(message: _106.Version): Uint8Array;
                    toProtoMsg(message: _106.Version): _106.VersionProtoMsg;
                };
                Params: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _106.Params;
                    isSDK(o: any): o is _106.ParamsSDKType;
                    isAmino(o: any): o is _106.ParamsAmino;
                    encode(message: _106.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _106.Params;
                    fromPartial(object: Partial<_106.Params>): _106.Params;
                    fromAmino(object: _106.ParamsAmino): _106.Params;
                    toAmino(message: _106.Params): _106.ParamsAmino;
                    fromAminoMsg(object: _106.ParamsAminoMsg): _106.Params;
                    toAminoMsg(message: _106.Params): _106.ParamsAminoMsg;
                    fromProtoMsg(message: _106.ParamsProtoMsg): _106.Params;
                    toProto(message: _106.Params): Uint8Array;
                    toProtoMsg(message: _106.Params): _106.ParamsProtoMsg;
                };
            };
        }
    }
    namespace lightclients {
        namespace localhost {
            const v2: {
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _110.ClientState;
                    isSDK(o: any): o is _110.ClientStateSDKType;
                    isAmino(o: any): o is _110.ClientStateAmino;
                    encode(message: _110.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _110.ClientState;
                    fromPartial(object: Partial<_110.ClientState>): _110.ClientState;
                    fromAmino(object: _110.ClientStateAmino): _110.ClientState;
                    toAmino(message: _110.ClientState): _110.ClientStateAmino;
                    fromAminoMsg(object: _110.ClientStateAminoMsg): _110.ClientState;
                    toAminoMsg(message: _110.ClientState): _110.ClientStateAminoMsg;
                    fromProtoMsg(message: _110.ClientStateProtoMsg): _110.ClientState;
                    toProto(message: _110.ClientState): Uint8Array;
                    toProtoMsg(message: _110.ClientState): _110.ClientStateProtoMsg;
                };
            };
        }
        namespace solomachine {
            const v2: {
                dataTypeFromJSON(object: any): _111.DataType;
                dataTypeToJSON(object: _111.DataType): string;
                DataType: typeof _111.DataType;
                DataTypeSDKType: typeof _111.DataType;
                DataTypeAmino: typeof _111.DataType;
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.ClientState;
                    isSDK(o: any): o is _111.ClientStateSDKType;
                    isAmino(o: any): o is _111.ClientStateAmino;
                    encode(message: _111.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.ClientState;
                    fromPartial(object: Partial<_111.ClientState>): _111.ClientState;
                    fromAmino(object: _111.ClientStateAmino): _111.ClientState;
                    toAmino(message: _111.ClientState): _111.ClientStateAmino;
                    fromAminoMsg(object: _111.ClientStateAminoMsg): _111.ClientState;
                    toAminoMsg(message: _111.ClientState): _111.ClientStateAminoMsg;
                    fromProtoMsg(message: _111.ClientStateProtoMsg): _111.ClientState;
                    toProto(message: _111.ClientState): Uint8Array;
                    toProtoMsg(message: _111.ClientState): _111.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.ConsensusState;
                    isSDK(o: any): o is _111.ConsensusStateSDKType;
                    isAmino(o: any): o is _111.ConsensusStateAmino;
                    encode(message: _111.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.ConsensusState;
                    fromPartial(object: Partial<_111.ConsensusState>): _111.ConsensusState;
                    fromAmino(object: _111.ConsensusStateAmino): _111.ConsensusState;
                    toAmino(message: _111.ConsensusState): _111.ConsensusStateAmino;
                    fromAminoMsg(object: _111.ConsensusStateAminoMsg): _111.ConsensusState;
                    toAminoMsg(message: _111.ConsensusState): _111.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _111.ConsensusStateProtoMsg): _111.ConsensusState;
                    toProto(message: _111.ConsensusState): Uint8Array;
                    toProtoMsg(message: _111.ConsensusState): _111.ConsensusStateProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.Header;
                    isSDK(o: any): o is _111.HeaderSDKType;
                    isAmino(o: any): o is _111.HeaderAmino;
                    encode(message: _111.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.Header;
                    fromPartial(object: Partial<_111.Header>): _111.Header;
                    fromAmino(object: _111.HeaderAmino): _111.Header;
                    toAmino(message: _111.Header): _111.HeaderAmino;
                    fromAminoMsg(object: _111.HeaderAminoMsg): _111.Header;
                    toAminoMsg(message: _111.Header): _111.HeaderAminoMsg;
                    fromProtoMsg(message: _111.HeaderProtoMsg): _111.Header;
                    toProto(message: _111.Header): Uint8Array;
                    toProtoMsg(message: _111.Header): _111.HeaderProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.Misbehaviour;
                    isSDK(o: any): o is _111.MisbehaviourSDKType;
                    isAmino(o: any): o is _111.MisbehaviourAmino;
                    encode(message: _111.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.Misbehaviour;
                    fromPartial(object: Partial<_111.Misbehaviour>): _111.Misbehaviour;
                    fromAmino(object: _111.MisbehaviourAmino): _111.Misbehaviour;
                    toAmino(message: _111.Misbehaviour): _111.MisbehaviourAmino;
                    fromAminoMsg(object: _111.MisbehaviourAminoMsg): _111.Misbehaviour;
                    toAminoMsg(message: _111.Misbehaviour): _111.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _111.MisbehaviourProtoMsg): _111.Misbehaviour;
                    toProto(message: _111.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _111.Misbehaviour): _111.MisbehaviourProtoMsg;
                };
                SignatureAndData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.SignatureAndData;
                    isSDK(o: any): o is _111.SignatureAndDataSDKType;
                    isAmino(o: any): o is _111.SignatureAndDataAmino;
                    encode(message: _111.SignatureAndData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.SignatureAndData;
                    fromPartial(object: Partial<_111.SignatureAndData>): _111.SignatureAndData;
                    fromAmino(object: _111.SignatureAndDataAmino): _111.SignatureAndData;
                    toAmino(message: _111.SignatureAndData): _111.SignatureAndDataAmino;
                    fromAminoMsg(object: _111.SignatureAndDataAminoMsg): _111.SignatureAndData;
                    toAminoMsg(message: _111.SignatureAndData): _111.SignatureAndDataAminoMsg;
                    fromProtoMsg(message: _111.SignatureAndDataProtoMsg): _111.SignatureAndData;
                    toProto(message: _111.SignatureAndData): Uint8Array;
                    toProtoMsg(message: _111.SignatureAndData): _111.SignatureAndDataProtoMsg;
                };
                TimestampedSignatureData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.TimestampedSignatureData;
                    isSDK(o: any): o is _111.TimestampedSignatureDataSDKType;
                    isAmino(o: any): o is _111.TimestampedSignatureDataAmino;
                    encode(message: _111.TimestampedSignatureData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.TimestampedSignatureData;
                    fromPartial(object: Partial<_111.TimestampedSignatureData>): _111.TimestampedSignatureData;
                    fromAmino(object: _111.TimestampedSignatureDataAmino): _111.TimestampedSignatureData;
                    toAmino(message: _111.TimestampedSignatureData): _111.TimestampedSignatureDataAmino;
                    fromAminoMsg(object: _111.TimestampedSignatureDataAminoMsg): _111.TimestampedSignatureData;
                    toAminoMsg(message: _111.TimestampedSignatureData): _111.TimestampedSignatureDataAminoMsg;
                    fromProtoMsg(message: _111.TimestampedSignatureDataProtoMsg): _111.TimestampedSignatureData;
                    toProto(message: _111.TimestampedSignatureData): Uint8Array;
                    toProtoMsg(message: _111.TimestampedSignatureData): _111.TimestampedSignatureDataProtoMsg;
                };
                SignBytes: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.SignBytes;
                    isSDK(o: any): o is _111.SignBytesSDKType;
                    isAmino(o: any): o is _111.SignBytesAmino;
                    encode(message: _111.SignBytes, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.SignBytes;
                    fromPartial(object: Partial<_111.SignBytes>): _111.SignBytes;
                    fromAmino(object: _111.SignBytesAmino): _111.SignBytes;
                    toAmino(message: _111.SignBytes): _111.SignBytesAmino;
                    fromAminoMsg(object: _111.SignBytesAminoMsg): _111.SignBytes;
                    toAminoMsg(message: _111.SignBytes): _111.SignBytesAminoMsg;
                    fromProtoMsg(message: _111.SignBytesProtoMsg): _111.SignBytes;
                    toProto(message: _111.SignBytes): Uint8Array;
                    toProtoMsg(message: _111.SignBytes): _111.SignBytesProtoMsg;
                };
                HeaderData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.HeaderData;
                    isSDK(o: any): o is _111.HeaderDataSDKType;
                    isAmino(o: any): o is _111.HeaderDataAmino;
                    encode(message: _111.HeaderData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.HeaderData;
                    fromPartial(object: Partial<_111.HeaderData>): _111.HeaderData;
                    fromAmino(object: _111.HeaderDataAmino): _111.HeaderData;
                    toAmino(message: _111.HeaderData): _111.HeaderDataAmino;
                    fromAminoMsg(object: _111.HeaderDataAminoMsg): _111.HeaderData;
                    toAminoMsg(message: _111.HeaderData): _111.HeaderDataAminoMsg;
                    fromProtoMsg(message: _111.HeaderDataProtoMsg): _111.HeaderData;
                    toProto(message: _111.HeaderData): Uint8Array;
                    toProtoMsg(message: _111.HeaderData): _111.HeaderDataProtoMsg;
                };
                ClientStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.ClientStateData;
                    isSDK(o: any): o is _111.ClientStateDataSDKType;
                    isAmino(o: any): o is _111.ClientStateDataAmino;
                    encode(message: _111.ClientStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.ClientStateData;
                    fromPartial(object: Partial<_111.ClientStateData>): _111.ClientStateData;
                    fromAmino(object: _111.ClientStateDataAmino): _111.ClientStateData;
                    toAmino(message: _111.ClientStateData): _111.ClientStateDataAmino;
                    fromAminoMsg(object: _111.ClientStateDataAminoMsg): _111.ClientStateData;
                    toAminoMsg(message: _111.ClientStateData): _111.ClientStateDataAminoMsg;
                    fromProtoMsg(message: _111.ClientStateDataProtoMsg): _111.ClientStateData;
                    toProto(message: _111.ClientStateData): Uint8Array;
                    toProtoMsg(message: _111.ClientStateData): _111.ClientStateDataProtoMsg;
                };
                ConsensusStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.ConsensusStateData;
                    isSDK(o: any): o is _111.ConsensusStateDataSDKType;
                    isAmino(o: any): o is _111.ConsensusStateDataAmino;
                    encode(message: _111.ConsensusStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.ConsensusStateData;
                    fromPartial(object: Partial<_111.ConsensusStateData>): _111.ConsensusStateData;
                    fromAmino(object: _111.ConsensusStateDataAmino): _111.ConsensusStateData;
                    toAmino(message: _111.ConsensusStateData): _111.ConsensusStateDataAmino;
                    fromAminoMsg(object: _111.ConsensusStateDataAminoMsg): _111.ConsensusStateData;
                    toAminoMsg(message: _111.ConsensusStateData): _111.ConsensusStateDataAminoMsg;
                    fromProtoMsg(message: _111.ConsensusStateDataProtoMsg): _111.ConsensusStateData;
                    toProto(message: _111.ConsensusStateData): Uint8Array;
                    toProtoMsg(message: _111.ConsensusStateData): _111.ConsensusStateDataProtoMsg;
                };
                ConnectionStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.ConnectionStateData;
                    isSDK(o: any): o is _111.ConnectionStateDataSDKType;
                    isAmino(o: any): o is _111.ConnectionStateDataAmino;
                    encode(message: _111.ConnectionStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.ConnectionStateData;
                    fromPartial(object: Partial<_111.ConnectionStateData>): _111.ConnectionStateData;
                    fromAmino(object: _111.ConnectionStateDataAmino): _111.ConnectionStateData;
                    toAmino(message: _111.ConnectionStateData): _111.ConnectionStateDataAmino;
                    fromAminoMsg(object: _111.ConnectionStateDataAminoMsg): _111.ConnectionStateData;
                    toAminoMsg(message: _111.ConnectionStateData): _111.ConnectionStateDataAminoMsg;
                    fromProtoMsg(message: _111.ConnectionStateDataProtoMsg): _111.ConnectionStateData;
                    toProto(message: _111.ConnectionStateData): Uint8Array;
                    toProtoMsg(message: _111.ConnectionStateData): _111.ConnectionStateDataProtoMsg;
                };
                ChannelStateData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.ChannelStateData;
                    isSDK(o: any): o is _111.ChannelStateDataSDKType;
                    isAmino(o: any): o is _111.ChannelStateDataAmino;
                    encode(message: _111.ChannelStateData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.ChannelStateData;
                    fromPartial(object: Partial<_111.ChannelStateData>): _111.ChannelStateData;
                    fromAmino(object: _111.ChannelStateDataAmino): _111.ChannelStateData;
                    toAmino(message: _111.ChannelStateData): _111.ChannelStateDataAmino;
                    fromAminoMsg(object: _111.ChannelStateDataAminoMsg): _111.ChannelStateData;
                    toAminoMsg(message: _111.ChannelStateData): _111.ChannelStateDataAminoMsg;
                    fromProtoMsg(message: _111.ChannelStateDataProtoMsg): _111.ChannelStateData;
                    toProto(message: _111.ChannelStateData): Uint8Array;
                    toProtoMsg(message: _111.ChannelStateData): _111.ChannelStateDataProtoMsg;
                };
                PacketCommitmentData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.PacketCommitmentData;
                    isSDK(o: any): o is _111.PacketCommitmentDataSDKType;
                    isAmino(o: any): o is _111.PacketCommitmentDataAmino;
                    encode(message: _111.PacketCommitmentData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.PacketCommitmentData;
                    fromPartial(object: Partial<_111.PacketCommitmentData>): _111.PacketCommitmentData;
                    fromAmino(object: _111.PacketCommitmentDataAmino): _111.PacketCommitmentData;
                    toAmino(message: _111.PacketCommitmentData): _111.PacketCommitmentDataAmino;
                    fromAminoMsg(object: _111.PacketCommitmentDataAminoMsg): _111.PacketCommitmentData;
                    toAminoMsg(message: _111.PacketCommitmentData): _111.PacketCommitmentDataAminoMsg;
                    fromProtoMsg(message: _111.PacketCommitmentDataProtoMsg): _111.PacketCommitmentData;
                    toProto(message: _111.PacketCommitmentData): Uint8Array;
                    toProtoMsg(message: _111.PacketCommitmentData): _111.PacketCommitmentDataProtoMsg;
                };
                PacketAcknowledgementData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.PacketAcknowledgementData;
                    isSDK(o: any): o is _111.PacketAcknowledgementDataSDKType;
                    isAmino(o: any): o is _111.PacketAcknowledgementDataAmino;
                    encode(message: _111.PacketAcknowledgementData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.PacketAcknowledgementData;
                    fromPartial(object: Partial<_111.PacketAcknowledgementData>): _111.PacketAcknowledgementData;
                    fromAmino(object: _111.PacketAcknowledgementDataAmino): _111.PacketAcknowledgementData;
                    toAmino(message: _111.PacketAcknowledgementData): _111.PacketAcknowledgementDataAmino;
                    fromAminoMsg(object: _111.PacketAcknowledgementDataAminoMsg): _111.PacketAcknowledgementData;
                    toAminoMsg(message: _111.PacketAcknowledgementData): _111.PacketAcknowledgementDataAminoMsg;
                    fromProtoMsg(message: _111.PacketAcknowledgementDataProtoMsg): _111.PacketAcknowledgementData;
                    toProto(message: _111.PacketAcknowledgementData): Uint8Array;
                    toProtoMsg(message: _111.PacketAcknowledgementData): _111.PacketAcknowledgementDataProtoMsg;
                };
                PacketReceiptAbsenceData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.PacketReceiptAbsenceData;
                    isSDK(o: any): o is _111.PacketReceiptAbsenceDataSDKType;
                    isAmino(o: any): o is _111.PacketReceiptAbsenceDataAmino;
                    encode(message: _111.PacketReceiptAbsenceData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.PacketReceiptAbsenceData;
                    fromPartial(object: Partial<_111.PacketReceiptAbsenceData>): _111.PacketReceiptAbsenceData;
                    fromAmino(object: _111.PacketReceiptAbsenceDataAmino): _111.PacketReceiptAbsenceData;
                    toAmino(message: _111.PacketReceiptAbsenceData): _111.PacketReceiptAbsenceDataAmino;
                    fromAminoMsg(object: _111.PacketReceiptAbsenceDataAminoMsg): _111.PacketReceiptAbsenceData;
                    toAminoMsg(message: _111.PacketReceiptAbsenceData): _111.PacketReceiptAbsenceDataAminoMsg;
                    fromProtoMsg(message: _111.PacketReceiptAbsenceDataProtoMsg): _111.PacketReceiptAbsenceData;
                    toProto(message: _111.PacketReceiptAbsenceData): Uint8Array;
                    toProtoMsg(message: _111.PacketReceiptAbsenceData): _111.PacketReceiptAbsenceDataProtoMsg;
                };
                NextSequenceRecvData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _111.NextSequenceRecvData;
                    isSDK(o: any): o is _111.NextSequenceRecvDataSDKType;
                    isAmino(o: any): o is _111.NextSequenceRecvDataAmino;
                    encode(message: _111.NextSequenceRecvData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _111.NextSequenceRecvData;
                    fromPartial(object: Partial<_111.NextSequenceRecvData>): _111.NextSequenceRecvData;
                    fromAmino(object: _111.NextSequenceRecvDataAmino): _111.NextSequenceRecvData;
                    toAmino(message: _111.NextSequenceRecvData): _111.NextSequenceRecvDataAmino;
                    fromAminoMsg(object: _111.NextSequenceRecvDataAminoMsg): _111.NextSequenceRecvData;
                    toAminoMsg(message: _111.NextSequenceRecvData): _111.NextSequenceRecvDataAminoMsg;
                    fromProtoMsg(message: _111.NextSequenceRecvDataProtoMsg): _111.NextSequenceRecvData;
                    toProto(message: _111.NextSequenceRecvData): Uint8Array;
                    toProtoMsg(message: _111.NextSequenceRecvData): _111.NextSequenceRecvDataProtoMsg;
                };
            };
            const v3: {
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _112.ClientState;
                    isSDK(o: any): o is _112.ClientStateSDKType;
                    isAmino(o: any): o is _112.ClientStateAmino;
                    encode(message: _112.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.ClientState;
                    fromPartial(object: Partial<_112.ClientState>): _112.ClientState;
                    fromAmino(object: _112.ClientStateAmino): _112.ClientState;
                    toAmino(message: _112.ClientState): _112.ClientStateAmino;
                    fromAminoMsg(object: _112.ClientStateAminoMsg): _112.ClientState;
                    toAminoMsg(message: _112.ClientState): _112.ClientStateAminoMsg;
                    fromProtoMsg(message: _112.ClientStateProtoMsg): _112.ClientState;
                    toProto(message: _112.ClientState): Uint8Array;
                    toProtoMsg(message: _112.ClientState): _112.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _112.ConsensusState;
                    isSDK(o: any): o is _112.ConsensusStateSDKType;
                    isAmino(o: any): o is _112.ConsensusStateAmino;
                    encode(message: _112.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.ConsensusState;
                    fromPartial(object: Partial<_112.ConsensusState>): _112.ConsensusState;
                    fromAmino(object: _112.ConsensusStateAmino): _112.ConsensusState;
                    toAmino(message: _112.ConsensusState): _112.ConsensusStateAmino;
                    fromAminoMsg(object: _112.ConsensusStateAminoMsg): _112.ConsensusState;
                    toAminoMsg(message: _112.ConsensusState): _112.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _112.ConsensusStateProtoMsg): _112.ConsensusState;
                    toProto(message: _112.ConsensusState): Uint8Array;
                    toProtoMsg(message: _112.ConsensusState): _112.ConsensusStateProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _112.Header;
                    isSDK(o: any): o is _112.HeaderSDKType;
                    isAmino(o: any): o is _112.HeaderAmino;
                    encode(message: _112.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.Header;
                    fromPartial(object: Partial<_112.Header>): _112.Header;
                    fromAmino(object: _112.HeaderAmino): _112.Header;
                    toAmino(message: _112.Header): _112.HeaderAmino;
                    fromAminoMsg(object: _112.HeaderAminoMsg): _112.Header;
                    toAminoMsg(message: _112.Header): _112.HeaderAminoMsg;
                    fromProtoMsg(message: _112.HeaderProtoMsg): _112.Header;
                    toProto(message: _112.Header): Uint8Array;
                    toProtoMsg(message: _112.Header): _112.HeaderProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _112.Misbehaviour;
                    isSDK(o: any): o is _112.MisbehaviourSDKType;
                    isAmino(o: any): o is _112.MisbehaviourAmino;
                    encode(message: _112.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.Misbehaviour;
                    fromPartial(object: Partial<_112.Misbehaviour>): _112.Misbehaviour;
                    fromAmino(object: _112.MisbehaviourAmino): _112.Misbehaviour;
                    toAmino(message: _112.Misbehaviour): _112.MisbehaviourAmino;
                    fromAminoMsg(object: _112.MisbehaviourAminoMsg): _112.Misbehaviour;
                    toAminoMsg(message: _112.Misbehaviour): _112.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _112.MisbehaviourProtoMsg): _112.Misbehaviour;
                    toProto(message: _112.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _112.Misbehaviour): _112.MisbehaviourProtoMsg;
                };
                SignatureAndData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _112.SignatureAndData;
                    isSDK(o: any): o is _112.SignatureAndDataSDKType;
                    isAmino(o: any): o is _112.SignatureAndDataAmino;
                    encode(message: _112.SignatureAndData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.SignatureAndData;
                    fromPartial(object: Partial<_112.SignatureAndData>): _112.SignatureAndData;
                    fromAmino(object: _112.SignatureAndDataAmino): _112.SignatureAndData;
                    toAmino(message: _112.SignatureAndData): _112.SignatureAndDataAmino;
                    fromAminoMsg(object: _112.SignatureAndDataAminoMsg): _112.SignatureAndData;
                    toAminoMsg(message: _112.SignatureAndData): _112.SignatureAndDataAminoMsg;
                    fromProtoMsg(message: _112.SignatureAndDataProtoMsg): _112.SignatureAndData;
                    toProto(message: _112.SignatureAndData): Uint8Array;
                    toProtoMsg(message: _112.SignatureAndData): _112.SignatureAndDataProtoMsg;
                };
                TimestampedSignatureData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _112.TimestampedSignatureData;
                    isSDK(o: any): o is _112.TimestampedSignatureDataSDKType;
                    isAmino(o: any): o is _112.TimestampedSignatureDataAmino;
                    encode(message: _112.TimestampedSignatureData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.TimestampedSignatureData;
                    fromPartial(object: Partial<_112.TimestampedSignatureData>): _112.TimestampedSignatureData;
                    fromAmino(object: _112.TimestampedSignatureDataAmino): _112.TimestampedSignatureData;
                    toAmino(message: _112.TimestampedSignatureData): _112.TimestampedSignatureDataAmino;
                    fromAminoMsg(object: _112.TimestampedSignatureDataAminoMsg): _112.TimestampedSignatureData;
                    toAminoMsg(message: _112.TimestampedSignatureData): _112.TimestampedSignatureDataAminoMsg;
                    fromProtoMsg(message: _112.TimestampedSignatureDataProtoMsg): _112.TimestampedSignatureData;
                    toProto(message: _112.TimestampedSignatureData): Uint8Array;
                    toProtoMsg(message: _112.TimestampedSignatureData): _112.TimestampedSignatureDataProtoMsg;
                };
                SignBytes: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _112.SignBytes;
                    isSDK(o: any): o is _112.SignBytesSDKType;
                    isAmino(o: any): o is _112.SignBytesAmino;
                    encode(message: _112.SignBytes, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.SignBytes;
                    fromPartial(object: Partial<_112.SignBytes>): _112.SignBytes;
                    fromAmino(object: _112.SignBytesAmino): _112.SignBytes;
                    toAmino(message: _112.SignBytes): _112.SignBytesAmino;
                    fromAminoMsg(object: _112.SignBytesAminoMsg): _112.SignBytes;
                    toAminoMsg(message: _112.SignBytes): _112.SignBytesAminoMsg;
                    fromProtoMsg(message: _112.SignBytesProtoMsg): _112.SignBytes;
                    toProto(message: _112.SignBytes): Uint8Array;
                    toProtoMsg(message: _112.SignBytes): _112.SignBytesProtoMsg;
                };
                HeaderData: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _112.HeaderData;
                    isSDK(o: any): o is _112.HeaderDataSDKType;
                    isAmino(o: any): o is _112.HeaderDataAmino;
                    encode(message: _112.HeaderData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _112.HeaderData;
                    fromPartial(object: Partial<_112.HeaderData>): _112.HeaderData;
                    fromAmino(object: _112.HeaderDataAmino): _112.HeaderData;
                    toAmino(message: _112.HeaderData): _112.HeaderDataAmino;
                    fromAminoMsg(object: _112.HeaderDataAminoMsg): _112.HeaderData;
                    toAminoMsg(message: _112.HeaderData): _112.HeaderDataAminoMsg;
                    fromProtoMsg(message: _112.HeaderDataProtoMsg): _112.HeaderData;
                    toProto(message: _112.HeaderData): Uint8Array;
                    toProtoMsg(message: _112.HeaderData): _112.HeaderDataProtoMsg;
                };
            };
        }
        namespace tendermint {
            const v1: {
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _113.ClientState;
                    isSDK(o: any): o is _113.ClientStateSDKType;
                    isAmino(o: any): o is _113.ClientStateAmino;
                    encode(message: _113.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _113.ClientState;
                    fromPartial(object: Partial<_113.ClientState>): _113.ClientState;
                    fromAmino(object: _113.ClientStateAmino): _113.ClientState;
                    toAmino(message: _113.ClientState): _113.ClientStateAmino;
                    fromAminoMsg(object: _113.ClientStateAminoMsg): _113.ClientState;
                    toAminoMsg(message: _113.ClientState): _113.ClientStateAminoMsg;
                    fromProtoMsg(message: _113.ClientStateProtoMsg): _113.ClientState;
                    toProto(message: _113.ClientState): Uint8Array;
                    toProtoMsg(message: _113.ClientState): _113.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _113.ConsensusState;
                    isSDK(o: any): o is _113.ConsensusStateSDKType;
                    isAmino(o: any): o is _113.ConsensusStateAmino;
                    encode(message: _113.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _113.ConsensusState;
                    fromPartial(object: Partial<_113.ConsensusState>): _113.ConsensusState;
                    fromAmino(object: _113.ConsensusStateAmino): _113.ConsensusState;
                    toAmino(message: _113.ConsensusState): _113.ConsensusStateAmino;
                    fromAminoMsg(object: _113.ConsensusStateAminoMsg): _113.ConsensusState;
                    toAminoMsg(message: _113.ConsensusState): _113.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _113.ConsensusStateProtoMsg): _113.ConsensusState;
                    toProto(message: _113.ConsensusState): Uint8Array;
                    toProtoMsg(message: _113.ConsensusState): _113.ConsensusStateProtoMsg;
                };
                Misbehaviour: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _113.Misbehaviour;
                    isSDK(o: any): o is _113.MisbehaviourSDKType;
                    isAmino(o: any): o is _113.MisbehaviourAmino;
                    encode(message: _113.Misbehaviour, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _113.Misbehaviour;
                    fromPartial(object: Partial<_113.Misbehaviour>): _113.Misbehaviour;
                    fromAmino(object: _113.MisbehaviourAmino): _113.Misbehaviour;
                    toAmino(message: _113.Misbehaviour): _113.MisbehaviourAmino;
                    fromAminoMsg(object: _113.MisbehaviourAminoMsg): _113.Misbehaviour;
                    toAminoMsg(message: _113.Misbehaviour): _113.MisbehaviourAminoMsg;
                    fromProtoMsg(message: _113.MisbehaviourProtoMsg): _113.Misbehaviour;
                    toProto(message: _113.Misbehaviour): Uint8Array;
                    toProtoMsg(message: _113.Misbehaviour): _113.MisbehaviourProtoMsg;
                };
                Header: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _113.Header;
                    isSDK(o: any): o is _113.HeaderSDKType;
                    isAmino(o: any): o is _113.HeaderAmino;
                    encode(message: _113.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _113.Header;
                    fromPartial(object: Partial<_113.Header>): _113.Header;
                    fromAmino(object: _113.HeaderAmino): _113.Header;
                    toAmino(message: _113.Header): _113.HeaderAmino;
                    fromAminoMsg(object: _113.HeaderAminoMsg): _113.Header;
                    toAminoMsg(message: _113.Header): _113.HeaderAminoMsg;
                    fromProtoMsg(message: _113.HeaderProtoMsg): _113.Header;
                    toProto(message: _113.Header): Uint8Array;
                    toProtoMsg(message: _113.Header): _113.HeaderProtoMsg;
                };
                Fraction: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _113.Fraction;
                    isSDK(o: any): o is _113.FractionSDKType;
                    isAmino(o: any): o is _113.FractionAmino;
                    encode(message: _113.Fraction, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _113.Fraction;
                    fromPartial(object: Partial<_113.Fraction>): _113.Fraction;
                    fromAmino(object: _113.FractionAmino): _113.Fraction;
                    toAmino(message: _113.Fraction): _113.FractionAmino;
                    fromAminoMsg(object: _113.FractionAminoMsg): _113.Fraction;
                    toAminoMsg(message: _113.Fraction): _113.FractionAminoMsg;
                    fromProtoMsg(message: _113.FractionProtoMsg): _113.Fraction;
                    toProto(message: _113.Fraction): Uint8Array;
                    toProtoMsg(message: _113.Fraction): _113.FractionProtoMsg;
                };
            };
        }
        namespace wasm {
            const v1: {
                MsgClientImpl: typeof _324.MsgClientImpl;
                createClientImpl: (rpc: import("../helpers").Rpc) => _324.MsgClientImpl;
                QueryClientImpl: typeof _316.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    checksums(request?: _115.QueryChecksumsRequest): Promise<_115.QueryChecksumsResponse>;
                    code(request: _115.QueryCodeRequest): Promise<_115.QueryCodeResponse>;
                };
                LCDQueryClient: typeof _308.LCDQueryClient;
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        storeCode(value: _116.MsgStoreCode): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        removeChecksum(value: _116.MsgRemoveChecksum): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        migrateContract(value: _116.MsgMigrateContract): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        storeCode(value: _116.MsgStoreCode): {
                            typeUrl: string;
                            value: _116.MsgStoreCode;
                        };
                        removeChecksum(value: _116.MsgRemoveChecksum): {
                            typeUrl: string;
                            value: _116.MsgRemoveChecksum;
                        };
                        migrateContract(value: _116.MsgMigrateContract): {
                            typeUrl: string;
                            value: _116.MsgMigrateContract;
                        };
                    };
                    fromPartial: {
                        storeCode(value: _116.MsgStoreCode): {
                            typeUrl: string;
                            value: _116.MsgStoreCode;
                        };
                        removeChecksum(value: _116.MsgRemoveChecksum): {
                            typeUrl: string;
                            value: _116.MsgRemoveChecksum;
                        };
                        migrateContract(value: _116.MsgMigrateContract): {
                            typeUrl: string;
                            value: _116.MsgMigrateContract;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.lightclients.wasm.v1.MsgStoreCode": {
                        aminoType: string;
                        toAmino: (message: _116.MsgStoreCode) => _116.MsgStoreCodeAmino;
                        fromAmino: (object: _116.MsgStoreCodeAmino) => _116.MsgStoreCode;
                    };
                    "/ibc.lightclients.wasm.v1.MsgRemoveChecksum": {
                        aminoType: string;
                        toAmino: (message: _116.MsgRemoveChecksum) => _116.MsgRemoveChecksumAmino;
                        fromAmino: (object: _116.MsgRemoveChecksumAmino) => _116.MsgRemoveChecksum;
                    };
                    "/ibc.lightclients.wasm.v1.MsgMigrateContract": {
                        aminoType: string;
                        toAmino: (message: _116.MsgMigrateContract) => _116.MsgMigrateContractAmino;
                        fromAmino: (object: _116.MsgMigrateContractAmino) => _116.MsgMigrateContract;
                    };
                };
                ClientState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _117.ClientState;
                    isSDK(o: any): o is _117.ClientStateSDKType;
                    isAmino(o: any): o is _117.ClientStateAmino;
                    encode(message: _117.ClientState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _117.ClientState;
                    fromPartial(object: Partial<_117.ClientState>): _117.ClientState;
                    fromAmino(object: _117.ClientStateAmino): _117.ClientState;
                    toAmino(message: _117.ClientState): _117.ClientStateAmino;
                    fromAminoMsg(object: _117.ClientStateAminoMsg): _117.ClientState;
                    toAminoMsg(message: _117.ClientState): _117.ClientStateAminoMsg;
                    fromProtoMsg(message: _117.ClientStateProtoMsg): _117.ClientState;
                    toProto(message: _117.ClientState): Uint8Array;
                    toProtoMsg(message: _117.ClientState): _117.ClientStateProtoMsg;
                };
                ConsensusState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _117.ConsensusState;
                    isSDK(o: any): o is _117.ConsensusStateSDKType;
                    isAmino(o: any): o is _117.ConsensusStateAmino;
                    encode(message: _117.ConsensusState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _117.ConsensusState;
                    fromPartial(object: Partial<_117.ConsensusState>): _117.ConsensusState;
                    fromAmino(object: _117.ConsensusStateAmino): _117.ConsensusState;
                    toAmino(message: _117.ConsensusState): _117.ConsensusStateAmino;
                    fromAminoMsg(object: _117.ConsensusStateAminoMsg): _117.ConsensusState;
                    toAminoMsg(message: _117.ConsensusState): _117.ConsensusStateAminoMsg;
                    fromProtoMsg(message: _117.ConsensusStateProtoMsg): _117.ConsensusState;
                    toProto(message: _117.ConsensusState): Uint8Array;
                    toProtoMsg(message: _117.ConsensusState): _117.ConsensusStateProtoMsg;
                };
                ClientMessage: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _117.ClientMessage;
                    isSDK(o: any): o is _117.ClientMessageSDKType;
                    isAmino(o: any): o is _117.ClientMessageAmino;
                    encode(message: _117.ClientMessage, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _117.ClientMessage;
                    fromPartial(object: Partial<_117.ClientMessage>): _117.ClientMessage;
                    fromAmino(object: _117.ClientMessageAmino): _117.ClientMessage;
                    toAmino(message: _117.ClientMessage): _117.ClientMessageAmino;
                    fromAminoMsg(object: _117.ClientMessageAminoMsg): _117.ClientMessage;
                    toAminoMsg(message: _117.ClientMessage): _117.ClientMessageAminoMsg;
                    fromProtoMsg(message: _117.ClientMessageProtoMsg): _117.ClientMessage;
                    toProto(message: _117.ClientMessage): Uint8Array;
                    toProtoMsg(message: _117.ClientMessage): _117.ClientMessageProtoMsg;
                };
                Checksums: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _117.Checksums;
                    isSDK(o: any): o is _117.ChecksumsSDKType;
                    isAmino(o: any): o is _117.ChecksumsAmino;
                    encode(message: _117.Checksums, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _117.Checksums;
                    fromPartial(object: Partial<_117.Checksums>): _117.Checksums;
                    fromAmino(object: _117.ChecksumsAmino): _117.Checksums;
                    toAmino(message: _117.Checksums): _117.ChecksumsAmino;
                    fromAminoMsg(object: _117.ChecksumsAminoMsg): _117.Checksums;
                    toAminoMsg(message: _117.Checksums): _117.ChecksumsAminoMsg;
                    fromProtoMsg(message: _117.ChecksumsProtoMsg): _117.Checksums;
                    toProto(message: _117.Checksums): Uint8Array;
                    toProtoMsg(message: _117.Checksums): _117.ChecksumsProtoMsg;
                };
                MsgStoreCode: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _116.MsgStoreCode;
                    isSDK(o: any): o is _116.MsgStoreCodeSDKType;
                    isAmino(o: any): o is _116.MsgStoreCodeAmino;
                    encode(message: _116.MsgStoreCode, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _116.MsgStoreCode;
                    fromPartial(object: Partial<_116.MsgStoreCode>): _116.MsgStoreCode;
                    fromAmino(object: _116.MsgStoreCodeAmino): _116.MsgStoreCode;
                    toAmino(message: _116.MsgStoreCode): _116.MsgStoreCodeAmino;
                    fromAminoMsg(object: _116.MsgStoreCodeAminoMsg): _116.MsgStoreCode;
                    toAminoMsg(message: _116.MsgStoreCode): _116.MsgStoreCodeAminoMsg;
                    fromProtoMsg(message: _116.MsgStoreCodeProtoMsg): _116.MsgStoreCode;
                    toProto(message: _116.MsgStoreCode): Uint8Array;
                    toProtoMsg(message: _116.MsgStoreCode): _116.MsgStoreCodeProtoMsg;
                };
                MsgStoreCodeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _116.MsgStoreCodeResponse;
                    isSDK(o: any): o is _116.MsgStoreCodeResponseSDKType;
                    isAmino(o: any): o is _116.MsgStoreCodeResponseAmino;
                    encode(message: _116.MsgStoreCodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _116.MsgStoreCodeResponse;
                    fromPartial(object: Partial<_116.MsgStoreCodeResponse>): _116.MsgStoreCodeResponse;
                    fromAmino(object: _116.MsgStoreCodeResponseAmino): _116.MsgStoreCodeResponse;
                    toAmino(message: _116.MsgStoreCodeResponse): _116.MsgStoreCodeResponseAmino;
                    fromAminoMsg(object: _116.MsgStoreCodeResponseAminoMsg): _116.MsgStoreCodeResponse;
                    toAminoMsg(message: _116.MsgStoreCodeResponse): _116.MsgStoreCodeResponseAminoMsg;
                    fromProtoMsg(message: _116.MsgStoreCodeResponseProtoMsg): _116.MsgStoreCodeResponse;
                    toProto(message: _116.MsgStoreCodeResponse): Uint8Array;
                    toProtoMsg(message: _116.MsgStoreCodeResponse): _116.MsgStoreCodeResponseProtoMsg;
                };
                MsgRemoveChecksum: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _116.MsgRemoveChecksum;
                    isSDK(o: any): o is _116.MsgRemoveChecksumSDKType;
                    isAmino(o: any): o is _116.MsgRemoveChecksumAmino;
                    encode(message: _116.MsgRemoveChecksum, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _116.MsgRemoveChecksum;
                    fromPartial(object: Partial<_116.MsgRemoveChecksum>): _116.MsgRemoveChecksum;
                    fromAmino(object: _116.MsgRemoveChecksumAmino): _116.MsgRemoveChecksum;
                    toAmino(message: _116.MsgRemoveChecksum): _116.MsgRemoveChecksumAmino;
                    fromAminoMsg(object: _116.MsgRemoveChecksumAminoMsg): _116.MsgRemoveChecksum;
                    toAminoMsg(message: _116.MsgRemoveChecksum): _116.MsgRemoveChecksumAminoMsg;
                    fromProtoMsg(message: _116.MsgRemoveChecksumProtoMsg): _116.MsgRemoveChecksum;
                    toProto(message: _116.MsgRemoveChecksum): Uint8Array;
                    toProtoMsg(message: _116.MsgRemoveChecksum): _116.MsgRemoveChecksumProtoMsg;
                };
                MsgRemoveChecksumResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _116.MsgRemoveChecksumResponse;
                    isSDK(o: any): o is _116.MsgRemoveChecksumResponseSDKType;
                    isAmino(o: any): o is _116.MsgRemoveChecksumResponseAmino;
                    encode(_: _116.MsgRemoveChecksumResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _116.MsgRemoveChecksumResponse;
                    fromPartial(_: Partial<_116.MsgRemoveChecksumResponse>): _116.MsgRemoveChecksumResponse;
                    fromAmino(_: _116.MsgRemoveChecksumResponseAmino): _116.MsgRemoveChecksumResponse;
                    toAmino(_: _116.MsgRemoveChecksumResponse): _116.MsgRemoveChecksumResponseAmino;
                    fromAminoMsg(object: _116.MsgRemoveChecksumResponseAminoMsg): _116.MsgRemoveChecksumResponse;
                    toAminoMsg(message: _116.MsgRemoveChecksumResponse): _116.MsgRemoveChecksumResponseAminoMsg;
                    fromProtoMsg(message: _116.MsgRemoveChecksumResponseProtoMsg): _116.MsgRemoveChecksumResponse;
                    toProto(message: _116.MsgRemoveChecksumResponse): Uint8Array;
                    toProtoMsg(message: _116.MsgRemoveChecksumResponse): _116.MsgRemoveChecksumResponseProtoMsg;
                };
                MsgMigrateContract: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _116.MsgMigrateContract;
                    isSDK(o: any): o is _116.MsgMigrateContractSDKType;
                    isAmino(o: any): o is _116.MsgMigrateContractAmino;
                    encode(message: _116.MsgMigrateContract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _116.MsgMigrateContract;
                    fromPartial(object: Partial<_116.MsgMigrateContract>): _116.MsgMigrateContract;
                    fromAmino(object: _116.MsgMigrateContractAmino): _116.MsgMigrateContract;
                    toAmino(message: _116.MsgMigrateContract): _116.MsgMigrateContractAmino;
                    fromAminoMsg(object: _116.MsgMigrateContractAminoMsg): _116.MsgMigrateContract;
                    toAminoMsg(message: _116.MsgMigrateContract): _116.MsgMigrateContractAminoMsg;
                    fromProtoMsg(message: _116.MsgMigrateContractProtoMsg): _116.MsgMigrateContract;
                    toProto(message: _116.MsgMigrateContract): Uint8Array;
                    toProtoMsg(message: _116.MsgMigrateContract): _116.MsgMigrateContractProtoMsg;
                };
                MsgMigrateContractResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _116.MsgMigrateContractResponse;
                    isSDK(o: any): o is _116.MsgMigrateContractResponseSDKType;
                    isAmino(o: any): o is _116.MsgMigrateContractResponseAmino;
                    encode(_: _116.MsgMigrateContractResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _116.MsgMigrateContractResponse;
                    fromPartial(_: Partial<_116.MsgMigrateContractResponse>): _116.MsgMigrateContractResponse;
                    fromAmino(_: _116.MsgMigrateContractResponseAmino): _116.MsgMigrateContractResponse;
                    toAmino(_: _116.MsgMigrateContractResponse): _116.MsgMigrateContractResponseAmino;
                    fromAminoMsg(object: _116.MsgMigrateContractResponseAminoMsg): _116.MsgMigrateContractResponse;
                    toAminoMsg(message: _116.MsgMigrateContractResponse): _116.MsgMigrateContractResponseAminoMsg;
                    fromProtoMsg(message: _116.MsgMigrateContractResponseProtoMsg): _116.MsgMigrateContractResponse;
                    toProto(message: _116.MsgMigrateContractResponse): Uint8Array;
                    toProtoMsg(message: _116.MsgMigrateContractResponse): _116.MsgMigrateContractResponseProtoMsg;
                };
                QueryChecksumsRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _115.QueryChecksumsRequest;
                    isSDK(o: any): o is _115.QueryChecksumsRequestSDKType;
                    isAmino(o: any): o is _115.QueryChecksumsRequestAmino;
                    encode(message: _115.QueryChecksumsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _115.QueryChecksumsRequest;
                    fromPartial(object: Partial<_115.QueryChecksumsRequest>): _115.QueryChecksumsRequest;
                    fromAmino(object: _115.QueryChecksumsRequestAmino): _115.QueryChecksumsRequest;
                    toAmino(message: _115.QueryChecksumsRequest): _115.QueryChecksumsRequestAmino;
                    fromAminoMsg(object: _115.QueryChecksumsRequestAminoMsg): _115.QueryChecksumsRequest;
                    toAminoMsg(message: _115.QueryChecksumsRequest): _115.QueryChecksumsRequestAminoMsg;
                    fromProtoMsg(message: _115.QueryChecksumsRequestProtoMsg): _115.QueryChecksumsRequest;
                    toProto(message: _115.QueryChecksumsRequest): Uint8Array;
                    toProtoMsg(message: _115.QueryChecksumsRequest): _115.QueryChecksumsRequestProtoMsg;
                };
                QueryChecksumsResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _115.QueryChecksumsResponse;
                    isSDK(o: any): o is _115.QueryChecksumsResponseSDKType;
                    isAmino(o: any): o is _115.QueryChecksumsResponseAmino;
                    encode(message: _115.QueryChecksumsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _115.QueryChecksumsResponse;
                    fromPartial(object: Partial<_115.QueryChecksumsResponse>): _115.QueryChecksumsResponse;
                    fromAmino(object: _115.QueryChecksumsResponseAmino): _115.QueryChecksumsResponse;
                    toAmino(message: _115.QueryChecksumsResponse): _115.QueryChecksumsResponseAmino;
                    fromAminoMsg(object: _115.QueryChecksumsResponseAminoMsg): _115.QueryChecksumsResponse;
                    toAminoMsg(message: _115.QueryChecksumsResponse): _115.QueryChecksumsResponseAminoMsg;
                    fromProtoMsg(message: _115.QueryChecksumsResponseProtoMsg): _115.QueryChecksumsResponse;
                    toProto(message: _115.QueryChecksumsResponse): Uint8Array;
                    toProtoMsg(message: _115.QueryChecksumsResponse): _115.QueryChecksumsResponseProtoMsg;
                };
                QueryCodeRequest: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _115.QueryCodeRequest;
                    isSDK(o: any): o is _115.QueryCodeRequestSDKType;
                    isAmino(o: any): o is _115.QueryCodeRequestAmino;
                    encode(message: _115.QueryCodeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _115.QueryCodeRequest;
                    fromPartial(object: Partial<_115.QueryCodeRequest>): _115.QueryCodeRequest;
                    fromAmino(object: _115.QueryCodeRequestAmino): _115.QueryCodeRequest;
                    toAmino(message: _115.QueryCodeRequest): _115.QueryCodeRequestAmino;
                    fromAminoMsg(object: _115.QueryCodeRequestAminoMsg): _115.QueryCodeRequest;
                    toAminoMsg(message: _115.QueryCodeRequest): _115.QueryCodeRequestAminoMsg;
                    fromProtoMsg(message: _115.QueryCodeRequestProtoMsg): _115.QueryCodeRequest;
                    toProto(message: _115.QueryCodeRequest): Uint8Array;
                    toProtoMsg(message: _115.QueryCodeRequest): _115.QueryCodeRequestProtoMsg;
                };
                QueryCodeResponse: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _115.QueryCodeResponse;
                    isSDK(o: any): o is _115.QueryCodeResponseSDKType;
                    isAmino(o: any): o is _115.QueryCodeResponseAmino;
                    encode(message: _115.QueryCodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _115.QueryCodeResponse;
                    fromPartial(object: Partial<_115.QueryCodeResponse>): _115.QueryCodeResponse;
                    fromAmino(object: _115.QueryCodeResponseAmino): _115.QueryCodeResponse;
                    toAmino(message: _115.QueryCodeResponse): _115.QueryCodeResponseAmino;
                    fromAminoMsg(object: _115.QueryCodeResponseAminoMsg): _115.QueryCodeResponse;
                    toAminoMsg(message: _115.QueryCodeResponse): _115.QueryCodeResponseAminoMsg;
                    fromProtoMsg(message: _115.QueryCodeResponseProtoMsg): _115.QueryCodeResponse;
                    toProto(message: _115.QueryCodeResponse): Uint8Array;
                    toProtoMsg(message: _115.QueryCodeResponse): _115.QueryCodeResponseProtoMsg;
                };
                GenesisState: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _114.GenesisState;
                    isSDK(o: any): o is _114.GenesisStateSDKType;
                    isAmino(o: any): o is _114.GenesisStateAmino;
                    encode(message: _114.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _114.GenesisState;
                    fromPartial(object: Partial<_114.GenesisState>): _114.GenesisState;
                    fromAmino(object: _114.GenesisStateAmino): _114.GenesisState;
                    toAmino(message: _114.GenesisState): _114.GenesisStateAmino;
                    fromAminoMsg(object: _114.GenesisStateAminoMsg): _114.GenesisState;
                    toAminoMsg(message: _114.GenesisState): _114.GenesisStateAminoMsg;
                    fromProtoMsg(message: _114.GenesisStateProtoMsg): _114.GenesisState;
                    toProto(message: _114.GenesisState): Uint8Array;
                    toProtoMsg(message: _114.GenesisState): _114.GenesisStateProtoMsg;
                };
                Contract: {
                    typeUrl: string;
                    aminoType: string;
                    is(o: any): o is _114.Contract;
                    isSDK(o: any): o is _114.ContractSDKType;
                    isAmino(o: any): o is _114.ContractAmino;
                    encode(message: _114.Contract, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _114.Contract;
                    fromPartial(object: Partial<_114.Contract>): _114.Contract;
                    fromAmino(object: _114.ContractAmino): _114.Contract;
                    toAmino(message: _114.Contract): _114.ContractAmino;
                    fromAminoMsg(object: _114.ContractAminoMsg): _114.Contract;
                    toAminoMsg(message: _114.Contract): _114.ContractAminoMsg;
                    fromProtoMsg(message: _114.ContractProtoMsg): _114.Contract;
                    toProto(message: _114.Contract): Uint8Array;
                    toProtoMsg(message: _114.Contract): _114.ContractProtoMsg;
                };
            };
        }
    }
    const ClientFactory: {
        createRPCMsgClient: ({ rpc }: {
            rpc: import("../helpers").Rpc;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: import("../cosmos/auth/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                authz: {
                    v1beta1: import("../cosmos/authz/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                bank: {
                    v1beta1: import("../cosmos/bank/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                consensus: {
                    v1: import("../cosmos/consensus/v1/tx.rpc.msg").MsgClientImpl;
                };
                distribution: {
                    v1beta1: import("../cosmos/distribution/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                gov: {
                    v1beta1: import("../cosmos/gov/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                staking: {
                    v1beta1: import("../cosmos/staking/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
                upgrade: {
                    v1beta1: import("../cosmos/upgrade/v1beta1/tx.rpc.msg").MsgClientImpl;
                };
            };
            ibc: {
                applications: {
                    fee: {
                        v1: _317.MsgClientImpl;
                    };
                    interchain_accounts: {
                        controller: {
                            v1: _318.MsgClientImpl;
                        };
                        host: {
                            v1: _319.MsgClientImpl;
                        };
                    };
                    transfer: {
                        v1: _320.MsgClientImpl;
                    };
                };
                core: {
                    channel: {
                        v1: _321.MsgClientImpl;
                    };
                    client: {
                        v1: _322.MsgClientImpl;
                    };
                    connection: {
                        v1: _323.MsgClientImpl;
                    };
                };
                lightclients: {
                    wasm: {
                        v1: _324.MsgClientImpl;
                    };
                };
            };
        }>;
        createRPCQueryClient: ({ rpcEndpoint }: {
            rpcEndpoint: string | import("@cosmjs/tendermint-rpc").HttpEndpoint;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: {
                        accounts(request?: import("../cosmos/auth/v1beta1/query").QueryAccountsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountsResponse>;
                        account(request: import("../cosmos/auth/v1beta1/query").QueryAccountRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountResponse>;
                        accountAddressByID(request: import("../cosmos/auth/v1beta1/query").QueryAccountAddressByIDRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountAddressByIDResponse>;
                        params(request?: import("../cosmos/auth/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryParamsResponse>;
                        moduleAccounts(request?: import("../cosmos/auth/v1beta1/query").QueryModuleAccountsRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryModuleAccountsResponse>;
                        moduleAccountByName(request: import("../cosmos/auth/v1beta1/query").QueryModuleAccountByNameRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryModuleAccountByNameResponse>;
                        bech32Prefix(request?: import("../cosmos/auth/v1beta1/query").Bech32PrefixRequest): Promise<import("../cosmos/auth/v1beta1/query").Bech32PrefixResponse>;
                        addressBytesToString(request: import("../cosmos/auth/v1beta1/query").AddressBytesToStringRequest): Promise<import("../cosmos/auth/v1beta1/query").AddressBytesToStringResponse>;
                        addressStringToBytes(request: import("../cosmos/auth/v1beta1/query").AddressStringToBytesRequest): Promise<import("../cosmos/auth/v1beta1/query").AddressStringToBytesResponse>;
                        accountInfo(request: import("../cosmos/auth/v1beta1/query").QueryAccountInfoRequest): Promise<import("../cosmos/auth/v1beta1/query").QueryAccountInfoResponse>;
                    };
                };
                authz: {
                    v1beta1: {
                        grants(request: import("../cosmos/authz/v1beta1/query").QueryGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGrantsResponse>;
                        granterGrants(request: import("../cosmos/authz/v1beta1/query").QueryGranterGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGranterGrantsResponse>;
                        granteeGrants(request: import("../cosmos/authz/v1beta1/query").QueryGranteeGrantsRequest): Promise<import("../cosmos/authz/v1beta1/query").QueryGranteeGrantsResponse>;
                    };
                };
                bank: {
                    v1beta1: {
                        balance(request: import("../cosmos/bank/v1beta1/query").QueryBalanceRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryBalanceResponse>;
                        allBalances(request: import("../cosmos/bank/v1beta1/query").QueryAllBalancesRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryAllBalancesResponse>;
                        spendableBalances(request: import("../cosmos/bank/v1beta1/query").QuerySpendableBalancesRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySpendableBalancesResponse>;
                        spendableBalanceByDenom(request: import("../cosmos/bank/v1beta1/query").QuerySpendableBalanceByDenomRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySpendableBalanceByDenomResponse>;
                        totalSupply(request?: import("../cosmos/bank/v1beta1/query").QueryTotalSupplyRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryTotalSupplyResponse>;
                        supplyOf(request: import("../cosmos/bank/v1beta1/query").QuerySupplyOfRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySupplyOfResponse>;
                        params(request?: import("../cosmos/bank/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryParamsResponse>;
                        denomMetadata(request: import("../cosmos/bank/v1beta1/query").QueryDenomMetadataRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomMetadataResponse>;
                        denomsMetadata(request?: import("../cosmos/bank/v1beta1/query").QueryDenomsMetadataRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomsMetadataResponse>;
                        denomOwners(request: import("../cosmos/bank/v1beta1/query").QueryDenomOwnersRequest): Promise<import("../cosmos/bank/v1beta1/query").QueryDenomOwnersResponse>;
                        sendEnabled(request: import("../cosmos/bank/v1beta1/query").QuerySendEnabledRequest): Promise<import("../cosmos/bank/v1beta1/query").QuerySendEnabledResponse>;
                    };
                };
                base: {
                    node: {
                        v1beta1: {
                            config(request?: import("../cosmos/base/node/v1beta1/query").ConfigRequest): Promise<import("../cosmos/base/node/v1beta1/query").ConfigResponse>;
                        };
                    };
                };
                consensus: {
                    v1: {
                        params(request?: import("../cosmos/consensus/v1/query").QueryParamsRequest): Promise<import("../cosmos/consensus/v1/query").QueryParamsResponse>;
                    };
                };
                distribution: {
                    v1beta1: {
                        params(request?: import("../cosmos/distribution/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryParamsResponse>;
                        validatorDistributionInfo(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorDistributionInfoRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorDistributionInfoResponse>;
                        validatorOutstandingRewards(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorOutstandingRewardsResponse>;
                        validatorCommission(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorCommissionRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorCommissionResponse>;
                        validatorSlashes(request: import("../cosmos/distribution/v1beta1/query").QueryValidatorSlashesRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryValidatorSlashesResponse>;
                        delegationRewards(request: import("../cosmos/distribution/v1beta1/query").QueryDelegationRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegationRewardsResponse>;
                        delegationTotalRewards(request: import("../cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegationTotalRewardsResponse>;
                        delegatorValidators(request: import("../cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorWithdrawAddress(request: import("../cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryDelegatorWithdrawAddressResponse>;
                        communityPool(request?: import("../cosmos/distribution/v1beta1/query").QueryCommunityPoolRequest): Promise<import("../cosmos/distribution/v1beta1/query").QueryCommunityPoolResponse>;
                    };
                };
                gov: {
                    v1beta1: {
                        proposal(request: import("../cosmos/gov/v1beta1/query").QueryProposalRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryProposalResponse>;
                        proposals(request: import("../cosmos/gov/v1beta1/query").QueryProposalsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryProposalsResponse>;
                        vote(request: import("../cosmos/gov/v1beta1/query").QueryVoteRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryVoteResponse>;
                        votes(request: import("../cosmos/gov/v1beta1/query").QueryVotesRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryVotesResponse>;
                        params(request: import("../cosmos/gov/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryParamsResponse>;
                        deposit(request: import("../cosmos/gov/v1beta1/query").QueryDepositRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryDepositResponse>;
                        deposits(request: import("../cosmos/gov/v1beta1/query").QueryDepositsRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryDepositsResponse>;
                        tallyResult(request: import("../cosmos/gov/v1beta1/query").QueryTallyResultRequest): Promise<import("../cosmos/gov/v1beta1/query").QueryTallyResultResponse>;
                    };
                };
                orm: {
                    query: {
                        v1alpha1: {
                            get(request: import("../cosmos/orm/query/v1alpha1/query").GetRequest): Promise<import("../cosmos/orm/query/v1alpha1/query").GetResponse>;
                            list(request: import("../cosmos/orm/query/v1alpha1/query").ListRequest): Promise<import("../cosmos/orm/query/v1alpha1/query").ListResponse>;
                        };
                    };
                };
                staking: {
                    v1beta1: {
                        validators(request: import("../cosmos/staking/v1beta1/query").QueryValidatorsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorsResponse>;
                        validator(request: import("../cosmos/staking/v1beta1/query").QueryValidatorRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorResponse>;
                        validatorDelegations(request: import("../cosmos/staking/v1beta1/query").QueryValidatorDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorDelegationsResponse>;
                        validatorUnbondingDelegations(request: import("../cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryValidatorUnbondingDelegationsResponse>;
                        delegation(request: import("../cosmos/staking/v1beta1/query").QueryDelegationRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegationResponse>;
                        unbondingDelegation(request: import("../cosmos/staking/v1beta1/query").QueryUnbondingDelegationRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryUnbondingDelegationResponse>;
                        delegatorDelegations(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorDelegationsResponse>;
                        delegatorUnbondingDelegations(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorUnbondingDelegationsResponse>;
                        redelegations(request: import("../cosmos/staking/v1beta1/query").QueryRedelegationsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryRedelegationsResponse>;
                        delegatorValidators(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorsResponse>;
                        delegatorValidator(request: import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryDelegatorValidatorResponse>;
                        historicalInfo(request: import("../cosmos/staking/v1beta1/query").QueryHistoricalInfoRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryHistoricalInfoResponse>;
                        pool(request?: import("../cosmos/staking/v1beta1/query").QueryPoolRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryPoolResponse>;
                        params(request?: import("../cosmos/staking/v1beta1/query").QueryParamsRequest): Promise<import("../cosmos/staking/v1beta1/query").QueryParamsResponse>;
                    };
                };
                tx: {
                    v1beta1: {
                        simulate(request: import("../cosmos/tx/v1beta1/service").SimulateRequest): Promise<import("../cosmos/tx/v1beta1/service").SimulateResponse>;
                        getTx(request: import("../cosmos/tx/v1beta1/service").GetTxRequest): Promise<import("../cosmos/tx/v1beta1/service").GetTxResponse>;
                        broadcastTx(request: import("../cosmos/tx/v1beta1/service").BroadcastTxRequest): Promise<import("../cosmos/tx/v1beta1/service").BroadcastTxResponse>;
                        getTxsEvent(request: import("../cosmos/tx/v1beta1/service").GetTxsEventRequest): Promise<import("../cosmos/tx/v1beta1/service").GetTxsEventResponse>;
                        getBlockWithTxs(request: import("../cosmos/tx/v1beta1/service").GetBlockWithTxsRequest): Promise<import("../cosmos/tx/v1beta1/service").GetBlockWithTxsResponse>;
                        txDecode(request: import("../cosmos/tx/v1beta1/service").TxDecodeRequest): Promise<import("../cosmos/tx/v1beta1/service").TxDecodeResponse>;
                        txEncode(request: import("../cosmos/tx/v1beta1/service").TxEncodeRequest): Promise<import("../cosmos/tx/v1beta1/service").TxEncodeResponse>;
                        txEncodeAmino(request: import("../cosmos/tx/v1beta1/service").TxEncodeAminoRequest): Promise<import("../cosmos/tx/v1beta1/service").TxEncodeAminoResponse>;
                        txDecodeAmino(request: import("../cosmos/tx/v1beta1/service").TxDecodeAminoRequest): Promise<import("../cosmos/tx/v1beta1/service").TxDecodeAminoResponse>;
                    };
                };
                upgrade: {
                    v1beta1: {
                        currentPlan(request?: import("../cosmos/upgrade/v1beta1/query").QueryCurrentPlanRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryCurrentPlanResponse>;
                        appliedPlan(request: import("../cosmos/upgrade/v1beta1/query").QueryAppliedPlanRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryAppliedPlanResponse>;
                        upgradedConsensusState(request: import("../cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryUpgradedConsensusStateResponse>;
                        moduleVersions(request: import("../cosmos/upgrade/v1beta1/query").QueryModuleVersionsRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryModuleVersionsResponse>;
                        authority(request?: import("../cosmos/upgrade/v1beta1/query").QueryAuthorityRequest): Promise<import("../cosmos/upgrade/v1beta1/query").QueryAuthorityResponse>;
                    };
                };
            };
            ibc: {
                applications: {
                    fee: {
                        v1: {
                            incentivizedPackets(request: _78.QueryIncentivizedPacketsRequest): Promise<_78.QueryIncentivizedPacketsResponse>;
                            incentivizedPacket(request: _78.QueryIncentivizedPacketRequest): Promise<_78.QueryIncentivizedPacketResponse>;
                            incentivizedPacketsForChannel(request: _78.QueryIncentivizedPacketsForChannelRequest): Promise<_78.QueryIncentivizedPacketsForChannelResponse>;
                            totalRecvFees(request: _78.QueryTotalRecvFeesRequest): Promise<_78.QueryTotalRecvFeesResponse>;
                            totalAckFees(request: _78.QueryTotalAckFeesRequest): Promise<_78.QueryTotalAckFeesResponse>;
                            totalTimeoutFees(request: _78.QueryTotalTimeoutFeesRequest): Promise<_78.QueryTotalTimeoutFeesResponse>;
                            payee(request: _78.QueryPayeeRequest): Promise<_78.QueryPayeeResponse>;
                            counterpartyPayee(request: _78.QueryCounterpartyPayeeRequest): Promise<_78.QueryCounterpartyPayeeResponse>;
                            feeEnabledChannels(request: _78.QueryFeeEnabledChannelsRequest): Promise<_78.QueryFeeEnabledChannelsResponse>;
                            feeEnabledChannel(request: _78.QueryFeeEnabledChannelRequest): Promise<_78.QueryFeeEnabledChannelResponse>;
                        };
                    };
                    interchain_accounts: {
                        controller: {
                            v1: {
                                interchainAccount(request: _81.QueryInterchainAccountRequest): Promise<_81.QueryInterchainAccountResponse>;
                                params(request?: _81.QueryParamsRequest): Promise<_81.QueryParamsResponse>;
                            };
                        };
                        host: {
                            v1: {
                                params(request?: _85.QueryParamsRequest): Promise<_85.QueryParamsResponse>;
                            };
                        };
                    };
                    transfer: {
                        v1: {
                            denomTraces(request?: _92.QueryDenomTracesRequest): Promise<_92.QueryDenomTracesResponse>;
                            denomTrace(request: _92.QueryDenomTraceRequest): Promise<_92.QueryDenomTraceResponse>;
                            params(request?: _92.QueryParamsRequest): Promise<_92.QueryParamsResponse>;
                            denomHash(request: _92.QueryDenomHashRequest): Promise<_92.QueryDenomHashResponse>;
                            escrowAddress(request: _92.QueryEscrowAddressRequest): Promise<_92.QueryEscrowAddressResponse>;
                            totalEscrowForDenom(request: _92.QueryTotalEscrowForDenomRequest): Promise<_92.QueryTotalEscrowForDenomResponse>;
                        };
                    };
                };
                core: {
                    channel: {
                        v1: {
                            channel(request: _98.QueryChannelRequest): Promise<_98.QueryChannelResponse>;
                            channels(request?: _98.QueryChannelsRequest): Promise<_98.QueryChannelsResponse>;
                            connectionChannels(request: _98.QueryConnectionChannelsRequest): Promise<_98.QueryConnectionChannelsResponse>;
                            channelClientState(request: _98.QueryChannelClientStateRequest): Promise<_98.QueryChannelClientStateResponse>;
                            channelConsensusState(request: _98.QueryChannelConsensusStateRequest): Promise<_98.QueryChannelConsensusStateResponse>;
                            packetCommitment(request: _98.QueryPacketCommitmentRequest): Promise<_98.QueryPacketCommitmentResponse>;
                            packetCommitments(request: _98.QueryPacketCommitmentsRequest): Promise<_98.QueryPacketCommitmentsResponse>;
                            packetReceipt(request: _98.QueryPacketReceiptRequest): Promise<_98.QueryPacketReceiptResponse>;
                            packetAcknowledgement(request: _98.QueryPacketAcknowledgementRequest): Promise<_98.QueryPacketAcknowledgementResponse>;
                            packetAcknowledgements(request: _98.QueryPacketAcknowledgementsRequest): Promise<_98.QueryPacketAcknowledgementsResponse>;
                            unreceivedPackets(request: _98.QueryUnreceivedPacketsRequest): Promise<_98.QueryUnreceivedPacketsResponse>;
                            unreceivedAcks(request: _98.QueryUnreceivedAcksRequest): Promise<_98.QueryUnreceivedAcksResponse>;
                            nextSequenceReceive(request: _98.QueryNextSequenceReceiveRequest): Promise<_98.QueryNextSequenceReceiveResponse>;
                            nextSequenceSend(request: _98.QueryNextSequenceSendRequest): Promise<_98.QueryNextSequenceSendResponse>;
                            upgradeError(request: _98.QueryUpgradeErrorRequest): Promise<_98.QueryUpgradeErrorResponse>;
                            upgrade(request: _98.QueryUpgradeRequest): Promise<_98.QueryUpgradeResponse>;
                            channelParams(request?: _98.QueryChannelParamsRequest): Promise<_98.QueryChannelParamsResponse>;
                        };
                    };
                    client: {
                        v1: {
                            clientState(request: _103.QueryClientStateRequest): Promise<_103.QueryClientStateResponse>;
                            clientStates(request?: _103.QueryClientStatesRequest): Promise<_103.QueryClientStatesResponse>;
                            consensusState(request: _103.QueryConsensusStateRequest): Promise<_103.QueryConsensusStateResponse>;
                            consensusStates(request: _103.QueryConsensusStatesRequest): Promise<_103.QueryConsensusStatesResponse>;
                            consensusStateHeights(request: _103.QueryConsensusStateHeightsRequest): Promise<_103.QueryConsensusStateHeightsResponse>;
                            clientStatus(request: _103.QueryClientStatusRequest): Promise<_103.QueryClientStatusResponse>;
                            clientParams(request?: _103.QueryClientParamsRequest): Promise<_103.QueryClientParamsResponse>;
                            upgradedClientState(request?: _103.QueryUpgradedClientStateRequest): Promise<_103.QueryUpgradedClientStateResponse>;
                            upgradedConsensusState(request?: _103.QueryUpgradedConsensusStateRequest): Promise<_103.QueryUpgradedConsensusStateResponse>;
                            verifyMembership(request: _103.QueryVerifyMembershipRequest): Promise<_103.QueryVerifyMembershipResponse>;
                        };
                    };
                    connection: {
                        v1: {
                            connection(request: _108.QueryConnectionRequest): Promise<_108.QueryConnectionResponse>;
                            connections(request?: _108.QueryConnectionsRequest): Promise<_108.QueryConnectionsResponse>;
                            clientConnections(request: _108.QueryClientConnectionsRequest): Promise<_108.QueryClientConnectionsResponse>;
                            connectionClientState(request: _108.QueryConnectionClientStateRequest): Promise<_108.QueryConnectionClientStateResponse>;
                            connectionConsensusState(request: _108.QueryConnectionConsensusStateRequest): Promise<_108.QueryConnectionConsensusStateResponse>;
                            connectionParams(request?: _108.QueryConnectionParamsRequest): Promise<_108.QueryConnectionParamsResponse>;
                        };
                    };
                };
                lightclients: {
                    wasm: {
                        v1: {
                            checksums(request?: _115.QueryChecksumsRequest): Promise<_115.QueryChecksumsResponse>;
                            code(request: _115.QueryCodeRequest): Promise<_115.QueryCodeResponse>;
                        };
                    };
                };
            };
        }>;
        createLCDClient: ({ restEndpoint }: {
            restEndpoint: string;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: import("../cosmos/auth/v1beta1/query.lcd").LCDQueryClient;
                };
                authz: {
                    v1beta1: import("../cosmos/authz/v1beta1/query.lcd").LCDQueryClient;
                };
                bank: {
                    v1beta1: import("../cosmos/bank/v1beta1/query.lcd").LCDQueryClient;
                };
                base: {
                    node: {
                        v1beta1: import("../cosmos/base/node/v1beta1/query.lcd").LCDQueryClient;
                    };
                };
                consensus: {
                    v1: import("../cosmos/consensus/v1/query.lcd").LCDQueryClient;
                };
                distribution: {
                    v1beta1: import("../cosmos/distribution/v1beta1/query.lcd").LCDQueryClient;
                };
                gov: {
                    v1beta1: import("../cosmos/gov/v1beta1/query.lcd").LCDQueryClient;
                };
                staking: {
                    v1beta1: import("../cosmos/staking/v1beta1/query.lcd").LCDQueryClient;
                };
                tx: {
                    v1beta1: import("../cosmos/tx/v1beta1/service.lcd").LCDQueryClient;
                };
                upgrade: {
                    v1beta1: import("../cosmos/upgrade/v1beta1/query.lcd").LCDQueryClient;
                };
            };
            ibc: {
                applications: {
                    fee: {
                        v1: _301.LCDQueryClient;
                    };
                    interchain_accounts: {
                        controller: {
                            v1: _302.LCDQueryClient;
                        };
                        host: {
                            v1: _303.LCDQueryClient;
                        };
                    };
                    transfer: {
                        v1: _304.LCDQueryClient;
                    };
                };
                core: {
                    channel: {
                        v1: _305.LCDQueryClient;
                    };
                    client: {
                        v1: _306.LCDQueryClient;
                    };
                    connection: {
                        v1: _307.LCDQueryClient;
                    };
                };
                lightclients: {
                    wasm: {
                        v1: _308.LCDQueryClient;
                    };
                };
            };
        }>;
    };
}
