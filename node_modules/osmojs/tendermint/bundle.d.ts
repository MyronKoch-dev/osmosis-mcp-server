import * as _225 from "./abci/types";
import * as _226 from "./crypto/keys";
import * as _227 from "./crypto/proof";
import * as _228 from "./libs/bits/types";
import * as _229 from "./p2p/types";
import * as _230 from "./types/block";
import * as _231 from "./types/evidence";
import * as _232 from "./types/params";
import * as _233 from "./types/types";
import * as _234 from "./types/validator";
import * as _235 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _225.CheckTxType;
        checkTxTypeToJSON(object: _225.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _225.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _225.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _225.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _225.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _225.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _225.ResponseProcessProposal_ProposalStatus): string;
        misbehaviorTypeFromJSON(object: any): _225.MisbehaviorType;
        misbehaviorTypeToJSON(object: _225.MisbehaviorType): string;
        CheckTxType: typeof _225.CheckTxType;
        CheckTxTypeSDKType: typeof _225.CheckTxType;
        CheckTxTypeAmino: typeof _225.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _225.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _225.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _225.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _225.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _225.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _225.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _225.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _225.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _225.ResponseProcessProposal_ProposalStatus;
        MisbehaviorType: typeof _225.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _225.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _225.MisbehaviorType;
        Request: {
            typeUrl: string;
            is(o: any): o is _225.Request;
            isSDK(o: any): o is _225.RequestSDKType;
            isAmino(o: any): o is _225.RequestAmino;
            encode(message: _225.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.Request;
            fromPartial(object: Partial<_225.Request>): _225.Request;
            fromAmino(object: _225.RequestAmino): _225.Request;
            toAmino(message: _225.Request): _225.RequestAmino;
            fromAminoMsg(object: _225.RequestAminoMsg): _225.Request;
            fromProtoMsg(message: _225.RequestProtoMsg): _225.Request;
            toProto(message: _225.Request): Uint8Array;
            toProtoMsg(message: _225.Request): _225.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            is(o: any): o is _225.RequestEcho;
            isSDK(o: any): o is _225.RequestEchoSDKType;
            isAmino(o: any): o is _225.RequestEchoAmino;
            encode(message: _225.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestEcho;
            fromPartial(object: Partial<_225.RequestEcho>): _225.RequestEcho;
            fromAmino(object: _225.RequestEchoAmino): _225.RequestEcho;
            toAmino(message: _225.RequestEcho): _225.RequestEchoAmino;
            fromAminoMsg(object: _225.RequestEchoAminoMsg): _225.RequestEcho;
            fromProtoMsg(message: _225.RequestEchoProtoMsg): _225.RequestEcho;
            toProto(message: _225.RequestEcho): Uint8Array;
            toProtoMsg(message: _225.RequestEcho): _225.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            is(o: any): o is _225.RequestFlush;
            isSDK(o: any): o is _225.RequestFlushSDKType;
            isAmino(o: any): o is _225.RequestFlushAmino;
            encode(_: _225.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestFlush;
            fromPartial(_: Partial<_225.RequestFlush>): _225.RequestFlush;
            fromAmino(_: _225.RequestFlushAmino): _225.RequestFlush;
            toAmino(_: _225.RequestFlush): _225.RequestFlushAmino;
            fromAminoMsg(object: _225.RequestFlushAminoMsg): _225.RequestFlush;
            fromProtoMsg(message: _225.RequestFlushProtoMsg): _225.RequestFlush;
            toProto(message: _225.RequestFlush): Uint8Array;
            toProtoMsg(message: _225.RequestFlush): _225.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            is(o: any): o is _225.RequestInfo;
            isSDK(o: any): o is _225.RequestInfoSDKType;
            isAmino(o: any): o is _225.RequestInfoAmino;
            encode(message: _225.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestInfo;
            fromPartial(object: Partial<_225.RequestInfo>): _225.RequestInfo;
            fromAmino(object: _225.RequestInfoAmino): _225.RequestInfo;
            toAmino(message: _225.RequestInfo): _225.RequestInfoAmino;
            fromAminoMsg(object: _225.RequestInfoAminoMsg): _225.RequestInfo;
            fromProtoMsg(message: _225.RequestInfoProtoMsg): _225.RequestInfo;
            toProto(message: _225.RequestInfo): Uint8Array;
            toProtoMsg(message: _225.RequestInfo): _225.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            is(o: any): o is _225.RequestInitChain;
            isSDK(o: any): o is _225.RequestInitChainSDKType;
            isAmino(o: any): o is _225.RequestInitChainAmino;
            encode(message: _225.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestInitChain;
            fromPartial(object: Partial<_225.RequestInitChain>): _225.RequestInitChain;
            fromAmino(object: _225.RequestInitChainAmino): _225.RequestInitChain;
            toAmino(message: _225.RequestInitChain): _225.RequestInitChainAmino;
            fromAminoMsg(object: _225.RequestInitChainAminoMsg): _225.RequestInitChain;
            fromProtoMsg(message: _225.RequestInitChainProtoMsg): _225.RequestInitChain;
            toProto(message: _225.RequestInitChain): Uint8Array;
            toProtoMsg(message: _225.RequestInitChain): _225.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            is(o: any): o is _225.RequestQuery;
            isSDK(o: any): o is _225.RequestQuerySDKType;
            isAmino(o: any): o is _225.RequestQueryAmino;
            encode(message: _225.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestQuery;
            fromPartial(object: Partial<_225.RequestQuery>): _225.RequestQuery;
            fromAmino(object: _225.RequestQueryAmino): _225.RequestQuery;
            toAmino(message: _225.RequestQuery): _225.RequestQueryAmino;
            fromAminoMsg(object: _225.RequestQueryAminoMsg): _225.RequestQuery;
            fromProtoMsg(message: _225.RequestQueryProtoMsg): _225.RequestQuery;
            toProto(message: _225.RequestQuery): Uint8Array;
            toProtoMsg(message: _225.RequestQuery): _225.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            is(o: any): o is _225.RequestBeginBlock;
            isSDK(o: any): o is _225.RequestBeginBlockSDKType;
            isAmino(o: any): o is _225.RequestBeginBlockAmino;
            encode(message: _225.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestBeginBlock;
            fromPartial(object: Partial<_225.RequestBeginBlock>): _225.RequestBeginBlock;
            fromAmino(object: _225.RequestBeginBlockAmino): _225.RequestBeginBlock;
            toAmino(message: _225.RequestBeginBlock): _225.RequestBeginBlockAmino;
            fromAminoMsg(object: _225.RequestBeginBlockAminoMsg): _225.RequestBeginBlock;
            fromProtoMsg(message: _225.RequestBeginBlockProtoMsg): _225.RequestBeginBlock;
            toProto(message: _225.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _225.RequestBeginBlock): _225.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            is(o: any): o is _225.RequestCheckTx;
            isSDK(o: any): o is _225.RequestCheckTxSDKType;
            isAmino(o: any): o is _225.RequestCheckTxAmino;
            encode(message: _225.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestCheckTx;
            fromPartial(object: Partial<_225.RequestCheckTx>): _225.RequestCheckTx;
            fromAmino(object: _225.RequestCheckTxAmino): _225.RequestCheckTx;
            toAmino(message: _225.RequestCheckTx): _225.RequestCheckTxAmino;
            fromAminoMsg(object: _225.RequestCheckTxAminoMsg): _225.RequestCheckTx;
            fromProtoMsg(message: _225.RequestCheckTxProtoMsg): _225.RequestCheckTx;
            toProto(message: _225.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _225.RequestCheckTx): _225.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            is(o: any): o is _225.RequestDeliverTx;
            isSDK(o: any): o is _225.RequestDeliverTxSDKType;
            isAmino(o: any): o is _225.RequestDeliverTxAmino;
            encode(message: _225.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestDeliverTx;
            fromPartial(object: Partial<_225.RequestDeliverTx>): _225.RequestDeliverTx;
            fromAmino(object: _225.RequestDeliverTxAmino): _225.RequestDeliverTx;
            toAmino(message: _225.RequestDeliverTx): _225.RequestDeliverTxAmino;
            fromAminoMsg(object: _225.RequestDeliverTxAminoMsg): _225.RequestDeliverTx;
            fromProtoMsg(message: _225.RequestDeliverTxProtoMsg): _225.RequestDeliverTx;
            toProto(message: _225.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _225.RequestDeliverTx): _225.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            is(o: any): o is _225.RequestEndBlock;
            isSDK(o: any): o is _225.RequestEndBlockSDKType;
            isAmino(o: any): o is _225.RequestEndBlockAmino;
            encode(message: _225.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestEndBlock;
            fromPartial(object: Partial<_225.RequestEndBlock>): _225.RequestEndBlock;
            fromAmino(object: _225.RequestEndBlockAmino): _225.RequestEndBlock;
            toAmino(message: _225.RequestEndBlock): _225.RequestEndBlockAmino;
            fromAminoMsg(object: _225.RequestEndBlockAminoMsg): _225.RequestEndBlock;
            fromProtoMsg(message: _225.RequestEndBlockProtoMsg): _225.RequestEndBlock;
            toProto(message: _225.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _225.RequestEndBlock): _225.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            is(o: any): o is _225.RequestCommit;
            isSDK(o: any): o is _225.RequestCommitSDKType;
            isAmino(o: any): o is _225.RequestCommitAmino;
            encode(_: _225.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestCommit;
            fromPartial(_: Partial<_225.RequestCommit>): _225.RequestCommit;
            fromAmino(_: _225.RequestCommitAmino): _225.RequestCommit;
            toAmino(_: _225.RequestCommit): _225.RequestCommitAmino;
            fromAminoMsg(object: _225.RequestCommitAminoMsg): _225.RequestCommit;
            fromProtoMsg(message: _225.RequestCommitProtoMsg): _225.RequestCommit;
            toProto(message: _225.RequestCommit): Uint8Array;
            toProtoMsg(message: _225.RequestCommit): _225.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            is(o: any): o is _225.RequestListSnapshots;
            isSDK(o: any): o is _225.RequestListSnapshotsSDKType;
            isAmino(o: any): o is _225.RequestListSnapshotsAmino;
            encode(_: _225.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestListSnapshots;
            fromPartial(_: Partial<_225.RequestListSnapshots>): _225.RequestListSnapshots;
            fromAmino(_: _225.RequestListSnapshotsAmino): _225.RequestListSnapshots;
            toAmino(_: _225.RequestListSnapshots): _225.RequestListSnapshotsAmino;
            fromAminoMsg(object: _225.RequestListSnapshotsAminoMsg): _225.RequestListSnapshots;
            fromProtoMsg(message: _225.RequestListSnapshotsProtoMsg): _225.RequestListSnapshots;
            toProto(message: _225.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _225.RequestListSnapshots): _225.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _225.RequestOfferSnapshot;
            isSDK(o: any): o is _225.RequestOfferSnapshotSDKType;
            isAmino(o: any): o is _225.RequestOfferSnapshotAmino;
            encode(message: _225.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestOfferSnapshot;
            fromPartial(object: Partial<_225.RequestOfferSnapshot>): _225.RequestOfferSnapshot;
            fromAmino(object: _225.RequestOfferSnapshotAmino): _225.RequestOfferSnapshot;
            toAmino(message: _225.RequestOfferSnapshot): _225.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _225.RequestOfferSnapshotAminoMsg): _225.RequestOfferSnapshot;
            fromProtoMsg(message: _225.RequestOfferSnapshotProtoMsg): _225.RequestOfferSnapshot;
            toProto(message: _225.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _225.RequestOfferSnapshot): _225.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _225.RequestLoadSnapshotChunk;
            isSDK(o: any): o is _225.RequestLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _225.RequestLoadSnapshotChunkAmino;
            encode(message: _225.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_225.RequestLoadSnapshotChunk>): _225.RequestLoadSnapshotChunk;
            fromAmino(object: _225.RequestLoadSnapshotChunkAmino): _225.RequestLoadSnapshotChunk;
            toAmino(message: _225.RequestLoadSnapshotChunk): _225.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _225.RequestLoadSnapshotChunkAminoMsg): _225.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _225.RequestLoadSnapshotChunkProtoMsg): _225.RequestLoadSnapshotChunk;
            toProto(message: _225.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _225.RequestLoadSnapshotChunk): _225.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _225.RequestApplySnapshotChunk;
            isSDK(o: any): o is _225.RequestApplySnapshotChunkSDKType;
            isAmino(o: any): o is _225.RequestApplySnapshotChunkAmino;
            encode(message: _225.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_225.RequestApplySnapshotChunk>): _225.RequestApplySnapshotChunk;
            fromAmino(object: _225.RequestApplySnapshotChunkAmino): _225.RequestApplySnapshotChunk;
            toAmino(message: _225.RequestApplySnapshotChunk): _225.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _225.RequestApplySnapshotChunkAminoMsg): _225.RequestApplySnapshotChunk;
            fromProtoMsg(message: _225.RequestApplySnapshotChunkProtoMsg): _225.RequestApplySnapshotChunk;
            toProto(message: _225.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _225.RequestApplySnapshotChunk): _225.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            is(o: any): o is _225.RequestPrepareProposal;
            isSDK(o: any): o is _225.RequestPrepareProposalSDKType;
            isAmino(o: any): o is _225.RequestPrepareProposalAmino;
            encode(message: _225.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestPrepareProposal;
            fromPartial(object: Partial<_225.RequestPrepareProposal>): _225.RequestPrepareProposal;
            fromAmino(object: _225.RequestPrepareProposalAmino): _225.RequestPrepareProposal;
            toAmino(message: _225.RequestPrepareProposal): _225.RequestPrepareProposalAmino;
            fromAminoMsg(object: _225.RequestPrepareProposalAminoMsg): _225.RequestPrepareProposal;
            fromProtoMsg(message: _225.RequestPrepareProposalProtoMsg): _225.RequestPrepareProposal;
            toProto(message: _225.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _225.RequestPrepareProposal): _225.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            is(o: any): o is _225.RequestProcessProposal;
            isSDK(o: any): o is _225.RequestProcessProposalSDKType;
            isAmino(o: any): o is _225.RequestProcessProposalAmino;
            encode(message: _225.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.RequestProcessProposal;
            fromPartial(object: Partial<_225.RequestProcessProposal>): _225.RequestProcessProposal;
            fromAmino(object: _225.RequestProcessProposalAmino): _225.RequestProcessProposal;
            toAmino(message: _225.RequestProcessProposal): _225.RequestProcessProposalAmino;
            fromAminoMsg(object: _225.RequestProcessProposalAminoMsg): _225.RequestProcessProposal;
            fromProtoMsg(message: _225.RequestProcessProposalProtoMsg): _225.RequestProcessProposal;
            toProto(message: _225.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _225.RequestProcessProposal): _225.RequestProcessProposalProtoMsg;
        };
        Response: {
            typeUrl: string;
            is(o: any): o is _225.Response;
            isSDK(o: any): o is _225.ResponseSDKType;
            isAmino(o: any): o is _225.ResponseAmino;
            encode(message: _225.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.Response;
            fromPartial(object: Partial<_225.Response>): _225.Response;
            fromAmino(object: _225.ResponseAmino): _225.Response;
            toAmino(message: _225.Response): _225.ResponseAmino;
            fromAminoMsg(object: _225.ResponseAminoMsg): _225.Response;
            fromProtoMsg(message: _225.ResponseProtoMsg): _225.Response;
            toProto(message: _225.Response): Uint8Array;
            toProtoMsg(message: _225.Response): _225.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            is(o: any): o is _225.ResponseException;
            isSDK(o: any): o is _225.ResponseExceptionSDKType;
            isAmino(o: any): o is _225.ResponseExceptionAmino;
            encode(message: _225.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseException;
            fromPartial(object: Partial<_225.ResponseException>): _225.ResponseException;
            fromAmino(object: _225.ResponseExceptionAmino): _225.ResponseException;
            toAmino(message: _225.ResponseException): _225.ResponseExceptionAmino;
            fromAminoMsg(object: _225.ResponseExceptionAminoMsg): _225.ResponseException;
            fromProtoMsg(message: _225.ResponseExceptionProtoMsg): _225.ResponseException;
            toProto(message: _225.ResponseException): Uint8Array;
            toProtoMsg(message: _225.ResponseException): _225.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            is(o: any): o is _225.ResponseEcho;
            isSDK(o: any): o is _225.ResponseEchoSDKType;
            isAmino(o: any): o is _225.ResponseEchoAmino;
            encode(message: _225.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseEcho;
            fromPartial(object: Partial<_225.ResponseEcho>): _225.ResponseEcho;
            fromAmino(object: _225.ResponseEchoAmino): _225.ResponseEcho;
            toAmino(message: _225.ResponseEcho): _225.ResponseEchoAmino;
            fromAminoMsg(object: _225.ResponseEchoAminoMsg): _225.ResponseEcho;
            fromProtoMsg(message: _225.ResponseEchoProtoMsg): _225.ResponseEcho;
            toProto(message: _225.ResponseEcho): Uint8Array;
            toProtoMsg(message: _225.ResponseEcho): _225.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            is(o: any): o is _225.ResponseFlush;
            isSDK(o: any): o is _225.ResponseFlushSDKType;
            isAmino(o: any): o is _225.ResponseFlushAmino;
            encode(_: _225.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseFlush;
            fromPartial(_: Partial<_225.ResponseFlush>): _225.ResponseFlush;
            fromAmino(_: _225.ResponseFlushAmino): _225.ResponseFlush;
            toAmino(_: _225.ResponseFlush): _225.ResponseFlushAmino;
            fromAminoMsg(object: _225.ResponseFlushAminoMsg): _225.ResponseFlush;
            fromProtoMsg(message: _225.ResponseFlushProtoMsg): _225.ResponseFlush;
            toProto(message: _225.ResponseFlush): Uint8Array;
            toProtoMsg(message: _225.ResponseFlush): _225.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            is(o: any): o is _225.ResponseInfo;
            isSDK(o: any): o is _225.ResponseInfoSDKType;
            isAmino(o: any): o is _225.ResponseInfoAmino;
            encode(message: _225.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseInfo;
            fromPartial(object: Partial<_225.ResponseInfo>): _225.ResponseInfo;
            fromAmino(object: _225.ResponseInfoAmino): _225.ResponseInfo;
            toAmino(message: _225.ResponseInfo): _225.ResponseInfoAmino;
            fromAminoMsg(object: _225.ResponseInfoAminoMsg): _225.ResponseInfo;
            fromProtoMsg(message: _225.ResponseInfoProtoMsg): _225.ResponseInfo;
            toProto(message: _225.ResponseInfo): Uint8Array;
            toProtoMsg(message: _225.ResponseInfo): _225.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            is(o: any): o is _225.ResponseInitChain;
            isSDK(o: any): o is _225.ResponseInitChainSDKType;
            isAmino(o: any): o is _225.ResponseInitChainAmino;
            encode(message: _225.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseInitChain;
            fromPartial(object: Partial<_225.ResponseInitChain>): _225.ResponseInitChain;
            fromAmino(object: _225.ResponseInitChainAmino): _225.ResponseInitChain;
            toAmino(message: _225.ResponseInitChain): _225.ResponseInitChainAmino;
            fromAminoMsg(object: _225.ResponseInitChainAminoMsg): _225.ResponseInitChain;
            fromProtoMsg(message: _225.ResponseInitChainProtoMsg): _225.ResponseInitChain;
            toProto(message: _225.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _225.ResponseInitChain): _225.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            is(o: any): o is _225.ResponseQuery;
            isSDK(o: any): o is _225.ResponseQuerySDKType;
            isAmino(o: any): o is _225.ResponseQueryAmino;
            encode(message: _225.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseQuery;
            fromPartial(object: Partial<_225.ResponseQuery>): _225.ResponseQuery;
            fromAmino(object: _225.ResponseQueryAmino): _225.ResponseQuery;
            toAmino(message: _225.ResponseQuery): _225.ResponseQueryAmino;
            fromAminoMsg(object: _225.ResponseQueryAminoMsg): _225.ResponseQuery;
            fromProtoMsg(message: _225.ResponseQueryProtoMsg): _225.ResponseQuery;
            toProto(message: _225.ResponseQuery): Uint8Array;
            toProtoMsg(message: _225.ResponseQuery): _225.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            is(o: any): o is _225.ResponseBeginBlock;
            isSDK(o: any): o is _225.ResponseBeginBlockSDKType;
            isAmino(o: any): o is _225.ResponseBeginBlockAmino;
            encode(message: _225.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseBeginBlock;
            fromPartial(object: Partial<_225.ResponseBeginBlock>): _225.ResponseBeginBlock;
            fromAmino(object: _225.ResponseBeginBlockAmino): _225.ResponseBeginBlock;
            toAmino(message: _225.ResponseBeginBlock): _225.ResponseBeginBlockAmino;
            fromAminoMsg(object: _225.ResponseBeginBlockAminoMsg): _225.ResponseBeginBlock;
            fromProtoMsg(message: _225.ResponseBeginBlockProtoMsg): _225.ResponseBeginBlock;
            toProto(message: _225.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _225.ResponseBeginBlock): _225.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            is(o: any): o is _225.ResponseCheckTx;
            isSDK(o: any): o is _225.ResponseCheckTxSDKType;
            isAmino(o: any): o is _225.ResponseCheckTxAmino;
            encode(message: _225.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseCheckTx;
            fromPartial(object: Partial<_225.ResponseCheckTx>): _225.ResponseCheckTx;
            fromAmino(object: _225.ResponseCheckTxAmino): _225.ResponseCheckTx;
            toAmino(message: _225.ResponseCheckTx): _225.ResponseCheckTxAmino;
            fromAminoMsg(object: _225.ResponseCheckTxAminoMsg): _225.ResponseCheckTx;
            fromProtoMsg(message: _225.ResponseCheckTxProtoMsg): _225.ResponseCheckTx;
            toProto(message: _225.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _225.ResponseCheckTx): _225.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            is(o: any): o is _225.ResponseDeliverTx;
            isSDK(o: any): o is _225.ResponseDeliverTxSDKType;
            isAmino(o: any): o is _225.ResponseDeliverTxAmino;
            encode(message: _225.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseDeliverTx;
            fromPartial(object: Partial<_225.ResponseDeliverTx>): _225.ResponseDeliverTx;
            fromAmino(object: _225.ResponseDeliverTxAmino): _225.ResponseDeliverTx;
            toAmino(message: _225.ResponseDeliverTx): _225.ResponseDeliverTxAmino;
            fromAminoMsg(object: _225.ResponseDeliverTxAminoMsg): _225.ResponseDeliverTx;
            fromProtoMsg(message: _225.ResponseDeliverTxProtoMsg): _225.ResponseDeliverTx;
            toProto(message: _225.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _225.ResponseDeliverTx): _225.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            is(o: any): o is _225.ResponseEndBlock;
            isSDK(o: any): o is _225.ResponseEndBlockSDKType;
            isAmino(o: any): o is _225.ResponseEndBlockAmino;
            encode(message: _225.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseEndBlock;
            fromPartial(object: Partial<_225.ResponseEndBlock>): _225.ResponseEndBlock;
            fromAmino(object: _225.ResponseEndBlockAmino): _225.ResponseEndBlock;
            toAmino(message: _225.ResponseEndBlock): _225.ResponseEndBlockAmino;
            fromAminoMsg(object: _225.ResponseEndBlockAminoMsg): _225.ResponseEndBlock;
            fromProtoMsg(message: _225.ResponseEndBlockProtoMsg): _225.ResponseEndBlock;
            toProto(message: _225.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _225.ResponseEndBlock): _225.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            is(o: any): o is _225.ResponseCommit;
            isSDK(o: any): o is _225.ResponseCommitSDKType;
            isAmino(o: any): o is _225.ResponseCommitAmino;
            encode(message: _225.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseCommit;
            fromPartial(object: Partial<_225.ResponseCommit>): _225.ResponseCommit;
            fromAmino(object: _225.ResponseCommitAmino): _225.ResponseCommit;
            toAmino(message: _225.ResponseCommit): _225.ResponseCommitAmino;
            fromAminoMsg(object: _225.ResponseCommitAminoMsg): _225.ResponseCommit;
            fromProtoMsg(message: _225.ResponseCommitProtoMsg): _225.ResponseCommit;
            toProto(message: _225.ResponseCommit): Uint8Array;
            toProtoMsg(message: _225.ResponseCommit): _225.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            is(o: any): o is _225.ResponseListSnapshots;
            isSDK(o: any): o is _225.ResponseListSnapshotsSDKType;
            isAmino(o: any): o is _225.ResponseListSnapshotsAmino;
            encode(message: _225.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseListSnapshots;
            fromPartial(object: Partial<_225.ResponseListSnapshots>): _225.ResponseListSnapshots;
            fromAmino(object: _225.ResponseListSnapshotsAmino): _225.ResponseListSnapshots;
            toAmino(message: _225.ResponseListSnapshots): _225.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _225.ResponseListSnapshotsAminoMsg): _225.ResponseListSnapshots;
            fromProtoMsg(message: _225.ResponseListSnapshotsProtoMsg): _225.ResponseListSnapshots;
            toProto(message: _225.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _225.ResponseListSnapshots): _225.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            is(o: any): o is _225.ResponseOfferSnapshot;
            isSDK(o: any): o is _225.ResponseOfferSnapshotSDKType;
            isAmino(o: any): o is _225.ResponseOfferSnapshotAmino;
            encode(message: _225.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseOfferSnapshot;
            fromPartial(object: Partial<_225.ResponseOfferSnapshot>): _225.ResponseOfferSnapshot;
            fromAmino(object: _225.ResponseOfferSnapshotAmino): _225.ResponseOfferSnapshot;
            toAmino(message: _225.ResponseOfferSnapshot): _225.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _225.ResponseOfferSnapshotAminoMsg): _225.ResponseOfferSnapshot;
            fromProtoMsg(message: _225.ResponseOfferSnapshotProtoMsg): _225.ResponseOfferSnapshot;
            toProto(message: _225.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _225.ResponseOfferSnapshot): _225.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _225.ResponseLoadSnapshotChunk;
            isSDK(o: any): o is _225.ResponseLoadSnapshotChunkSDKType;
            isAmino(o: any): o is _225.ResponseLoadSnapshotChunkAmino;
            encode(message: _225.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_225.ResponseLoadSnapshotChunk>): _225.ResponseLoadSnapshotChunk;
            fromAmino(object: _225.ResponseLoadSnapshotChunkAmino): _225.ResponseLoadSnapshotChunk;
            toAmino(message: _225.ResponseLoadSnapshotChunk): _225.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _225.ResponseLoadSnapshotChunkAminoMsg): _225.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _225.ResponseLoadSnapshotChunkProtoMsg): _225.ResponseLoadSnapshotChunk;
            toProto(message: _225.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _225.ResponseLoadSnapshotChunk): _225.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            is(o: any): o is _225.ResponseApplySnapshotChunk;
            isSDK(o: any): o is _225.ResponseApplySnapshotChunkSDKType;
            isAmino(o: any): o is _225.ResponseApplySnapshotChunkAmino;
            encode(message: _225.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_225.ResponseApplySnapshotChunk>): _225.ResponseApplySnapshotChunk;
            fromAmino(object: _225.ResponseApplySnapshotChunkAmino): _225.ResponseApplySnapshotChunk;
            toAmino(message: _225.ResponseApplySnapshotChunk): _225.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _225.ResponseApplySnapshotChunkAminoMsg): _225.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _225.ResponseApplySnapshotChunkProtoMsg): _225.ResponseApplySnapshotChunk;
            toProto(message: _225.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _225.ResponseApplySnapshotChunk): _225.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            is(o: any): o is _225.ResponsePrepareProposal;
            isSDK(o: any): o is _225.ResponsePrepareProposalSDKType;
            isAmino(o: any): o is _225.ResponsePrepareProposalAmino;
            encode(message: _225.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponsePrepareProposal;
            fromPartial(object: Partial<_225.ResponsePrepareProposal>): _225.ResponsePrepareProposal;
            fromAmino(object: _225.ResponsePrepareProposalAmino): _225.ResponsePrepareProposal;
            toAmino(message: _225.ResponsePrepareProposal): _225.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _225.ResponsePrepareProposalAminoMsg): _225.ResponsePrepareProposal;
            fromProtoMsg(message: _225.ResponsePrepareProposalProtoMsg): _225.ResponsePrepareProposal;
            toProto(message: _225.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _225.ResponsePrepareProposal): _225.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            is(o: any): o is _225.ResponseProcessProposal;
            isSDK(o: any): o is _225.ResponseProcessProposalSDKType;
            isAmino(o: any): o is _225.ResponseProcessProposalAmino;
            encode(message: _225.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ResponseProcessProposal;
            fromPartial(object: Partial<_225.ResponseProcessProposal>): _225.ResponseProcessProposal;
            fromAmino(object: _225.ResponseProcessProposalAmino): _225.ResponseProcessProposal;
            toAmino(message: _225.ResponseProcessProposal): _225.ResponseProcessProposalAmino;
            fromAminoMsg(object: _225.ResponseProcessProposalAminoMsg): _225.ResponseProcessProposal;
            fromProtoMsg(message: _225.ResponseProcessProposalProtoMsg): _225.ResponseProcessProposal;
            toProto(message: _225.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _225.ResponseProcessProposal): _225.ResponseProcessProposalProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            is(o: any): o is _225.CommitInfo;
            isSDK(o: any): o is _225.CommitInfoSDKType;
            isAmino(o: any): o is _225.CommitInfoAmino;
            encode(message: _225.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.CommitInfo;
            fromPartial(object: Partial<_225.CommitInfo>): _225.CommitInfo;
            fromAmino(object: _225.CommitInfoAmino): _225.CommitInfo;
            toAmino(message: _225.CommitInfo): _225.CommitInfoAmino;
            fromAminoMsg(object: _225.CommitInfoAminoMsg): _225.CommitInfo;
            fromProtoMsg(message: _225.CommitInfoProtoMsg): _225.CommitInfo;
            toProto(message: _225.CommitInfo): Uint8Array;
            toProtoMsg(message: _225.CommitInfo): _225.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            is(o: any): o is _225.ExtendedCommitInfo;
            isSDK(o: any): o is _225.ExtendedCommitInfoSDKType;
            isAmino(o: any): o is _225.ExtendedCommitInfoAmino;
            encode(message: _225.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ExtendedCommitInfo;
            fromPartial(object: Partial<_225.ExtendedCommitInfo>): _225.ExtendedCommitInfo;
            fromAmino(object: _225.ExtendedCommitInfoAmino): _225.ExtendedCommitInfo;
            toAmino(message: _225.ExtendedCommitInfo): _225.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _225.ExtendedCommitInfoAminoMsg): _225.ExtendedCommitInfo;
            fromProtoMsg(message: _225.ExtendedCommitInfoProtoMsg): _225.ExtendedCommitInfo;
            toProto(message: _225.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _225.ExtendedCommitInfo): _225.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            is(o: any): o is _225.Event;
            isSDK(o: any): o is _225.EventSDKType;
            isAmino(o: any): o is _225.EventAmino;
            encode(message: _225.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.Event;
            fromPartial(object: Partial<_225.Event>): _225.Event;
            fromAmino(object: _225.EventAmino): _225.Event;
            toAmino(message: _225.Event): _225.EventAmino;
            fromAminoMsg(object: _225.EventAminoMsg): _225.Event;
            fromProtoMsg(message: _225.EventProtoMsg): _225.Event;
            toProto(message: _225.Event): Uint8Array;
            toProtoMsg(message: _225.Event): _225.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            is(o: any): o is _225.EventAttribute;
            isSDK(o: any): o is _225.EventAttributeSDKType;
            isAmino(o: any): o is _225.EventAttributeAmino;
            encode(message: _225.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.EventAttribute;
            fromPartial(object: Partial<_225.EventAttribute>): _225.EventAttribute;
            fromAmino(object: _225.EventAttributeAmino): _225.EventAttribute;
            toAmino(message: _225.EventAttribute): _225.EventAttributeAmino;
            fromAminoMsg(object: _225.EventAttributeAminoMsg): _225.EventAttribute;
            fromProtoMsg(message: _225.EventAttributeProtoMsg): _225.EventAttribute;
            toProto(message: _225.EventAttribute): Uint8Array;
            toProtoMsg(message: _225.EventAttribute): _225.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            is(o: any): o is _225.TxResult;
            isSDK(o: any): o is _225.TxResultSDKType;
            isAmino(o: any): o is _225.TxResultAmino;
            encode(message: _225.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.TxResult;
            fromPartial(object: Partial<_225.TxResult>): _225.TxResult;
            fromAmino(object: _225.TxResultAmino): _225.TxResult;
            toAmino(message: _225.TxResult): _225.TxResultAmino;
            fromAminoMsg(object: _225.TxResultAminoMsg): _225.TxResult;
            fromProtoMsg(message: _225.TxResultProtoMsg): _225.TxResult;
            toProto(message: _225.TxResult): Uint8Array;
            toProtoMsg(message: _225.TxResult): _225.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _225.Validator;
            isSDK(o: any): o is _225.ValidatorSDKType;
            isAmino(o: any): o is _225.ValidatorAmino;
            encode(message: _225.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.Validator;
            fromPartial(object: Partial<_225.Validator>): _225.Validator;
            fromAmino(object: _225.ValidatorAmino): _225.Validator;
            toAmino(message: _225.Validator): _225.ValidatorAmino;
            fromAminoMsg(object: _225.ValidatorAminoMsg): _225.Validator;
            fromProtoMsg(message: _225.ValidatorProtoMsg): _225.Validator;
            toProto(message: _225.Validator): Uint8Array;
            toProtoMsg(message: _225.Validator): _225.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            is(o: any): o is _225.ValidatorUpdate;
            isSDK(o: any): o is _225.ValidatorUpdateSDKType;
            isAmino(o: any): o is _225.ValidatorUpdateAmino;
            encode(message: _225.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ValidatorUpdate;
            fromPartial(object: Partial<_225.ValidatorUpdate>): _225.ValidatorUpdate;
            fromAmino(object: _225.ValidatorUpdateAmino): _225.ValidatorUpdate;
            toAmino(message: _225.ValidatorUpdate): _225.ValidatorUpdateAmino;
            fromAminoMsg(object: _225.ValidatorUpdateAminoMsg): _225.ValidatorUpdate;
            fromProtoMsg(message: _225.ValidatorUpdateProtoMsg): _225.ValidatorUpdate;
            toProto(message: _225.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _225.ValidatorUpdate): _225.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            is(o: any): o is _225.VoteInfo;
            isSDK(o: any): o is _225.VoteInfoSDKType;
            isAmino(o: any): o is _225.VoteInfoAmino;
            encode(message: _225.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.VoteInfo;
            fromPartial(object: Partial<_225.VoteInfo>): _225.VoteInfo;
            fromAmino(object: _225.VoteInfoAmino): _225.VoteInfo;
            toAmino(message: _225.VoteInfo): _225.VoteInfoAmino;
            fromAminoMsg(object: _225.VoteInfoAminoMsg): _225.VoteInfo;
            fromProtoMsg(message: _225.VoteInfoProtoMsg): _225.VoteInfo;
            toProto(message: _225.VoteInfo): Uint8Array;
            toProtoMsg(message: _225.VoteInfo): _225.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            is(o: any): o is _225.ExtendedVoteInfo;
            isSDK(o: any): o is _225.ExtendedVoteInfoSDKType;
            isAmino(o: any): o is _225.ExtendedVoteInfoAmino;
            encode(message: _225.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.ExtendedVoteInfo;
            fromPartial(object: Partial<_225.ExtendedVoteInfo>): _225.ExtendedVoteInfo;
            fromAmino(object: _225.ExtendedVoteInfoAmino): _225.ExtendedVoteInfo;
            toAmino(message: _225.ExtendedVoteInfo): _225.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _225.ExtendedVoteInfoAminoMsg): _225.ExtendedVoteInfo;
            fromProtoMsg(message: _225.ExtendedVoteInfoProtoMsg): _225.ExtendedVoteInfo;
            toProto(message: _225.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _225.ExtendedVoteInfo): _225.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            is(o: any): o is _225.Misbehavior;
            isSDK(o: any): o is _225.MisbehaviorSDKType;
            isAmino(o: any): o is _225.MisbehaviorAmino;
            encode(message: _225.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.Misbehavior;
            fromPartial(object: Partial<_225.Misbehavior>): _225.Misbehavior;
            fromAmino(object: _225.MisbehaviorAmino): _225.Misbehavior;
            toAmino(message: _225.Misbehavior): _225.MisbehaviorAmino;
            fromAminoMsg(object: _225.MisbehaviorAminoMsg): _225.Misbehavior;
            fromProtoMsg(message: _225.MisbehaviorProtoMsg): _225.Misbehavior;
            toProto(message: _225.Misbehavior): Uint8Array;
            toProtoMsg(message: _225.Misbehavior): _225.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            is(o: any): o is _225.Snapshot;
            isSDK(o: any): o is _225.SnapshotSDKType;
            isAmino(o: any): o is _225.SnapshotAmino;
            encode(message: _225.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _225.Snapshot;
            fromPartial(object: Partial<_225.Snapshot>): _225.Snapshot;
            fromAmino(object: _225.SnapshotAmino): _225.Snapshot;
            toAmino(message: _225.Snapshot): _225.SnapshotAmino;
            fromAminoMsg(object: _225.SnapshotAminoMsg): _225.Snapshot;
            fromProtoMsg(message: _225.SnapshotProtoMsg): _225.Snapshot;
            toProto(message: _225.Snapshot): Uint8Array;
            toProtoMsg(message: _225.Snapshot): _225.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            is(o: any): o is _227.Proof;
            isSDK(o: any): o is _227.ProofSDKType;
            isAmino(o: any): o is _227.ProofAmino;
            encode(message: _227.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _227.Proof;
            fromPartial(object: Partial<_227.Proof>): _227.Proof;
            fromAmino(object: _227.ProofAmino): _227.Proof;
            toAmino(message: _227.Proof): _227.ProofAmino;
            fromAminoMsg(object: _227.ProofAminoMsg): _227.Proof;
            fromProtoMsg(message: _227.ProofProtoMsg): _227.Proof;
            toProto(message: _227.Proof): Uint8Array;
            toProtoMsg(message: _227.Proof): _227.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            is(o: any): o is _227.ValueOp;
            isSDK(o: any): o is _227.ValueOpSDKType;
            isAmino(o: any): o is _227.ValueOpAmino;
            encode(message: _227.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _227.ValueOp;
            fromPartial(object: Partial<_227.ValueOp>): _227.ValueOp;
            fromAmino(object: _227.ValueOpAmino): _227.ValueOp;
            toAmino(message: _227.ValueOp): _227.ValueOpAmino;
            fromAminoMsg(object: _227.ValueOpAminoMsg): _227.ValueOp;
            fromProtoMsg(message: _227.ValueOpProtoMsg): _227.ValueOp;
            toProto(message: _227.ValueOp): Uint8Array;
            toProtoMsg(message: _227.ValueOp): _227.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            is(o: any): o is _227.DominoOp;
            isSDK(o: any): o is _227.DominoOpSDKType;
            isAmino(o: any): o is _227.DominoOpAmino;
            encode(message: _227.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _227.DominoOp;
            fromPartial(object: Partial<_227.DominoOp>): _227.DominoOp;
            fromAmino(object: _227.DominoOpAmino): _227.DominoOp;
            toAmino(message: _227.DominoOp): _227.DominoOpAmino;
            fromAminoMsg(object: _227.DominoOpAminoMsg): _227.DominoOp;
            fromProtoMsg(message: _227.DominoOpProtoMsg): _227.DominoOp;
            toProto(message: _227.DominoOp): Uint8Array;
            toProtoMsg(message: _227.DominoOp): _227.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            is(o: any): o is _227.ProofOp;
            isSDK(o: any): o is _227.ProofOpSDKType;
            isAmino(o: any): o is _227.ProofOpAmino;
            encode(message: _227.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _227.ProofOp;
            fromPartial(object: Partial<_227.ProofOp>): _227.ProofOp;
            fromAmino(object: _227.ProofOpAmino): _227.ProofOp;
            toAmino(message: _227.ProofOp): _227.ProofOpAmino;
            fromAminoMsg(object: _227.ProofOpAminoMsg): _227.ProofOp;
            fromProtoMsg(message: _227.ProofOpProtoMsg): _227.ProofOp;
            toProto(message: _227.ProofOp): Uint8Array;
            toProtoMsg(message: _227.ProofOp): _227.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            is(o: any): o is _227.ProofOps;
            isSDK(o: any): o is _227.ProofOpsSDKType;
            isAmino(o: any): o is _227.ProofOpsAmino;
            encode(message: _227.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _227.ProofOps;
            fromPartial(object: Partial<_227.ProofOps>): _227.ProofOps;
            fromAmino(object: _227.ProofOpsAmino): _227.ProofOps;
            toAmino(message: _227.ProofOps): _227.ProofOpsAmino;
            fromAminoMsg(object: _227.ProofOpsAminoMsg): _227.ProofOps;
            fromProtoMsg(message: _227.ProofOpsProtoMsg): _227.ProofOps;
            toProto(message: _227.ProofOps): Uint8Array;
            toProtoMsg(message: _227.ProofOps): _227.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            is(o: any): o is _226.PublicKey;
            isSDK(o: any): o is _226.PublicKeySDKType;
            isAmino(o: any): o is _226.PublicKeyAmino;
            encode(message: _226.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _226.PublicKey;
            fromPartial(object: Partial<_226.PublicKey>): _226.PublicKey;
            fromAmino(object: _226.PublicKeyAmino): _226.PublicKey;
            toAmino(message: _226.PublicKey): _226.PublicKeyAmino;
            fromAminoMsg(object: _226.PublicKeyAminoMsg): _226.PublicKey;
            fromProtoMsg(message: _226.PublicKeyProtoMsg): _226.PublicKey;
            toProto(message: _226.PublicKey): Uint8Array;
            toProtoMsg(message: _226.PublicKey): _226.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                is(o: any): o is _228.BitArray;
                isSDK(o: any): o is _228.BitArraySDKType;
                isAmino(o: any): o is _228.BitArrayAmino;
                encode(message: _228.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _228.BitArray;
                fromPartial(object: Partial<_228.BitArray>): _228.BitArray;
                fromAmino(object: _228.BitArrayAmino): _228.BitArray;
                toAmino(message: _228.BitArray): _228.BitArrayAmino;
                fromAminoMsg(object: _228.BitArrayAminoMsg): _228.BitArray;
                fromProtoMsg(message: _228.BitArrayProtoMsg): _228.BitArray;
                toProto(message: _228.BitArray): Uint8Array;
                toProtoMsg(message: _228.BitArray): _228.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            is(o: any): o is _229.NetAddress;
            isSDK(o: any): o is _229.NetAddressSDKType;
            isAmino(o: any): o is _229.NetAddressAmino;
            encode(message: _229.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _229.NetAddress;
            fromPartial(object: Partial<_229.NetAddress>): _229.NetAddress;
            fromAmino(object: _229.NetAddressAmino): _229.NetAddress;
            toAmino(message: _229.NetAddress): _229.NetAddressAmino;
            fromAminoMsg(object: _229.NetAddressAminoMsg): _229.NetAddress;
            fromProtoMsg(message: _229.NetAddressProtoMsg): _229.NetAddress;
            toProto(message: _229.NetAddress): Uint8Array;
            toProtoMsg(message: _229.NetAddress): _229.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            is(o: any): o is _229.ProtocolVersion;
            isSDK(o: any): o is _229.ProtocolVersionSDKType;
            isAmino(o: any): o is _229.ProtocolVersionAmino;
            encode(message: _229.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _229.ProtocolVersion;
            fromPartial(object: Partial<_229.ProtocolVersion>): _229.ProtocolVersion;
            fromAmino(object: _229.ProtocolVersionAmino): _229.ProtocolVersion;
            toAmino(message: _229.ProtocolVersion): _229.ProtocolVersionAmino;
            fromAminoMsg(object: _229.ProtocolVersionAminoMsg): _229.ProtocolVersion;
            fromProtoMsg(message: _229.ProtocolVersionProtoMsg): _229.ProtocolVersion;
            toProto(message: _229.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _229.ProtocolVersion): _229.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            is(o: any): o is _229.DefaultNodeInfo;
            isSDK(o: any): o is _229.DefaultNodeInfoSDKType;
            isAmino(o: any): o is _229.DefaultNodeInfoAmino;
            encode(message: _229.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _229.DefaultNodeInfo;
            fromPartial(object: Partial<_229.DefaultNodeInfo>): _229.DefaultNodeInfo;
            fromAmino(object: _229.DefaultNodeInfoAmino): _229.DefaultNodeInfo;
            toAmino(message: _229.DefaultNodeInfo): _229.DefaultNodeInfoAmino;
            fromAminoMsg(object: _229.DefaultNodeInfoAminoMsg): _229.DefaultNodeInfo;
            fromProtoMsg(message: _229.DefaultNodeInfoProtoMsg): _229.DefaultNodeInfo;
            toProto(message: _229.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _229.DefaultNodeInfo): _229.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            is(o: any): o is _229.DefaultNodeInfoOther;
            isSDK(o: any): o is _229.DefaultNodeInfoOtherSDKType;
            isAmino(o: any): o is _229.DefaultNodeInfoOtherAmino;
            encode(message: _229.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _229.DefaultNodeInfoOther;
            fromPartial(object: Partial<_229.DefaultNodeInfoOther>): _229.DefaultNodeInfoOther;
            fromAmino(object: _229.DefaultNodeInfoOtherAmino): _229.DefaultNodeInfoOther;
            toAmino(message: _229.DefaultNodeInfoOther): _229.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _229.DefaultNodeInfoOtherAminoMsg): _229.DefaultNodeInfoOther;
            fromProtoMsg(message: _229.DefaultNodeInfoOtherProtoMsg): _229.DefaultNodeInfoOther;
            toProto(message: _229.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _229.DefaultNodeInfoOther): _229.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            is(o: any): o is _234.ValidatorSet;
            isSDK(o: any): o is _234.ValidatorSetSDKType;
            isAmino(o: any): o is _234.ValidatorSetAmino;
            encode(message: _234.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _234.ValidatorSet;
            fromPartial(object: Partial<_234.ValidatorSet>): _234.ValidatorSet;
            fromAmino(object: _234.ValidatorSetAmino): _234.ValidatorSet;
            toAmino(message: _234.ValidatorSet): _234.ValidatorSetAmino;
            fromAminoMsg(object: _234.ValidatorSetAminoMsg): _234.ValidatorSet;
            fromProtoMsg(message: _234.ValidatorSetProtoMsg): _234.ValidatorSet;
            toProto(message: _234.ValidatorSet): Uint8Array;
            toProtoMsg(message: _234.ValidatorSet): _234.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            is(o: any): o is _234.Validator;
            isSDK(o: any): o is _234.ValidatorSDKType;
            isAmino(o: any): o is _234.ValidatorAmino;
            encode(message: _234.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _234.Validator;
            fromPartial(object: Partial<_234.Validator>): _234.Validator;
            fromAmino(object: _234.ValidatorAmino): _234.Validator;
            toAmino(message: _234.Validator): _234.ValidatorAmino;
            fromAminoMsg(object: _234.ValidatorAminoMsg): _234.Validator;
            fromProtoMsg(message: _234.ValidatorProtoMsg): _234.Validator;
            toProto(message: _234.Validator): Uint8Array;
            toProtoMsg(message: _234.Validator): _234.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            is(o: any): o is _234.SimpleValidator;
            isSDK(o: any): o is _234.SimpleValidatorSDKType;
            isAmino(o: any): o is _234.SimpleValidatorAmino;
            encode(message: _234.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _234.SimpleValidator;
            fromPartial(object: Partial<_234.SimpleValidator>): _234.SimpleValidator;
            fromAmino(object: _234.SimpleValidatorAmino): _234.SimpleValidator;
            toAmino(message: _234.SimpleValidator): _234.SimpleValidatorAmino;
            fromAminoMsg(object: _234.SimpleValidatorAminoMsg): _234.SimpleValidator;
            fromProtoMsg(message: _234.SimpleValidatorProtoMsg): _234.SimpleValidator;
            toProto(message: _234.SimpleValidator): Uint8Array;
            toProtoMsg(message: _234.SimpleValidator): _234.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _233.BlockIDFlag;
        blockIDFlagToJSON(object: _233.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _233.SignedMsgType;
        signedMsgTypeToJSON(object: _233.SignedMsgType): string;
        BlockIDFlag: typeof _233.BlockIDFlag;
        BlockIDFlagSDKType: typeof _233.BlockIDFlag;
        BlockIDFlagAmino: typeof _233.BlockIDFlag;
        SignedMsgType: typeof _233.SignedMsgType;
        SignedMsgTypeSDKType: typeof _233.SignedMsgType;
        SignedMsgTypeAmino: typeof _233.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            is(o: any): o is _233.PartSetHeader;
            isSDK(o: any): o is _233.PartSetHeaderSDKType;
            isAmino(o: any): o is _233.PartSetHeaderAmino;
            encode(message: _233.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.PartSetHeader;
            fromPartial(object: Partial<_233.PartSetHeader>): _233.PartSetHeader;
            fromAmino(object: _233.PartSetHeaderAmino): _233.PartSetHeader;
            toAmino(message: _233.PartSetHeader): _233.PartSetHeaderAmino;
            fromAminoMsg(object: _233.PartSetHeaderAminoMsg): _233.PartSetHeader;
            fromProtoMsg(message: _233.PartSetHeaderProtoMsg): _233.PartSetHeader;
            toProto(message: _233.PartSetHeader): Uint8Array;
            toProtoMsg(message: _233.PartSetHeader): _233.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            is(o: any): o is _233.Part;
            isSDK(o: any): o is _233.PartSDKType;
            isAmino(o: any): o is _233.PartAmino;
            encode(message: _233.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.Part;
            fromPartial(object: Partial<_233.Part>): _233.Part;
            fromAmino(object: _233.PartAmino): _233.Part;
            toAmino(message: _233.Part): _233.PartAmino;
            fromAminoMsg(object: _233.PartAminoMsg): _233.Part;
            fromProtoMsg(message: _233.PartProtoMsg): _233.Part;
            toProto(message: _233.Part): Uint8Array;
            toProtoMsg(message: _233.Part): _233.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            is(o: any): o is _233.BlockID;
            isSDK(o: any): o is _233.BlockIDSDKType;
            isAmino(o: any): o is _233.BlockIDAmino;
            encode(message: _233.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.BlockID;
            fromPartial(object: Partial<_233.BlockID>): _233.BlockID;
            fromAmino(object: _233.BlockIDAmino): _233.BlockID;
            toAmino(message: _233.BlockID): _233.BlockIDAmino;
            fromAminoMsg(object: _233.BlockIDAminoMsg): _233.BlockID;
            fromProtoMsg(message: _233.BlockIDProtoMsg): _233.BlockID;
            toProto(message: _233.BlockID): Uint8Array;
            toProtoMsg(message: _233.BlockID): _233.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            is(o: any): o is _233.Header;
            isSDK(o: any): o is _233.HeaderSDKType;
            isAmino(o: any): o is _233.HeaderAmino;
            encode(message: _233.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.Header;
            fromPartial(object: Partial<_233.Header>): _233.Header;
            fromAmino(object: _233.HeaderAmino): _233.Header;
            toAmino(message: _233.Header): _233.HeaderAmino;
            fromAminoMsg(object: _233.HeaderAminoMsg): _233.Header;
            fromProtoMsg(message: _233.HeaderProtoMsg): _233.Header;
            toProto(message: _233.Header): Uint8Array;
            toProtoMsg(message: _233.Header): _233.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            is(o: any): o is _233.Data;
            isSDK(o: any): o is _233.DataSDKType;
            isAmino(o: any): o is _233.DataAmino;
            encode(message: _233.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.Data;
            fromPartial(object: Partial<_233.Data>): _233.Data;
            fromAmino(object: _233.DataAmino): _233.Data;
            toAmino(message: _233.Data): _233.DataAmino;
            fromAminoMsg(object: _233.DataAminoMsg): _233.Data;
            fromProtoMsg(message: _233.DataProtoMsg): _233.Data;
            toProto(message: _233.Data): Uint8Array;
            toProtoMsg(message: _233.Data): _233.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            is(o: any): o is _233.Vote;
            isSDK(o: any): o is _233.VoteSDKType;
            isAmino(o: any): o is _233.VoteAmino;
            encode(message: _233.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.Vote;
            fromPartial(object: Partial<_233.Vote>): _233.Vote;
            fromAmino(object: _233.VoteAmino): _233.Vote;
            toAmino(message: _233.Vote): _233.VoteAmino;
            fromAminoMsg(object: _233.VoteAminoMsg): _233.Vote;
            fromProtoMsg(message: _233.VoteProtoMsg): _233.Vote;
            toProto(message: _233.Vote): Uint8Array;
            toProtoMsg(message: _233.Vote): _233.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            is(o: any): o is _233.Commit;
            isSDK(o: any): o is _233.CommitSDKType;
            isAmino(o: any): o is _233.CommitAmino;
            encode(message: _233.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.Commit;
            fromPartial(object: Partial<_233.Commit>): _233.Commit;
            fromAmino(object: _233.CommitAmino): _233.Commit;
            toAmino(message: _233.Commit): _233.CommitAmino;
            fromAminoMsg(object: _233.CommitAminoMsg): _233.Commit;
            fromProtoMsg(message: _233.CommitProtoMsg): _233.Commit;
            toProto(message: _233.Commit): Uint8Array;
            toProtoMsg(message: _233.Commit): _233.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            is(o: any): o is _233.CommitSig;
            isSDK(o: any): o is _233.CommitSigSDKType;
            isAmino(o: any): o is _233.CommitSigAmino;
            encode(message: _233.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.CommitSig;
            fromPartial(object: Partial<_233.CommitSig>): _233.CommitSig;
            fromAmino(object: _233.CommitSigAmino): _233.CommitSig;
            toAmino(message: _233.CommitSig): _233.CommitSigAmino;
            fromAminoMsg(object: _233.CommitSigAminoMsg): _233.CommitSig;
            fromProtoMsg(message: _233.CommitSigProtoMsg): _233.CommitSig;
            toProto(message: _233.CommitSig): Uint8Array;
            toProtoMsg(message: _233.CommitSig): _233.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            is(o: any): o is _233.Proposal;
            isSDK(o: any): o is _233.ProposalSDKType;
            isAmino(o: any): o is _233.ProposalAmino;
            encode(message: _233.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.Proposal;
            fromPartial(object: Partial<_233.Proposal>): _233.Proposal;
            fromAmino(object: _233.ProposalAmino): _233.Proposal;
            toAmino(message: _233.Proposal): _233.ProposalAmino;
            fromAminoMsg(object: _233.ProposalAminoMsg): _233.Proposal;
            fromProtoMsg(message: _233.ProposalProtoMsg): _233.Proposal;
            toProto(message: _233.Proposal): Uint8Array;
            toProtoMsg(message: _233.Proposal): _233.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            is(o: any): o is _233.SignedHeader;
            isSDK(o: any): o is _233.SignedHeaderSDKType;
            isAmino(o: any): o is _233.SignedHeaderAmino;
            encode(message: _233.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.SignedHeader;
            fromPartial(object: Partial<_233.SignedHeader>): _233.SignedHeader;
            fromAmino(object: _233.SignedHeaderAmino): _233.SignedHeader;
            toAmino(message: _233.SignedHeader): _233.SignedHeaderAmino;
            fromAminoMsg(object: _233.SignedHeaderAminoMsg): _233.SignedHeader;
            fromProtoMsg(message: _233.SignedHeaderProtoMsg): _233.SignedHeader;
            toProto(message: _233.SignedHeader): Uint8Array;
            toProtoMsg(message: _233.SignedHeader): _233.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            is(o: any): o is _233.LightBlock;
            isSDK(o: any): o is _233.LightBlockSDKType;
            isAmino(o: any): o is _233.LightBlockAmino;
            encode(message: _233.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.LightBlock;
            fromPartial(object: Partial<_233.LightBlock>): _233.LightBlock;
            fromAmino(object: _233.LightBlockAmino): _233.LightBlock;
            toAmino(message: _233.LightBlock): _233.LightBlockAmino;
            fromAminoMsg(object: _233.LightBlockAminoMsg): _233.LightBlock;
            fromProtoMsg(message: _233.LightBlockProtoMsg): _233.LightBlock;
            toProto(message: _233.LightBlock): Uint8Array;
            toProtoMsg(message: _233.LightBlock): _233.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            is(o: any): o is _233.BlockMeta;
            isSDK(o: any): o is _233.BlockMetaSDKType;
            isAmino(o: any): o is _233.BlockMetaAmino;
            encode(message: _233.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.BlockMeta;
            fromPartial(object: Partial<_233.BlockMeta>): _233.BlockMeta;
            fromAmino(object: _233.BlockMetaAmino): _233.BlockMeta;
            toAmino(message: _233.BlockMeta): _233.BlockMetaAmino;
            fromAminoMsg(object: _233.BlockMetaAminoMsg): _233.BlockMeta;
            fromProtoMsg(message: _233.BlockMetaProtoMsg): _233.BlockMeta;
            toProto(message: _233.BlockMeta): Uint8Array;
            toProtoMsg(message: _233.BlockMeta): _233.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            is(o: any): o is _233.TxProof;
            isSDK(o: any): o is _233.TxProofSDKType;
            isAmino(o: any): o is _233.TxProofAmino;
            encode(message: _233.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _233.TxProof;
            fromPartial(object: Partial<_233.TxProof>): _233.TxProof;
            fromAmino(object: _233.TxProofAmino): _233.TxProof;
            toAmino(message: _233.TxProof): _233.TxProofAmino;
            fromAminoMsg(object: _233.TxProofAminoMsg): _233.TxProof;
            fromProtoMsg(message: _233.TxProofProtoMsg): _233.TxProof;
            toProto(message: _233.TxProof): Uint8Array;
            toProtoMsg(message: _233.TxProof): _233.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            is(o: any): o is _232.ConsensusParams;
            isSDK(o: any): o is _232.ConsensusParamsSDKType;
            isAmino(o: any): o is _232.ConsensusParamsAmino;
            encode(message: _232.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _232.ConsensusParams;
            fromPartial(object: Partial<_232.ConsensusParams>): _232.ConsensusParams;
            fromAmino(object: _232.ConsensusParamsAmino): _232.ConsensusParams;
            toAmino(message: _232.ConsensusParams): _232.ConsensusParamsAmino;
            fromAminoMsg(object: _232.ConsensusParamsAminoMsg): _232.ConsensusParams;
            fromProtoMsg(message: _232.ConsensusParamsProtoMsg): _232.ConsensusParams;
            toProto(message: _232.ConsensusParams): Uint8Array;
            toProtoMsg(message: _232.ConsensusParams): _232.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            is(o: any): o is _232.BlockParams;
            isSDK(o: any): o is _232.BlockParamsSDKType;
            isAmino(o: any): o is _232.BlockParamsAmino;
            encode(message: _232.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _232.BlockParams;
            fromPartial(object: Partial<_232.BlockParams>): _232.BlockParams;
            fromAmino(object: _232.BlockParamsAmino): _232.BlockParams;
            toAmino(message: _232.BlockParams): _232.BlockParamsAmino;
            fromAminoMsg(object: _232.BlockParamsAminoMsg): _232.BlockParams;
            fromProtoMsg(message: _232.BlockParamsProtoMsg): _232.BlockParams;
            toProto(message: _232.BlockParams): Uint8Array;
            toProtoMsg(message: _232.BlockParams): _232.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            is(o: any): o is _232.EvidenceParams;
            isSDK(o: any): o is _232.EvidenceParamsSDKType;
            isAmino(o: any): o is _232.EvidenceParamsAmino;
            encode(message: _232.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _232.EvidenceParams;
            fromPartial(object: Partial<_232.EvidenceParams>): _232.EvidenceParams;
            fromAmino(object: _232.EvidenceParamsAmino): _232.EvidenceParams;
            toAmino(message: _232.EvidenceParams): _232.EvidenceParamsAmino;
            fromAminoMsg(object: _232.EvidenceParamsAminoMsg): _232.EvidenceParams;
            fromProtoMsg(message: _232.EvidenceParamsProtoMsg): _232.EvidenceParams;
            toProto(message: _232.EvidenceParams): Uint8Array;
            toProtoMsg(message: _232.EvidenceParams): _232.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            is(o: any): o is _232.ValidatorParams;
            isSDK(o: any): o is _232.ValidatorParamsSDKType;
            isAmino(o: any): o is _232.ValidatorParamsAmino;
            encode(message: _232.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _232.ValidatorParams;
            fromPartial(object: Partial<_232.ValidatorParams>): _232.ValidatorParams;
            fromAmino(object: _232.ValidatorParamsAmino): _232.ValidatorParams;
            toAmino(message: _232.ValidatorParams): _232.ValidatorParamsAmino;
            fromAminoMsg(object: _232.ValidatorParamsAminoMsg): _232.ValidatorParams;
            fromProtoMsg(message: _232.ValidatorParamsProtoMsg): _232.ValidatorParams;
            toProto(message: _232.ValidatorParams): Uint8Array;
            toProtoMsg(message: _232.ValidatorParams): _232.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            is(o: any): o is _232.VersionParams;
            isSDK(o: any): o is _232.VersionParamsSDKType;
            isAmino(o: any): o is _232.VersionParamsAmino;
            encode(message: _232.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _232.VersionParams;
            fromPartial(object: Partial<_232.VersionParams>): _232.VersionParams;
            fromAmino(object: _232.VersionParamsAmino): _232.VersionParams;
            toAmino(message: _232.VersionParams): _232.VersionParamsAmino;
            fromAminoMsg(object: _232.VersionParamsAminoMsg): _232.VersionParams;
            fromProtoMsg(message: _232.VersionParamsProtoMsg): _232.VersionParams;
            toProto(message: _232.VersionParams): Uint8Array;
            toProtoMsg(message: _232.VersionParams): _232.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            is(o: any): o is _232.HashedParams;
            isSDK(o: any): o is _232.HashedParamsSDKType;
            isAmino(o: any): o is _232.HashedParamsAmino;
            encode(message: _232.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _232.HashedParams;
            fromPartial(object: Partial<_232.HashedParams>): _232.HashedParams;
            fromAmino(object: _232.HashedParamsAmino): _232.HashedParams;
            toAmino(message: _232.HashedParams): _232.HashedParamsAmino;
            fromAminoMsg(object: _232.HashedParamsAminoMsg): _232.HashedParams;
            fromProtoMsg(message: _232.HashedParamsProtoMsg): _232.HashedParams;
            toProto(message: _232.HashedParams): Uint8Array;
            toProtoMsg(message: _232.HashedParams): _232.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            is(o: any): o is _231.Evidence;
            isSDK(o: any): o is _231.EvidenceSDKType;
            isAmino(o: any): o is _231.EvidenceAmino;
            encode(message: _231.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _231.Evidence;
            fromPartial(object: Partial<_231.Evidence>): _231.Evidence;
            fromAmino(object: _231.EvidenceAmino): _231.Evidence;
            toAmino(message: _231.Evidence): _231.EvidenceAmino;
            fromAminoMsg(object: _231.EvidenceAminoMsg): _231.Evidence;
            fromProtoMsg(message: _231.EvidenceProtoMsg): _231.Evidence;
            toProto(message: _231.Evidence): Uint8Array;
            toProtoMsg(message: _231.Evidence): _231.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            is(o: any): o is _231.DuplicateVoteEvidence;
            isSDK(o: any): o is _231.DuplicateVoteEvidenceSDKType;
            isAmino(o: any): o is _231.DuplicateVoteEvidenceAmino;
            encode(message: _231.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _231.DuplicateVoteEvidence;
            fromPartial(object: Partial<_231.DuplicateVoteEvidence>): _231.DuplicateVoteEvidence;
            fromAmino(object: _231.DuplicateVoteEvidenceAmino): _231.DuplicateVoteEvidence;
            toAmino(message: _231.DuplicateVoteEvidence): _231.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _231.DuplicateVoteEvidenceAminoMsg): _231.DuplicateVoteEvidence;
            fromProtoMsg(message: _231.DuplicateVoteEvidenceProtoMsg): _231.DuplicateVoteEvidence;
            toProto(message: _231.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _231.DuplicateVoteEvidence): _231.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            is(o: any): o is _231.LightClientAttackEvidence;
            isSDK(o: any): o is _231.LightClientAttackEvidenceSDKType;
            isAmino(o: any): o is _231.LightClientAttackEvidenceAmino;
            encode(message: _231.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _231.LightClientAttackEvidence;
            fromPartial(object: Partial<_231.LightClientAttackEvidence>): _231.LightClientAttackEvidence;
            fromAmino(object: _231.LightClientAttackEvidenceAmino): _231.LightClientAttackEvidence;
            toAmino(message: _231.LightClientAttackEvidence): _231.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _231.LightClientAttackEvidenceAminoMsg): _231.LightClientAttackEvidence;
            fromProtoMsg(message: _231.LightClientAttackEvidenceProtoMsg): _231.LightClientAttackEvidence;
            toProto(message: _231.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _231.LightClientAttackEvidence): _231.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            is(o: any): o is _231.EvidenceList;
            isSDK(o: any): o is _231.EvidenceListSDKType;
            isAmino(o: any): o is _231.EvidenceListAmino;
            encode(message: _231.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _231.EvidenceList;
            fromPartial(object: Partial<_231.EvidenceList>): _231.EvidenceList;
            fromAmino(object: _231.EvidenceListAmino): _231.EvidenceList;
            toAmino(message: _231.EvidenceList): _231.EvidenceListAmino;
            fromAminoMsg(object: _231.EvidenceListAminoMsg): _231.EvidenceList;
            fromProtoMsg(message: _231.EvidenceListProtoMsg): _231.EvidenceList;
            toProto(message: _231.EvidenceList): Uint8Array;
            toProtoMsg(message: _231.EvidenceList): _231.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            is(o: any): o is _230.Block;
            isSDK(o: any): o is _230.BlockSDKType;
            isAmino(o: any): o is _230.BlockAmino;
            encode(message: _230.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _230.Block;
            fromPartial(object: Partial<_230.Block>): _230.Block;
            fromAmino(object: _230.BlockAmino): _230.Block;
            toAmino(message: _230.Block): _230.BlockAmino;
            fromAminoMsg(object: _230.BlockAminoMsg): _230.Block;
            fromProtoMsg(message: _230.BlockProtoMsg): _230.Block;
            toProto(message: _230.Block): Uint8Array;
            toProtoMsg(message: _230.Block): _230.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            is(o: any): o is _235.App;
            isSDK(o: any): o is _235.AppSDKType;
            isAmino(o: any): o is _235.AppAmino;
            encode(message: _235.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _235.App;
            fromPartial(object: Partial<_235.App>): _235.App;
            fromAmino(object: _235.AppAmino): _235.App;
            toAmino(message: _235.App): _235.AppAmino;
            fromAminoMsg(object: _235.AppAminoMsg): _235.App;
            fromProtoMsg(message: _235.AppProtoMsg): _235.App;
            toProto(message: _235.App): Uint8Array;
            toProtoMsg(message: _235.App): _235.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            is(o: any): o is _235.Consensus;
            isSDK(o: any): o is _235.ConsensusSDKType;
            isAmino(o: any): o is _235.ConsensusAmino;
            encode(message: _235.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            decode(input: Uint8Array | import("..").BinaryReader, length?: number): _235.Consensus;
            fromPartial(object: Partial<_235.Consensus>): _235.Consensus;
            fromAmino(object: _235.ConsensusAmino): _235.Consensus;
            toAmino(message: _235.Consensus): _235.ConsensusAmino;
            fromAminoMsg(object: _235.ConsensusAminoMsg): _235.Consensus;
            fromProtoMsg(message: _235.ConsensusProtoMsg): _235.Consensus;
            toProto(message: _235.Consensus): Uint8Array;
            toProtoMsg(message: _235.Consensus): _235.ConsensusProtoMsg;
        };
    };
}
