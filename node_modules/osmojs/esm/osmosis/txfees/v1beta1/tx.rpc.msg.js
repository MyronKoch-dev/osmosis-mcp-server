import { BinaryReader } from "../../../binary";
import { MsgSetFeeTokens, MsgSetFeeTokensResponse } from "./tx";
export class MsgClientImpl {
    rpc;
    constructor(rpc) {
        this.rpc = rpc;
        this.setFeeTokens = this.setFeeTokens.bind(this);
    }
    setFeeTokens(request) {
        const data = MsgSetFeeTokens.encode(request).finish();
        const promise = this.rpc.request("osmosis.txfees.v1beta1.Msg", "SetFeeTokens", data);
        return promise.then(data => MsgSetFeeTokensResponse.decode(new BinaryReader(data)));
    }
}
export const createClientImpl = (rpc) => {
    return new MsgClientImpl(rpc);
};
